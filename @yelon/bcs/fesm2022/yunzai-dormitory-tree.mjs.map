{"version":3,"file":"yunzai-dormitory-tree.mjs","sources":["../../../../packages/bcs/yunzai-dormitory-tree/yunzai-dormitory-tree.schema.ts","../../../../packages/bcs/yunzai-dormitory-tree/yunzai-dormitory-tree.types.ts","../../../../packages/bcs/yunzai-dormitory-tree/yunzai-dormitory-tree.service.ts","../../../../packages/bcs/yunzai-dormitory-tree/yunzai-dormitory-tree.component.ts","../../../../packages/bcs/yunzai-dormitory-tree/yunzai-dormitory-tree.html","../../../../packages/bcs/yunzai-dormitory-tree/yunzai-dormitory-tree.module.ts","../../../../packages/bcs/yunzai-dormitory-tree/yunzai-dormitory-tree.ts"],"sourcesContent":["import { SFSchema } from '@yelon/form';\n\nexport const defaultSchema: SFSchema = {\n  properties: {\n    search: {\n      title: 'search',\n      type: 'string',\n      ui: {\n        i18n: 'input.search',\n        widget: 'string'\n      }\n    }\n  }\n};\n","\nimport { SFSchema } from '@yelon/form';\n\nexport enum YunzaiDormitoryTreeType {\n  BUILDING = 0,\n  BUILDING_FLOOR = 1,\n  BUILDING_FLOORS_ROOMS = 2\n}\n\nexport interface YunzaiDormitoryTreeParam {\n  isPower?: boolean;\n  userId?: string;\n  treeType: YunzaiDormitoryTreeType;\n}\n\nexport interface YunzaiDormitoryTree {\n  buildPid: string;\n  children: YunzaiDormitoryTree[];\n  expanded: boolean;\n  floorPid: string;\n  isExpanded: boolean;\n  isLeaf: boolean;\n  key: string;\n  selected: boolean;\n  title: string;\n  type: string;\n}\n\nexport interface YunzaiDormitoryTreeState {\n  loading: boolean;\n  schema: SFSchema;\n  data: YunzaiDormitoryTree[];\n  dataBackup: YunzaiDormitoryTree[];\n  expandKeys: string[];\n}\n\nexport interface YunzaiDormitoryTreeProps {\n  wrap?: boolean;\n  expand?: boolean;\n  multiple?: boolean;\n  param?: YunzaiDormitoryTreeParam;\n  data?: YunzaiDormitoryTree[];\n}\n","import { Injectable } from '@angular/core';\nimport { map, Observable } from 'rxjs';\n\nimport { _HttpClient } from '@yelon/theme';\nimport { YunzaiResponse } from '@yelon/util';\n\nimport { YunzaiDormitoryTree, YunzaiDormitoryTreeParam, YunzaiDormitoryTreeType } from './yunzai-dormitory-tree.types';\n\n@Injectable({ providedIn: 'root' })\nexport class YunzaiDormitoryTreeService {\n  constructor(private http: _HttpClient) {}\n\n  tree(\n    param: YunzaiDormitoryTreeParam = {\n      isPower: false,\n      treeType: YunzaiDormitoryTreeType.BUILDING_FLOORS_ROOMS\n    }\n  ): Observable<YunzaiDormitoryTree[]> {\n    return this.http.post(`/auth/dorm/tree`, param).pipe(\n      map((response: YunzaiResponse<YunzaiDormitoryTree[]>) => {\n        return response.data;\n      })\n    );\n  }\n}\n","import {AfterViewInit, Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild} from '@angular/core';\nimport {catchError, debounceTime, map, of, Subject, switchMap, takeUntil, throwError, zip} from 'rxjs';\n\nimport {SFComponent, SFValueChange} from '@yelon/form';\nimport { NzFormatEmitEvent, NzTreeNode } from 'ng-zorro-antd/tree';\n\nimport { defaultSchema } from './yunzai-dormitory-tree.schema';\nimport { YunzaiDormitoryTreeService } from './yunzai-dormitory-tree.service';\nimport {\n  YunzaiDormitoryTree,\n  YunzaiDormitoryTreeParam,\n  YunzaiDormitoryTreeProps,\n  YunzaiDormitoryTreeState,\n  YunzaiDormitoryTreeType\n} from './yunzai-dormitory-tree.types';\n\n@Component({\n  selector: `yunzai-dormitory-tree`,\n  templateUrl: `./yunzai-dormitory-tree.html`\n})\nexport class YunzaiDormitoryTreeComponent implements OnInit, AfterViewInit ,OnDestroy{\n  @ViewChild('form') sf!: SFComponent;\n\n  @Input() props?: YunzaiDormitoryTreeProps;\n  @Output() onQueryComplete: EventEmitter<YunzaiDormitoryTree[]> = new EventEmitter<YunzaiDormitoryTree[]>();\n  @Output() onSelect: EventEmitter<YunzaiDormitoryTree[]> = new EventEmitter<YunzaiDormitoryTree[]>();\n  private $destroy = new Subject()\n\n  state: YunzaiDormitoryTreeState = {\n    loading: false,\n    schema: defaultSchema,\n    data: [],\n    dataBackup: [],\n    expandKeys: [],\n  };\n\n  get data(): YunzaiDormitoryTree[] {\n    if (this.props && this.props.data) {\n      return this.props.data;\n    }\n    return this.state.data;\n  }\n\n  set data(dorms: YunzaiDormitoryTree[]) {\n    if (this.props && this.props.data) {\n      this.props.data = dorms;\n    } else {\n      this.state.data = dorms;\n    }\n  }\n\n  get nodes(): NzTreeNode[] {\n    return this.data as any[];\n  }\n\n  get isMultiple(): boolean {\n    if (this.props) {\n      return !!this.props.multiple;\n    }\n    return false;\n  }\n\n  get param(): YunzaiDormitoryTreeParam {\n    if (this.props && this.props.param) {\n      return this.props.param;\n    }\n    return { isPower: false, treeType: YunzaiDormitoryTreeType.BUILDING_FLOORS_ROOMS };\n  }\n\n  get isWrapped(): boolean {\n    if (this.props) {\n      return !!this.props.wrap;\n    }\n    return false;\n  }\n\n  get isExpanded(): boolean {\n    if (this.props) {\n      return !!this.props.expand;\n    }\n    return false;\n  }\n\n  constructor(private dormitoryService: YunzaiDormitoryTreeService) {}\n\n  ngOnInit(): void {\n    if (!this.props?.data) {\n      this.query(this.param);\n    } else {\n      this.state.dataBackup = this.data;\n      this.mapDormTree(this.data as any);\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.hookFormChange();\n  }\n\n  hookFormChange(): void {\n    this.sf.formValueChange\n      .pipe(\n        takeUntil(this.$destroy),\n        debounceTime(1000),\n        map(value => {\n          this.load();\n          return value;\n        }),\n        switchMap((valueChange: SFValueChange) => {\n          const {\n            value: { search }\n          } = valueChange;\n          if (this.props && this.props.data) {\n            return zip(of(search), of(this.state.dataBackup));\n          }\n          return zip(of(search), this.dormitoryService.tree(this.param));\n        }),\n        map(([search, dorms]) => {\n          this.state.expandKeys = [];\n          if (search && search.trim() !== '') {\n            dorms = this.recursionSearch(search, dorms);\n            this.onQueryComplete.emit(dorms);\n          }\n          this.mapDormTree(dorms as any);\n          this.data = dorms;\n        }),\n        catchError(error => {\n          this.unload();\n          return throwError(error);\n        })\n      )\n      .subscribe(() => {\n        this.unload();\n      });\n  }\n\n  recursionSearch(search: string, dorms: YunzaiDormitoryTree[]): YunzaiDormitoryTree[] {\n    const results: YunzaiDormitoryTree[] = [];\n    const searchInDorm = (dorm: YunzaiDormitoryTree) => {\n      if (dorm.title.includes(search)) {\n        results.push(dorm);\n      }\n      if (dorm.children && dorm.children.length > 0) {\n        for (const child of dorm.children) {\n          searchInDorm(child);\n        }\n      }\n    };\n    for (const dorm of dorms) {\n      searchInDorm(dorm);\n    }\n    return results;\n  }\n\n  query(param: YunzaiDormitoryTreeParam): void {\n    this.load();\n    this.dormitoryService\n      .tree(param)\n      .pipe(\n        takeUntil(this.$destroy),\n        map((dorms: YunzaiDormitoryTree[]) => {\n          this.state.expandKeys = [];\n          this.onQueryComplete.emit(dorms);\n          this.mapDormTree(dorms as any);\n          this.data = dorms;\n        }),\n        catchError(error => {\n          this.unload();\n          return throwError(error);\n        })\n      )\n      .subscribe(() => {\n        this.unload();\n      });\n  }\n\n  load(): void {\n    this.state.loading = true;\n  }\n\n  unload(): void {\n    this.state.loading = false;\n  }\n\n  mapDormTree(tree: NzTreeNode[]) {\n    if (tree && tree.length && tree.length > 0) {\n      tree.forEach(item => {\n        if (this.isExpanded && !this.state.expandKeys.includes(item.key)) {\n          this.state.expandKeys.push(item.key);\n        }\n        item.isExpanded = this.isExpanded;\n        item.isLeaf = item.children === null || item.children.length === 0;\n        this.mapDormTree(item.children);\n      });\n    }\n  }\n\n  activeNode(data: NzFormatEmitEvent): void {\n    if (data.node) {\n      this.onSelect.emit([data.node.origin as YunzaiDormitoryTree]);\n    } else if (data.nodes) {\n      const dorms: YunzaiDormitoryTree[] = data.nodes.map(n => n.origin as YunzaiDormitoryTree);\n      this.onSelect.emit(dorms);\n    }\n  }\n\n  open(data: NzTreeNode | NzFormatEmitEvent): void {\n    if (data instanceof NzTreeNode) {\n      data.isExpanded = !data.isExpanded;\n    } else {\n      const node = data.node;\n      if (node) {\n        node.isExpanded = !node.isExpanded;\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.$destroy.complete()\n  }\n}\n","<!-- loading-->\n<nz-spin [nzSpinning]=\"state.loading\">\n  <!--        wrapped-->\n  <ng-container *ngIf=\"isWrapped\">\n    <nz-card>\n      <ng-container [ngTemplateOutlet]=\"content\"></ng-container>\n    </nz-card>\n  </ng-container>\n  <!--        end wrapped-->\n\n  <!--        unwrapped-->\n  <ng-container *ngIf=\"!isWrapped\">\n    <ng-container [ngTemplateOutlet]=\"content\"></ng-container>\n  </ng-container>\n  <!--        end unwrapped-->\n</nz-spin>\n<!-- end loading-->\n\n<!--      content-->\n<ng-template #content>\n  <ng-container [ngTemplateOutlet]=\"dormitoryForm\"></ng-container>\n  <nz-tree\n    *ngIf=\"nodes.length > 0\"\n    (nzClick)=\"activeNode($event)\"\n    [nzExpandedKeys]=\"state.expandKeys\"\n    [nzData]=\"nodes\"\n    [nzShowLine]=\"true\"\n    [nzMultiple]=\"isMultiple\"\n    [nzExpandedIcon]=\"blank\"\n    [nzBlockNode]=\"true\"\n    [nzHideUnMatched]=\"true\"\n    [nzTreeTemplate]=\"treeTemplate\"\n  ></nz-tree>\n  <nz-empty *ngIf=\"nodes.length === 0\"></nz-empty>\n</ng-template>\n<!--      end content-->\n\n<!--      tree -->\n<ng-template #treeTemplate let-node let-origin=\"origin\">\n  <span *ngIf=\"!node.isLeaf\" [title]=\"node.title\">\n    <i nz-icon nzTheme=\"twotone\" [nzType]=\"node.isExpanded ? 'minus-square' : 'plus-square'\" (click)=\"open(node)\"></i>\n    <span class=\"leaf-name\">{{ node.title }}</span>\n  </span>\n  <span *ngIf=\"node.isLeaf\" [title]=\"node.title\">\n    <span nz-icon nzType=\"file\" nzTheme=\"twotone\"></span>\n    <span class=\"leaf-name\">{{ node.title }}</span>\n  </span>\n</ng-template>\n<!--      end tree-->\n\n<ng-template #dormitoryForm>\n  <sf #form layout=\"inline\" [button]=\"'none'\" [schema]=\"state.schema\"></sf>\n</ng-template>\n<ng-template #blank></ng-template>\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { YunzaiSharedYelonModule } from '@yelon/bcs/yunzai-shared-yelon';\nimport { YunzaiSharedZorroModule } from '@yelon/bcs/yunzai-shared-zorro';\n\nimport { YunzaiDormitoryTreeComponent } from './yunzai-dormitory-tree.component';\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    ReactiveFormsModule,\n    YunzaiSharedZorroModule,\n    YunzaiSharedYelonModule\n  ],\n  declarations: [YunzaiDormitoryTreeComponent],\n  exports: [YunzaiDormitoryTreeComponent]\n})\nexport class YunzaiDormitoryTreeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1.YunzaiDormitoryTreeService"],"mappings":"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"}