{"version":3,"file":"yunzai-friend-group.mjs","sources":["../../../../packages/bcs/yunzai-friend-group/yunzai-friend-group.schema.ts","../../../../packages/bcs/yunzai-friend-group/yunzai-friend-group.service.ts","../../../../packages/bcs/yunzai-friend-group/yunzai-friend-group.component.ts","../../../../packages/bcs/yunzai-friend-group/yunzai-friend-group.html","../../../../packages/bcs/yunzai-friend-group/yunzai-friend-group.module.ts","../../../../packages/bcs/yunzai-friend-group/yunzai-friend-group.ts"],"sourcesContent":["import { SFSchema } from '@yelon/form';\n\nexport const defaultSchema: SFSchema = {\n  properties: {\n    search: {\n      title: 'name',\n      type: 'string',\n      ui: {\n        i18n: 'input.name',\n        widget: 'string'\n      }\n    }\n  }\n};\n","import { Injectable } from '@angular/core';\nimport { map, Observable } from 'rxjs';\n\nimport { _HttpClient } from '@yelon/theme';\nimport { YunzaiResponse } from '@yelon/util';\n\nimport { YunzaiFriendGroup } from './yunzai-friend-group.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class YunzaiFriendGroupService {\n  constructor(private http: _HttpClient) {}\n\n  groups(): Observable<YunzaiFriendGroup[]> {\n    return this.http.post('/contact/appcontact/findGroup', {}).pipe(\n      map((response: YunzaiResponse<YunzaiFriendGroup[]>) => {\n        return response.data;\n      })\n    );\n  }\n}\n","import {AfterViewInit, Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild} from '@angular/core';\nimport {catchError, debounceTime, map, Subject, takeUntil, throwError} from 'rxjs';\n\nimport { SFComponent } from '@yelon/form';\n\nimport { defaultSchema } from './yunzai-friend-group.schema';\nimport { YunzaiFriendGroupService } from './yunzai-friend-group.service';\nimport { YunzaiFriendGroup, YunzaiFriendGroupProps, YunzaiFriendGroupState } from './yunzai-friend-group.types';\n\n@Component({\n  selector: `yunzai-friend-group`,\n  templateUrl: `./yunzai-friend-group.html`\n})\nexport class YunzaiFriendGroupComponent implements OnInit, AfterViewInit,OnDestroy {\n  @Input() props?: YunzaiFriendGroupProps;\n  @Output() readonly onQueryComplete: EventEmitter<YunzaiFriendGroup[]> = new EventEmitter<YunzaiFriendGroup[]>();\n  @Output() readonly onSelect: EventEmitter<YunzaiFriendGroup> = new EventEmitter<YunzaiFriendGroup>();\n  @ViewChild('form') sf!: SFComponent;\n  private $destroy = new Subject();\n\n  state: YunzaiFriendGroupState = {\n    loading: false,\n    schema: defaultSchema,\n    data: [],\n    dataBackup: [],\n  };\n\n  get isWrapped(): boolean {\n    return !!this.props?.wrap;\n  }\n\n  get data(): YunzaiFriendGroup[] {\n    if (this.props && this.props.data) {\n      return this.props.data;\n    }\n    return this.state.data;\n  }\n\n  constructor(private friendsService: YunzaiFriendGroupService) {}\n\n  ngOnInit(): void {\n    if (this.props?.data) {\n      this.state.data = this.props.data;\n      this.state.dataBackup = this.props.data;\n    } else {\n      this.query();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.hookFormChange();\n  }\n\n  hookFormChange(): void {\n    this.sf.formValueChange.pipe(takeUntil(this.$destroy), debounceTime(1000)).subscribe(change => {\n      const {\n        value: { search }\n      } = change;\n      if (search) {\n        this.state.data = this.state.dataBackup.filter(group => group.name.includes(search));\n      } else {\n        this.state.data = this.state.dataBackup;\n      }\n    });\n  }\n\n  onItemClick(item: YunzaiFriendGroup): void {\n    this.onSelect.emit(item);\n  }\n\n  query(): void {\n    this.state.loading = true;\n    this.friendsService\n      .groups()\n      .pipe(\n        takeUntil(this.$destroy),\n        catchError(error => {\n          this.state.loading = false;\n          return throwError(error);\n        }),\n        map((groups: YunzaiFriendGroup[]) => {\n          this.state.data = groups;\n          this.state.dataBackup = groups;\n          this.onQueryComplete.emit(this.state.data);\n          this.state.loading = false;\n        })\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.$destroy.complete()\n  }\n}\n","<nz-spin [nzSpinning]=\"state.loading\">\n  <ng-container *ngIf=\"isWrapped\">\n    <nz-card>\n      <ng-container [ngTemplateOutlet]=\"content\"></ng-container>\n    </nz-card>\n  </ng-container>\n\n  <ng-container *ngIf=\"!isWrapped\">\n    <ng-container [ngTemplateOutlet]=\"content\"></ng-container>\n  </ng-container>\n</nz-spin>\n\n<ng-template #content>\n  <ng-container [ngTemplateOutlet]=\"friendForm\"></ng-container>\n  <nz-list nzSize=\"small\" *ngIf=\"data.length > 0\">\n    <nz-list-item *ngFor=\"let item of data\" (click)=\"onItemClick(item)\">{{ item.name }}</nz-list-item>\n  </nz-list>\n  <nz-empty *ngIf=\"data.length === 0\"></nz-empty>\n</ng-template>\n\n<ng-template #friendForm>\n  <sf #form layout=\"inline\" [button]=\"'none'\" [schema]=\"state.schema\"></sf>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { YunzaiSharedYelonModule } from '@yelon/bcs/yunzai-shared-yelon';\nimport { YunzaiSharedZorroModule } from '@yelon/bcs/yunzai-shared-zorro';\n\nimport { YunzaiFriendGroupComponent } from './yunzai-friend-group.component';\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    ReactiveFormsModule,\n    YunzaiSharedZorroModule,\n    YunzaiSharedYelonModule\n  ],\n  declarations: [YunzaiFriendGroupComponent],\n  exports: [YunzaiFriendGroupComponent]\n})\nexport class YunzaiFriendGroupModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1.YunzaiFriendGroupService"],"mappings":"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"}