import { inject } from '@angular/core';
import { catchError, map, throwError } from 'rxjs';
import { _HttpClient } from '@yelon/theme';
export class YunzaiTableUserService {
    constructor() {
        this.http = inject(_HttpClient);
    }
    users(page) {
        return this.http.post(`/auth/baseUser/queryListForPage`, page).pipe(map((response) => {
            return response;
        }), catchError(e => {
            return throwError(e);
        }));
    }
    usersByIds(ids) {
        return this.http.post(`/auth/baseUser/users`, { userIds: ids }).pipe(map((response) => {
            return response.data;
        }));
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoieXVuemFpLXRhYmxlLXVzZXIuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2Jjcy95dW56YWktdGFibGUtdXNlci95dW56YWktdGFibGUtdXNlci5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDdkMsT0FBTyxFQUFFLFVBQVUsRUFBRSxHQUFHLEVBQWMsVUFBVSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBRS9ELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFLM0MsTUFBTSxPQUFPLHNCQUFzQjtJQUFuQztRQUNtQixTQUFJLEdBQWdCLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQztJQW9CM0QsQ0FBQztJQWxCQyxLQUFLLENBQUMsSUFBZ0M7UUFDcEMsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxpQ0FBaUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQ2pFLEdBQUcsQ0FBQyxDQUFDLFFBQTZDLEVBQUUsRUFBRTtZQUNwRCxPQUFPLFFBQVEsQ0FBQztRQUNsQixDQUFDLENBQUMsRUFDRixVQUFVLENBQUMsQ0FBQyxDQUFDLEVBQUU7WUFDYixPQUFPLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN2QixDQUFDLENBQUMsQ0FDSCxDQUFDO0lBQ0osQ0FBQztJQUVELFVBQVUsQ0FBQyxHQUFhO1FBQ3RCLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsc0JBQXNCLEVBQUUsRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQ2xFLEdBQUcsQ0FBQyxDQUFDLFFBQTJDLEVBQUUsRUFBRTtZQUNsRCxPQUFPLFFBQVEsQ0FBQyxJQUFJLENBQUM7UUFDdkIsQ0FBQyxDQUFDLENBQ0gsQ0FBQztJQUNKLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGluamVjdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgY2F0Y2hFcnJvciwgbWFwLCBPYnNlcnZhYmxlLCB0aHJvd0Vycm9yIH0gZnJvbSAncnhqcyc7XG5cbmltcG9ydCB7IF9IdHRwQ2xpZW50IH0gZnJvbSAnQHllbG9uL3RoZW1lJztcbmltcG9ydCB7IFBhZ2UsIFl1bnphaVBhZ2VSZXNwb25zZSwgWXVuemFpUmVzcG9uc2UgfSBmcm9tICdAeWVsb24vdXRpbCc7XG5cbmltcG9ydCB7IFl1bnphaVRhYmxlVXNlciwgWXVuemFpVGFibGVVc2VyUGFyYW0gfSBmcm9tICcuL3l1bnphaS10YWJsZS11c2VyLnR5cGVzJztcblxuZXhwb3J0IGNsYXNzIFl1bnphaVRhYmxlVXNlclNlcnZpY2Uge1xuICBwcml2YXRlIHJlYWRvbmx5IGh0dHA6IF9IdHRwQ2xpZW50ID0gaW5qZWN0KF9IdHRwQ2xpZW50KTtcblxuICB1c2VycyhwYWdlOiBQYWdlPFl1bnphaVRhYmxlVXNlclBhcmFtPik6IE9ic2VydmFibGU8WXVuemFpUGFnZVJlc3BvbnNlPFl1bnphaVRhYmxlVXNlcj4+IHtcbiAgICByZXR1cm4gdGhpcy5odHRwLnBvc3QoYC9hdXRoL2Jhc2VVc2VyL3F1ZXJ5TGlzdEZvclBhZ2VgLCBwYWdlKS5waXBlKFxuICAgICAgbWFwKChyZXNwb25zZTogWXVuemFpUGFnZVJlc3BvbnNlPFl1bnphaVRhYmxlVXNlcj4pID0+IHtcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgICAgfSksXG4gICAgICBjYXRjaEVycm9yKGUgPT4ge1xuICAgICAgICByZXR1cm4gdGhyb3dFcnJvcihlKTtcbiAgICAgIH0pXG4gICAgKTtcbiAgfVxuXG4gIHVzZXJzQnlJZHMoaWRzOiBzdHJpbmdbXSk6IE9ic2VydmFibGU8WXVuemFpVGFibGVVc2VyW10+IHtcbiAgICByZXR1cm4gdGhpcy5odHRwLnBvc3QoYC9hdXRoL2Jhc2VVc2VyL3VzZXJzYCwgeyB1c2VySWRzOiBpZHMgfSkucGlwZShcbiAgICAgIG1hcCgocmVzcG9uc2U6IFl1bnphaVJlc3BvbnNlPFl1bnphaVRhYmxlVXNlcltdPikgPT4ge1xuICAgICAgICByZXR1cm4gcmVzcG9uc2UuZGF0YTtcbiAgICAgIH0pXG4gICAgKTtcbiAgfVxufVxuIl19