import { AfterViewInit, EventEmitter, OnDestroy, OnInit } from '@angular/core';
import { SFComponent } from '@yelon/form';
import { NzFormatEmitEvent, NzTreeNode } from 'ng-zorro-antd/tree';
import { YunzaiDormitoryTree, YunzaiDormitoryTreeParam, YunzaiDormitoryTreeProps, YunzaiDormitoryTreeState } from './yunzai-dormitory-tree.types';
import * as i0 from "@angular/core";
export declare class YunzaiDormitoryTreeComponent implements OnInit, OnDestroy, AfterViewInit {
    sf: SFComponent;
    props?: YunzaiDormitoryTreeProps;
    readonly onQueryComplete: EventEmitter<YunzaiDormitoryTree[]>;
    readonly onSelect: EventEmitter<YunzaiDormitoryTree[]>;
    private readonly service;
    private $destroy;
    state: YunzaiDormitoryTreeState;
    get data(): YunzaiDormitoryTree[];
    set data(dorms: YunzaiDormitoryTree[]);
    get nodes(): NzTreeNode[];
    get isMultiple(): boolean;
    get param(): YunzaiDormitoryTreeParam;
    get isWrapped(): boolean;
    get isExpanded(): boolean;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    hookFormChange(): void;
    recursionSearch(search: string, dorms: YunzaiDormitoryTree[]): YunzaiDormitoryTree[];
    query(param: YunzaiDormitoryTreeParam): void;
    load(): void;
    unload(): void;
    mapDormTree(tree: NzTreeNode[]): void;
    activeNode(data: NzFormatEmitEvent): void;
    open(data: NzTreeNode | NzFormatEmitEvent): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<YunzaiDormitoryTreeComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<YunzaiDormitoryTreeComponent, "yunzai-dormitory-tree", never, { "props": { "alias": "props"; "required": false; }; }, { "onQueryComplete": "onQueryComplete"; "onSelect": "onSelect"; }, never, never, true, never>;
}
