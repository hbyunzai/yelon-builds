{"version":3,"file":"bis.mjs","sources":["../../../../packages/bis/src/bis.module.ts","../../../../packages/bis/src/provide.ts","../../../../packages/bis/src/helper.ts","../../../../packages/bis/src/refresh-token.ts","../../../../packages/bis/src/yunzai-default.interceptor.ts","../../../../packages/bis/bis.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\n\nimport { YunzaiLayoutModule } from '@yelon/bis/layout';\nimport { YunzaiWidgetsModule } from '@yelon/bis/yunzai-widgets';\n@NgModule({\n  imports: [YunzaiLayoutModule, YunzaiWidgetsModule],\n  exports: [YunzaiLayoutModule, YunzaiWidgetsModule]\n})\nexport class BisModule {}\n","import { EnvironmentProviders, importProvidersFrom, makeEnvironmentProviders } from '@angular/core';\n\nimport { BisModule } from './bis.module';\n\nexport function provideYunzaiBis(): EnvironmentProviders {\n  const provides: EnvironmentProviders[] = [];\n  provides.push(importProvidersFrom(BisModule));\n  return makeEnvironmentProviders(provides);\n}\n","import { HttpHeaders, HttpResponseBase } from '@angular/common/http';\nimport { inject, Injector } from '@angular/core';\n\nimport { Router } from 'express';\n\nimport { YA_SERVICE_TOKEN } from '@yelon/auth';\nimport { YUNZAI_I18N_TOKEN } from '@yelon/theme';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzNotificationService } from 'ng-zorro-antd/notification';\n\nexport const CODEMESSAGE: { [key: number]: string } = {\n  200: '服务器成功返回请求的数据。',\n  201: '新建或修改数据成功。',\n  202: '一个请求已经进入后台排队（异步任务）。',\n  204: '删除数据成功。',\n  400: '发出的请求有错误，服务器没有进行新建或修改数据的操作。',\n  401: '用户没有权限（令牌、用户名、密码错误）。',\n  403: '用户得到授权，但是访问是被禁止的。',\n  404: '发出的请求针对的是不存在的记录，服务器没有进行操作。',\n  406: '请求的格式不可得。',\n  410: '请求的资源被永久删除，且不会再得到的。',\n  422: '当创建一个对象时，发生一个验证错误。',\n  500: '服务器发生错误，请检查服务器。',\n  502: '网关错误。',\n  503: '服务不可用，服务器暂时过载或维护。',\n  504: '网关超时。'\n};\n\nexport function getAdditionalHeaders(headers?: HttpHeaders): { [name: string]: string } {\n  const res: { [name: string]: string } = {};\n  const lang = inject(YUNZAI_I18N_TOKEN).currentLang;\n  if (!headers?.has('Accept-Language') && lang) {\n    res['Accept-Language'] = lang;\n  }\n\n  return res;\n}\n\nexport function checkStatus(injector: Injector, ev: HttpResponseBase): void {\n  if ((ev.status >= 200 && ev.status < 300) || ev.status === 401) {\n    return;\n  }\n  const errortext = CODEMESSAGE[ev.status] || ev.statusText;\n  injector.get(NzNotificationService).error(`请求错误 ${ev.status}: ${ev.url}`, errortext);\n}\n\nexport interface ReThrowHttpError {\n  body: NzSafeAny;\n  _throw: true;\n}\n\nexport function goTo(injector: Injector, url: string): void {\n  setTimeout(() => injector.get(Router).navigateByUrl(url));\n}\n\nexport function toLogin(injector: Injector): void {\n  injector.get(NzNotificationService).error(`未登录或登录已过期，请重新登录。`, ``);\n  goTo(injector, injector.get(YA_SERVICE_TOKEN).login_url!);\n}\n","import { HttpClient, HttpHandlerFn, HttpRequest, HttpResponseBase } from '@angular/common/http';\nimport { APP_INITIALIZER, Injector, Provider } from '@angular/core';\nimport { BehaviorSubject, catchError, filter, Observable, switchMap, take, throwError } from 'rxjs';\n\nimport { YA_SERVICE_TOKEN } from '@yelon/auth';\nimport { log } from '@yelon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { toLogin } from './helper';\n\nlet refreshToking = false;\nlet refreshToken$: BehaviorSubject<NzSafeAny> = new BehaviorSubject<NzSafeAny>(null);\n\nexport const tryRefreshToken = (\n  injector: Injector,\n  ev: HttpResponseBase,\n  req: HttpRequest<NzSafeAny>,\n  next: HttpHandlerFn\n): Observable<NzSafeAny> => {\n  // 连刷新Token的请求都错了，那就是真错了\n  if (['/auth/oauth/getOrCreateToken/webapp'].some(url => req.url.includes(url))) {\n    toLogin(injector);\n    return throwError(() => ev);\n  }\n  // 2、如果 `refreshToking` 为 `true` 表示已经在请求刷新 Token 中，后续所有请求转入等待状态，直至结果返回后再重新发起请求\n  if (refreshToking) {\n    return refreshToken$.pipe(\n      filter(v => !!v),\n      take(1),\n      switchMap(() => next(reAttachToken(injector, req)))\n    );\n  }\n  // 3、尝试调用刷新 Token\n  refreshToking = true;\n  refreshToken$.next(null);\n\n  return refreshTokenRequest(injector).pipe(\n    switchMap(res => {\n      // 通知后续请求继续执行\n      refreshToking = false;\n      refreshToken$.next(res);\n      // 重新保存新 token\n      injector.get(YA_SERVICE_TOKEN).set(res);\n      // 重新发起请求\n      return next(reAttachToken(injector, req));\n    }),\n    catchError(err => {\n      refreshToking = false;\n      toLogin(injector);\n      return throwError(() => err);\n    })\n  );\n};\n\nfunction reAttachToken(injector: Injector, req: HttpRequest<NzSafeAny>): HttpRequest<NzSafeAny> {\n  const token = injector.get(YA_SERVICE_TOKEN).get()?.access_token;\n  return req.clone({\n    setHeaders: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n}\n\nfunction refreshTokenRequest(injector: Injector): Observable<NzSafeAny> {\n  const model = injector.get(YA_SERVICE_TOKEN).get();\n  const form = new FormData();\n  form.set('refresh_token', model?.refresh_token!);\n  form.set('grant_type', 'refresh_token');\n  form.set('scope', 'webapp');\n  return injector.get(HttpClient).post(`/auth/oauth/getOrCreateToken/webapp`, form);\n}\n\nfunction buildAuthRefresh(injector: Injector): void {\n  const tokenSrv = injector.get(YA_SERVICE_TOKEN);\n  tokenSrv.refresh\n    .pipe(\n      filter(() => !refreshToking),\n      switchMap(res => {\n        log(res);\n        refreshToking = true;\n        return refreshTokenRequest(injector);\n      })\n    )\n    .subscribe({\n      next: res => {\n        res.expired = +new Date() + 1000 * 60 * 5;\n        refreshToking = false;\n        tokenSrv.set(res);\n      },\n      error: () => toLogin(injector)\n    });\n}\n\nexport function provideYunzaiBindAuthRefresh(): Provider[] {\n  return [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (injector: Injector) => () => buildAuthRefresh(injector),\n      deps: [Injector],\n      multi: true\n    }\n  ];\n}\n","import {\n  HttpErrorResponse,\n  HttpHandlerFn,\n  HttpInterceptorFn,\n  HttpRequest,\n  HttpResponseBase\n} from '@angular/common/http';\nimport { Injector, inject } from '@angular/core';\nimport { Observable, of, throwError, mergeMap, catchError } from 'rxjs';\n\nimport { IGNORE_BASE_URL } from '@yelon/theme';\nimport { YUNZAI_CONFIG } from '@yelon/util';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { checkStatus, getAdditionalHeaders, goTo, ReThrowHttpError, toLogin } from './helper';\nimport { tryRefreshToken } from './refresh-token';\n\nfunction handleData(\n  injector: Injector,\n  ev: HttpResponseBase,\n  req: HttpRequest<NzSafeAny>,\n  next: HttpHandlerFn\n): Observable<NzSafeAny> {\n  checkStatus(injector, ev);\n  const config = injector.get(YUNZAI_CONFIG).bis!;\n  switch (ev.status) {\n    case 200:\n      return of(ev);\n    case 401:\n      if (config.refreshTokenEnabled && config.refreshTokenType === 're-request') {\n        const unAuthorizationReq = req.clone();\n        unAuthorizationReq.headers.delete('Authorization');\n        return tryRefreshToken(injector, ev, unAuthorizationReq, next);\n      }\n      toLogin(injector);\n      break;\n    case 403:\n    case 404:\n    case 500:\n      goTo(injector, `/exception/${ev.status}?url=${req.urlWithParams}`);\n      break;\n    default:\n      if (ev instanceof HttpErrorResponse) {\n        console.warn(\n          '未可知错误，大部分是由于后端不支持跨域CORS或无效配置引起，请参考 https://ng.yunzainfo.com/docs/server 解决跨域问题',\n          ev\n        );\n      }\n      break;\n  }\n  if (ev instanceof HttpErrorResponse) {\n    return throwError(() => ev);\n  } else if ((ev as unknown as ReThrowHttpError)._throw) {\n    return throwError(() => (ev as unknown as ReThrowHttpError).body);\n  } else {\n    return of(ev);\n  }\n}\n\nexport const yunzaiDefaultInterceptor: HttpInterceptorFn = (req, next) => {\n  const config = inject(YUNZAI_CONFIG).bis!;\n  const { baseUrl } = config;\n  let url = req.url;\n  if (!req.context.get(IGNORE_BASE_URL) && !url.startsWith('https://') && !url.startsWith('http://')) {\n    url = baseUrl + (baseUrl!.endsWith('/') && url.startsWith('/') ? url.substring(1) : url);\n  }\n  if (url.includes('.json') && url.includes('assets')) {\n    url = req.url;\n  }\n  const newReq = req.clone({ url, setHeaders: getAdditionalHeaders(req.headers) });\n  const injector = inject(Injector);\n  return next(newReq).pipe(\n    mergeMap(ev => {\n      if (ev instanceof HttpResponseBase) {\n        return handleData(injector, ev, newReq, next);\n      }\n      return of(ev);\n    }),\n    catchError((err: HttpErrorResponse) => handleData(injector, err, newReq, next))\n  );\n};\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}