{"version":3,"file":"other.mjs","sources":["../../../../packages/util/other/deep.ts","../../../../packages/util/other/logger.ts","../../../../packages/util/other/lazy.service.ts","../../../../packages/util/other/assert.ts","../../../../packages/util/other/resize.ts","../../../../packages/util/other/path-to-regexp.service.ts","../../../../packages/util/other/favicon.ts","../../../../packages/util/other/other.ts"],"sourcesContent":["import extend from 'extend';\n\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\n/**\n * Gets the value at `path` of `object`, like `_.get` in lodash.\n *\n * 类似 `_.get`，根据 `path` 获取安全值\n */\nexport function deepGet(obj: NzSafeAny, path: string | string[] | null | undefined, defaultValue?: unknown): NzSafeAny {\n  if (!obj || path == null || path.length === 0) return defaultValue;\n  if (!Array.isArray(path)) {\n    path = ~path.indexOf('.') ? path.split('.') : [path];\n  }\n  if (path.length === 1) {\n    const checkObj = obj[path[0]];\n    return typeof checkObj === 'undefined' ? defaultValue : checkObj;\n  }\n  const res = path.reduce((o, k) => (o || {})[k], obj);\n  return typeof res === 'undefined' ? defaultValue : res;\n}\n\n/**\n * Base on [extend](https://github.com/justmoon/node-extend) deep copy.\n *\n * 基于 [extend](https://github.com/justmoon/node-extend) 的深度拷贝\n *\n * NOTE: Don't a lot of recursion, maybe performance issues\n */\nexport function deepCopy<T extends { [key: string]: NzSafeAny } = NzSafeAny>(obj: T | null | undefined): T {\n  const result = extend(true, {}, { _: obj });\n  return result._ as T;\n}\n\n/**\n * Deep merge object.\n *\n * 深度合并对象\n *\n * @param original 原始对象\n * @param arrayProcessMethod 数组处理方式\n *  - `true` 表示替换新值，不管新值为哪种类型\n *  - `false` 表示会合并整个数组（将旧数据与新数据合并成新数组）\n * @param objects 要合并的对象\n */\nexport function deepMergeKey(original: unknown, arrayProcessMethod: boolean, ...objects: NzSafeAny[]): NzSafeAny {\n  if (Array.isArray(original) || typeof original !== 'object') return original;\n\n  const isObject = (v: unknown): boolean => typeof v === 'object';\n\n  const merge = (target: NzSafeAny, obj: NzSafeAny): NzSafeAny => {\n    Object.keys(obj)\n      .filter(key => key !== '__proto__' && Object.prototype.hasOwnProperty.call(obj, key))\n      .forEach(key => {\n        const fromValue = obj[key];\n        const toValue = target[key];\n        if (Array.isArray(toValue)) {\n          target[key] = arrayProcessMethod ? fromValue : [...toValue, ...fromValue];\n        } else if (typeof fromValue === 'function') {\n          target[key] = fromValue;\n        } else if (fromValue != null && isObject(fromValue) && toValue != null && isObject(toValue)) {\n          target[key] = merge(toValue, fromValue);\n        } else {\n          target[key] = deepCopy(fromValue);\n        }\n      });\n    return target;\n  };\n\n  objects.filter(v => v != null && isObject(v)).forEach(v => merge(original, v));\n\n  return original;\n}\n\n/**\n * Deep merge object.\n *\n * 深度合并对象\n */\nexport function deepMerge(original: unknown, ...objects: unknown[]): NzSafeAny {\n  return deepMergeKey(original, false, ...objects);\n}\n","import type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\ndeclare const ngDevMode: boolean;\n\nconst record: Record<string, boolean> = {};\n\nexport const PREFIX = '[@YELON]:';\n\nfunction notRecorded(...args: NzSafeAny[]): boolean {\n  const asRecord = args.reduce((acc, c) => acc + c.toString(), '');\n\n  if (record[asRecord]) {\n    return false;\n  } else {\n    record[asRecord] = true;\n    return true;\n  }\n}\n\nfunction consoleCommonBehavior(consoleFunc: (...args: NzSafeAny) => void, ...args: NzSafeAny[]): void {\n  if ((typeof ngDevMode === 'undefined' || ngDevMode) && notRecorded(...args)) {\n    consoleFunc(...args);\n  }\n}\n\n// Warning should only be printed in dev mode and only once.\nexport const warn = (...args: NzSafeAny[]): void =>\n  consoleCommonBehavior((...arg: NzSafeAny[]) => console.warn(PREFIX, ...arg), ...args);\n\nexport const warnDeprecation = (...args: NzSafeAny[]): NzSafeAny => {\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    return () => {};\n  }\n  const stack = new Error().stack;\n  return consoleCommonBehavior((...arg: NzSafeAny[]) => console.warn(PREFIX, 'deprecated:', ...arg, stack), ...args);\n};\n\n// Log should only be printed in dev mode.\nexport const log = (...args: NzSafeAny[]): void => {\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    console.log(PREFIX, ...args);\n  }\n};\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, filter, share } from 'rxjs';\n\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nexport interface LazyResult {\n  path: string;\n  status: 'ok' | 'error' | 'loading';\n  error?: NzSafeAny;\n}\n\nexport interface LazyLoadItem {\n  path: string;\n  options?: LazyLoadOptions;\n}\n\nexport interface LazyLoadOptions {\n  innerContent?: string;\n  attributes?: { [qualifiedName: string]: string };\n  rel?: string;\n}\n\n/**\n * `LazyService` delay loading JS or CSS files.\n *\n * 延迟加载资源（js 或 css）服务\n */\n@Injectable({ providedIn: 'root' })\nexport class LazyService {\n  private list: { [key: string]: boolean } = {};\n  private cached: { [key: string]: LazyResult } = {};\n  private _notify: BehaviorSubject<LazyResult[]> = new BehaviorSubject<LazyResult[]>([]);\n\n  constructor(@Inject(DOCUMENT) private doc: NzSafeAny) {}\n\n  get change(): Observable<LazyResult[]> {\n    return this._notify.asObservable().pipe(\n      share(),\n      filter(ls => ls.length !== 0)\n    );\n  }\n\n  clear(): void {\n    this.list = {};\n    this.cached = {};\n  }\n\n  private attachAttributes(el: HTMLElement, attributes?: { [qualifiedName: string]: string }): void {\n    if (attributes == null) return;\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      el.setAttribute(key, value);\n    });\n  }\n\n  /**\n   * Load script or style files\n   */\n  load(paths: string | LazyLoadItem | Array<string | LazyLoadItem>): Promise<LazyResult[]> {\n    if (!Array.isArray(paths)) {\n      paths = [paths];\n    }\n\n    const promises: Array<Promise<LazyResult>> = [];\n    paths\n      .map(v => (typeof v !== 'object' ? ({ path: v } as LazyLoadItem) : v))\n      .forEach(item => {\n        if (item.path.endsWith('.js')) {\n          promises.push(this.loadScript(item.path, item.options));\n        } else {\n          promises.push(this.loadStyle(item.path, item.options));\n        }\n      });\n\n    return Promise.all(promises).then(res => {\n      this._notify.next(res);\n      return Promise.resolve(res);\n    });\n  }\n\n  /**\n   * Load a script file\n   */\n  loadScript(path: string, options?: LazyLoadOptions): Promise<LazyResult>;\n  loadScript(\n    path: string,\n    innerContent?: string | LazyLoadOptions,\n    attributes?: { [qualifiedName: string]: string }\n  ): Promise<LazyResult> {\n    const options: LazyLoadOptions =\n      typeof innerContent === 'object'\n        ? innerContent\n        : {\n            innerContent,\n            attributes\n          };\n    return new Promise(resolve => {\n      if (this.list[path] === true) {\n        resolve({ ...this.cached[path], status: 'loading' });\n        return;\n      }\n\n      this.list[path] = true;\n      const onSuccess = (item: LazyResult): void => {\n        this.cached[path] = item;\n        resolve(item);\n        this._notify.next([item]);\n      };\n\n      const node = this.doc.createElement('script') as HTMLScriptElement;\n      node.type = 'text/javascript';\n      node.src = path;\n      this.attachAttributes(node, options.attributes);\n      if (options.innerContent) {\n        node.innerHTML = options.innerContent;\n      }\n      node.onload = () =>\n        onSuccess({\n          path,\n          status: 'ok'\n        });\n      node.onerror = error =>\n        onSuccess({\n          path,\n          status: 'error',\n          error\n        });\n      this.doc.getElementsByTagName('head')[0].appendChild(node);\n    });\n  }\n\n  /**\n   * Load a style file\n   */\n  loadStyle(path: string, options?: LazyLoadOptions): Promise<LazyResult>;\n  loadStyle(\n    path: string,\n    rel?: string | LazyLoadOptions,\n    innerContent?: string,\n    attributes?: { [qualifiedName: string]: string }\n  ): Promise<LazyResult> {\n    const options: LazyLoadOptions =\n      typeof rel === 'object'\n        ? rel\n        : {\n            rel,\n            innerContent,\n            attributes\n          };\n    return new Promise(resolve => {\n      if (this.list[path] === true) {\n        resolve(this.cached[path]);\n        return;\n      }\n\n      this.list[path] = true;\n\n      const node = this.doc.createElement('link') as HTMLLinkElement;\n      node.rel = options.rel ?? 'stylesheet';\n      node.type = 'text/css';\n      node.href = path;\n      this.attachAttributes(node, options.attributes);\n      if (options.innerContent) {\n        node.innerHTML = options.innerContent;\n      }\n      this.doc.getElementsByTagName('head')[0].appendChild(node);\n      const item: LazyResult = {\n        path,\n        status: 'ok'\n      };\n      this.cached[path] = item;\n      resolve(item);\n    });\n  }\n}\n","import { isObservable } from 'rxjs';\n\ndeclare const ngDevMode: boolean;\n\nfunction throwError(msg: string | null | undefined): void;\nfunction throwError(msg: string | null | undefined, actual: unknown, expected: unknown, comparison: string): void;\nfunction throwError(msg: string | null | undefined, actual?: unknown, expected?: unknown, comparison?: string): void {\n  if (ngDevMode) {\n    throw new Error(\n      `ASSERTION ERROR: ${msg}${comparison == null ? '' : ` [Expected=> ${expected} ${comparison} ${actual} <=Actual]`}`\n    );\n  }\n}\n\n/**\n * Assert whether the expression and throw an error into console in dev mode\n *\n * 断言表达式是否符合预期，并在开发模式下会在控制台抛出一个错误\n */\nexport function assert(expression: boolean, msg?: string): void {\n  if (!expression) {\n    throwError(msg);\n  }\n}\n\n/**\n * Assert whether empty (`null` or `undefined`)\n *\n * 断言是否空值（`null` 或 `undefined`）\n */\nexport function assertEmpty(actual: unknown, msg?: string): void {\n  if (actual == null) {\n    throwError(msg, typeof actual, 'NULL', '==');\n  }\n}\n\n/**\n * Assert whether `number` type\n *\n * 断言是否 `number` 类型\n */\nexport function assertNumber(actual: unknown, msg?: string): void {\n  if (!(typeof actual === 'number')) {\n    throwError(msg, typeof actual, 'number', '===');\n  }\n}\n\n/**\n * Assert whether `string` type\n *\n * 断言是否 `string` 类型\n */\nexport function assertString(actual: unknown, msg?: string): void {\n  if (!(typeof actual === 'string')) {\n    throwError(msg, actual === null ? 'null' : typeof actual, 'string', '===');\n  }\n}\n\n/**\n * Assert whether `array` type\n *\n * 断言是否 `array` 类型\n */\nexport function assertArray(actual: unknown, msg?: string): void {\n  if (!Array.isArray(actual)) {\n    throwError(msg, actual === null ? 'null' : typeof actual, 'array', '===');\n  }\n}\n\n/**\n * Assert whether `Observable` type\n *\n * 断言是否 `Observable` 类型\n */\nexport function assertObservable(obj: unknown, msg?: string): void {\n  if (!isObservable(obj)) {\n    throwError(msg, obj === null ? 'null' : typeof obj, 'Observable', '===');\n  }\n}\n","export const resizeWindow = (): void => {\n  window.dispatchEvent(new Event('resize'));\n};\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PathToRegexpService {\n  constructor() {}\n  DEFAULT_DELIMITER = '/';\n\n  PATH_REGEXP = new RegExp(\n    ['(\\\\\\\\.)', '(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?'].join('|'),\n    'g'\n  );\n\n  parse(str: any, options: any) {\n    const tokens = [];\n    let key = 0;\n    let index = 0;\n    let path = '';\n    const defaultDelimiter = (options && options.delimiter) || this.DEFAULT_DELIMITER;\n    const whitelist = (options && options.whitelist) || undefined;\n    let pathEscaped = false;\n    let res;\n\n    while ((res = this.PATH_REGEXP.exec(str)) !== null) {\n      const m = res[0];\n      const escaped = res[1];\n      const offset = res.index;\n      path += str.slice(index, offset);\n      index = offset + m.length;\n\n      // Ignore already escaped sequences.\n      if (escaped) {\n        path += escaped[1];\n        pathEscaped = true;\n        continue;\n      }\n\n      let prev = '';\n      const name = res[2];\n      const capture = res[3];\n      const group = res[4];\n      const modifier = res[5];\n\n      if (!pathEscaped && path.length) {\n        const k = path.length - 1;\n        const c = path[k];\n        const matches = whitelist ? whitelist.indexOf(c) > -1 : true;\n\n        if (matches) {\n          prev = c;\n          path = path.slice(0, k);\n        }\n      }\n\n      // Push the current path onto the tokens.\n      if (path) {\n        tokens.push(path);\n        path = '';\n        pathEscaped = false;\n      }\n\n      const repeat = modifier === '+' || modifier === '*';\n      const optional = modifier === '?' || modifier === '*';\n      const pattern = capture || group;\n      const delimiter = prev || defaultDelimiter;\n\n      tokens.push({\n        name: name || key++,\n        prefix: prev,\n        delimiter: delimiter,\n        optional: optional,\n        repeat: repeat,\n        pattern: pattern\n          ? this.escapeGroup(pattern)\n          : `[^${this.escapeString(delimiter === defaultDelimiter ? delimiter : delimiter + defaultDelimiter)}]+?`\n      });\n    }\n\n    // Push any remaining characters.\n    if (path || index < str.length) {\n      tokens.push(path + str.substr(index));\n    }\n\n    return tokens;\n  }\n  compile(str: any, options: any) {\n    return this.tokensToFunction(this.parse(str, options), options);\n  }\n\n  tokensToFunction(tokens: any, options: any) {\n    const matches = new Array(tokens.length);\n\n    for (let i = 0; i < tokens.length; i++) {\n      if (typeof tokens[i] === 'object') {\n        matches[i] = new RegExp(`^(?:${tokens[i].pattern})$`, this.flags(options));\n      }\n    }\n\n    return function (data: any, options: any) {\n      let path = '';\n      const encode = (options && options.encode) || encodeURIComponent;\n      const validate = options ? options.validate !== false : true;\n\n      for (let i = 0; i < tokens.length; i++) {\n        const token = tokens[i];\n\n        if (typeof token === 'string') {\n          path += token;\n          continue;\n        }\n\n        const value = data ? data[token.name] : undefined;\n        let segment;\n\n        if (Array.isArray(value)) {\n          if (!token.repeat) {\n            throw new TypeError(`Expected \"${token.name}\" to not repeat, but got array`);\n          }\n\n          if (value.length === 0) {\n            if (token.optional) {\n              continue;\n            }\n\n            throw new TypeError(`Expected \"${token.name}\" to not be empty`);\n          }\n\n          for (let j = 0; j < value.length; j++) {\n            segment = encode(value[j], token);\n\n            if (validate && !matches[i].test(segment)) {\n              throw new TypeError(`Expected all \"${token.name}\" to match \"${token.pattern}\"`);\n            }\n\n            path += (j === 0 ? token.prefix : token.delimiter) + segment;\n          }\n\n          continue;\n        }\n\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n          segment = encode(String(value), token);\n\n          if (validate && !matches[i].test(segment)) {\n            throw new TypeError(`Expected \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`);\n          }\n\n          path += token.prefix + segment;\n          continue;\n        }\n\n        if (token.optional) {\n          continue;\n        }\n\n        throw new TypeError(`Expected \"${token.name}\" to be ${token.repeat ? 'an array' : 'a string'}`);\n      }\n\n      return path;\n    };\n  }\n\n  escapeString(str: any) {\n    return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1');\n  }\n\n  escapeGroup(group: any) {\n    return group.replace(/([=!:$/()])/g, '\\\\$1');\n  }\n\n  flags(options: any) {\n    return options && options.sensitive ? '' : 'i';\n  }\n\n  regexpToRegexp(path: any, keys: any) {\n    if (!keys) {\n      return path;\n    }\n\n    const groups = path.source.match(/\\((?!\\?)/g);\n\n    if (groups) {\n      for (let i = 0; i < groups.length; i++) {\n        keys.push({\n          name: i,\n          prefix: null,\n          delimiter: null,\n          optional: false,\n          repeat: false,\n          pattern: null\n        });\n      }\n    }\n\n    return path;\n  }\n\n  arrayToRegexp(path: any, keys: any, options: any): RegExp {\n    const parts = [];\n\n    for (let i = 0; i < path.length; i++) {\n      parts.push(this.pathToRegexp(path[i], keys, options).source);\n    }\n\n    return new RegExp(`(?:${parts.join('|')})`, this.flags(options));\n  }\n\n  stringToRegexp(path: any, keys: any, options: any) {\n    return this.tokensToRegExp(this.parse(path, options), keys, options);\n  }\n\n  tokensToRegExp(tokens: any, keys: any, options: any) {\n    options = options || {};\n\n    const strict = options.strict;\n    const start = options.start !== false;\n    const end = options.end !== false;\n    const delimiter = options.delimiter || this.DEFAULT_DELIMITER;\n    const endsWith = []\n      .concat(options.endsWith || [])\n      .map(this.escapeString)\n      .concat('$')\n      .join('|');\n    let route = start ? '^' : '';\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === 'string') {\n        route += this.escapeString(token);\n      } else {\n        const capture = token.repeat\n          ? `(?:${token.pattern})(?:${this.escapeString(token.delimiter)}(?:${token.pattern}))*`\n          : token.pattern;\n\n        if (keys) {\n          keys.push(token);\n        }\n\n        if (token.optional) {\n          if (!token.prefix) {\n            route += `(${capture})?`;\n          } else {\n            route += `(?:${this.escapeString(token.prefix)}(${capture}))?`;\n          }\n        } else {\n          route += `${this.escapeString(token.prefix)}(${capture})`;\n        }\n      }\n    }\n\n    if (end) {\n      if (!strict) {\n        route += `(?:${this.escapeString(delimiter)})?`;\n      }\n\n      route += endsWith === '$' ? '$' : `(?=${endsWith})`;\n    } else {\n      const endToken = tokens[tokens.length - 1];\n      const isEndDelimited =\n        typeof endToken === 'string' ? endToken[endToken.length - 1] === delimiter : endToken === undefined;\n\n      if (!strict) {\n        route += `(?:${this.escapeString(delimiter)}(?=${endsWith}))?`;\n      }\n      if (!isEndDelimited) {\n        route += `(?=${this.escapeString(delimiter)}|${endsWith})`;\n      }\n    }\n\n    return new RegExp(route, this.flags(options));\n  }\n\n  pathToRegexp(path: any, keys: any, options: any) {\n    if (path instanceof RegExp) {\n      return this.regexpToRegexp(path, keys);\n    }\n\n    if (Array.isArray(path)) {\n      return this.arrayToRegexp(/** @type {!Array} */ path, keys, options);\n    }\n\n    return this.stringToRegexp(/** @type {string} */ path, keys, options);\n  }\n}\n","export function setFavicon(path: string): void {\n  const link: any = document.querySelector(\"link[rel*='icon']\") || document.createElement('link');\n  link.type = 'image/x-icon';\n  link.rel = 'shortcut icon';\n  link.href = path;\n  document.getElementsByTagName('head')[0].appendChild(link);\n}\n\nexport function hasFavicon(url: string): Promise<boolean> {\n  return new Promise(resolve => {\n    let xmlHttp;\n    if (window['XMLHttpRequest']) {\n      xmlHttp = new XMLHttpRequest();\n    }\n    if (xmlHttp) {\n      xmlHttp.open('Get', url, false);\n      xmlHttp.send();\n      if (xmlHttp.status == 404) {\n        resolve(false);\n      } else {\n        resolve(true);\n      }\n    } else {\n      resolve(false);\n    }\n  });\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}