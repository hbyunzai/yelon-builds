import { Direction } from '@angular/cdk/bidi';
import { OnInit } from '@angular/core';
import { Layout } from '@yelon/theme';
import * as i0 from "@angular/core";
export declare class SettingDrawerComponent implements OnInit {
    private readonly cdr;
    private readonly msg;
    private readonly settingSrv;
    private readonly lazy;
    private readonly ngZone;
    private readonly doc;
    private readonly directionality;
    private readonly destroy$;
    autoApplyColor: boolean;
    compilingText: string;
    devTips: string;
    lessJs: string;
    private loadedLess;
    dir?: Direction;
    isDev: boolean;
    collapse: boolean;
    get layout(): Layout;
    data: any;
    color: string;
    colors: {
        key: string;
        color: string;
    }[];
    constructor();
    private get cachedData();
    private get DEFAULT_PRIMARY();
    ngOnInit(): void;
    private loadLess;
    private genVars;
    private runLess;
    toggle(): void;
    changeColor(color: string): void;
    setLayout(name: string, value: any): void;
    private resetData;
    private get validKeys();
    apply(): void;
    reset(): void;
    copyVar(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<SettingDrawerComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<SettingDrawerComponent, "setting-drawer", never, { "autoApplyColor": { "alias": "autoApplyColor"; "required": false; }; "compilingText": { "alias": "compilingText"; "required": false; }; "devTips": { "alias": "devTips"; "required": false; }; "lessJs": { "alias": "lessJs"; "required": false; }; }, {}, never, never, true, never>;
    static ngAcceptInputType_autoApplyColor: unknown;
}
