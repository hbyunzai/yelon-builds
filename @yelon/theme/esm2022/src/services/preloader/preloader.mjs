import { DOCUMENT, isPlatformServer } from '@angular/common';
import { PLATFORM_ID, inject } from '@angular/core';
export function stepPreloader() {
    const doc = inject(DOCUMENT);
    const ssr = isPlatformServer(inject(PLATFORM_ID));
    if (ssr) {
        return () => { };
    }
    const body = doc.querySelector('body');
    body.style.overflow = 'hidden';
    let done = false;
    return () => {
        if (done)
            return;
        done = true;
        const preloader = doc.querySelector('.preloader');
        if (preloader == null)
            return;
        const CLS = 'preloader-hidden';
        preloader.addEventListener('transitionend', () => {
            preloader.className = CLS;
        });
        preloader.className += ` ${CLS}-add ${CLS}-add-active`;
        body.style.overflow = '';
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlbG9hZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvdGhlbWUvc3JjL3NlcnZpY2VzL3ByZWxvYWRlci9wcmVsb2FkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzdELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXBELE1BQU0sVUFBVSxhQUFhO0lBQzNCLE1BQU0sR0FBRyxHQUFhLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUN2QyxNQUFNLEdBQUcsR0FBRyxnQkFBZ0IsQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQztJQUNsRCxJQUFJLEdBQUcsRUFBRSxDQUFDO1FBQ1IsT0FBTyxHQUFHLEVBQUUsR0FBRSxDQUFDLENBQUM7SUFDbEIsQ0FBQztJQUNELE1BQU0sSUFBSSxHQUFHLEdBQUcsQ0FBQyxhQUFhLENBQWtCLE1BQU0sQ0FBRSxDQUFDO0lBQ3pELElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztJQUMvQixJQUFJLElBQUksR0FBRyxLQUFLLENBQUM7SUFFakIsT0FBTyxHQUFHLEVBQUU7UUFDVixJQUFJLElBQUk7WUFBRSxPQUFPO1FBRWpCLElBQUksR0FBRyxJQUFJLENBQUM7UUFDWixNQUFNLFNBQVMsR0FBRyxHQUFHLENBQUMsYUFBYSxDQUFjLFlBQVksQ0FBQyxDQUFDO1FBQy9ELElBQUksU0FBUyxJQUFJLElBQUk7WUFBRSxPQUFPO1FBRTlCLE1BQU0sR0FBRyxHQUFHLGtCQUFrQixDQUFDO1FBQy9CLFNBQVMsQ0FBQyxnQkFBZ0IsQ0FBQyxlQUFlLEVBQUUsR0FBRyxFQUFFO1lBQy9DLFNBQVMsQ0FBQyxTQUFTLEdBQUcsR0FBRyxDQUFDO1FBQzVCLENBQUMsQ0FBQyxDQUFDO1FBQ0gsU0FBUyxDQUFDLFNBQVMsSUFBSSxJQUFJLEdBQUcsUUFBUSxHQUFHLGFBQWEsQ0FBQztRQUN2RCxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsR0FBRyxFQUFFLENBQUM7SUFDM0IsQ0FBQyxDQUFDO0FBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERPQ1VNRU5ULCBpc1BsYXRmb3JtU2VydmVyIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IFBMQVRGT1JNX0lELCBpbmplY3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuZXhwb3J0IGZ1bmN0aW9uIHN0ZXBQcmVsb2FkZXIoKTogKCkgPT4gdm9pZCB7XG4gIGNvbnN0IGRvYzogRG9jdW1lbnQgPSBpbmplY3QoRE9DVU1FTlQpO1xuICBjb25zdCBzc3IgPSBpc1BsYXRmb3JtU2VydmVyKGluamVjdChQTEFURk9STV9JRCkpO1xuICBpZiAoc3NyKSB7XG4gICAgcmV0dXJuICgpID0+IHt9O1xuICB9XG4gIGNvbnN0IGJvZHkgPSBkb2MucXVlcnlTZWxlY3RvcjxIVE1MQm9keUVsZW1lbnQ+KCdib2R5JykhO1xuICBib2R5LnN0eWxlLm92ZXJmbG93ID0gJ2hpZGRlbic7XG4gIGxldCBkb25lID0gZmFsc2U7XG5cbiAgcmV0dXJuICgpID0+IHtcbiAgICBpZiAoZG9uZSkgcmV0dXJuO1xuXG4gICAgZG9uZSA9IHRydWU7XG4gICAgY29uc3QgcHJlbG9hZGVyID0gZG9jLnF1ZXJ5U2VsZWN0b3I8SFRNTEVsZW1lbnQ+KCcucHJlbG9hZGVyJyk7XG4gICAgaWYgKHByZWxvYWRlciA9PSBudWxsKSByZXR1cm47XG5cbiAgICBjb25zdCBDTFMgPSAncHJlbG9hZGVyLWhpZGRlbic7XG4gICAgcHJlbG9hZGVyLmFkZEV2ZW50TGlzdGVuZXIoJ3RyYW5zaXRpb25lbmQnLCAoKSA9PiB7XG4gICAgICBwcmVsb2FkZXIuY2xhc3NOYW1lID0gQ0xTO1xuICAgIH0pO1xuICAgIHByZWxvYWRlci5jbGFzc05hbWUgKz0gYCAke0NMU30tYWRkICR7Q0xTfS1hZGQtYWN0aXZlYDtcbiAgICBib2R5LnN0eWxlLm92ZXJmbG93ID0gJyc7XG4gIH07XG59XG4iXX0=