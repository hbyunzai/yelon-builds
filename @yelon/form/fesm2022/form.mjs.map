{"version":3,"file":"form.mjs","sources":["../../../../packages/form/src/config.ts","../../../../packages/form/src/const.ts","../../../../packages/form/src/utils.ts","../../../../packages/form/src/model/form.property.ts","../../../../packages/form/src/model/object.property.ts","../../../../packages/form/src/model/array.property.ts","../../../../packages/form/src/model/atomic.property.ts","../../../../packages/form/src/model/boolean.property.ts","../../../../packages/form/src/model/number.property.ts","../../../../packages/form/src/model/string.property.ts","../../../../packages/form/src/model/form.property.factory.ts","../../../../packages/form/src/terminator.service.ts","../../../../packages/form/src/validator.factory.ts","../../../../packages/form/src/widget.factory.ts","../../../../packages/form/src/sf-item.component.ts","../../../../packages/form/src/sf-fixed.directive.ts","../../../../packages/form/src/sf.component.ts","../../../../packages/form/src/sf.component.html","../../../../packages/form/src/sf-item-wrap.component.ts","../../../../packages/form/src/sf-item-wrap.component.html","../../../../packages/form/src/widgets/custom/sf-template.directive.ts","../../../../packages/form/src/widget.ts","../../../../packages/form/src/widgets/array/array.widget.ts","../../../../packages/form/src/widgets/array/array.widget.html","../../../../packages/form/src/widgets/autocomplete/autocomplete.widget.ts","../../../../packages/form/src/widgets/autocomplete/autocomplete.widget.html","../../../../packages/form/src/widgets/boolean/boolean.widget.ts","../../../../packages/form/src/widgets/boolean/boolean.widget.html","../../../../packages/form/src/widgets/cascader/cascader.widget.ts","../../../../packages/form/src/widgets/cascader/cascader.widget.html","../../../../packages/form/src/widgets/checkbox/checkbox.widget.ts","../../../../packages/form/src/widgets/checkbox/checkbox.widget.html","../../../../packages/form/src/widgets/custom/custom.widget.ts","../../../../packages/form/src/widgets/date/date.widget.ts","../../../../packages/form/src/widgets/date/date.widget.html","../../../../packages/form/src/widgets/mention/mention.widget.ts","../../../../packages/form/src/widgets/mention/mention.widget.html","../../../../packages/form/src/widgets/number/number.widget.ts","../../../../packages/form/src/widgets/number/number.widget.html","../../../../packages/form/src/widgets/object/object.widget.ts","../../../../packages/form/src/widgets/object/object.widget.html","../../../../packages/form/src/widgets/radio/radio.widget.ts","../../../../packages/form/src/widgets/radio/radio.widget.html","../../../../packages/form/src/widgets/rate/rate.widget.ts","../../../../packages/form/src/widgets/rate/rate.widget.html","../../../../packages/form/src/widgets/select/select.widget.ts","../../../../packages/form/src/widgets/select/select.widget.html","../../../../packages/form/src/widgets/slider/slider.widget.ts","../../../../packages/form/src/widgets/slider/slider.widget.html","../../../../packages/form/src/widgets/string/string.widget.ts","../../../../packages/form/src/widgets/string/string.widget.html","../../../../packages/form/src/widgets/tag/tag.widget.ts","../../../../packages/form/src/widgets/tag/tag.widget.html","../../../../packages/form/src/widgets/text/text.widget.ts","../../../../packages/form/src/widgets/text/text.widget.html","../../../../packages/form/src/widgets/textarea/textarea.widget.ts","../../../../packages/form/src/widgets/textarea/textarea.widget.html","../../../../packages/form/src/widgets/time/time.widget.ts","../../../../packages/form/src/widgets/time/time.widget.html","../../../../packages/form/src/widgets/transfer/transfer.widget.ts","../../../../packages/form/src/widgets/transfer/transfer.widget.html","../../../../packages/form/src/widgets/tree-select/tree-select.widget.ts","../../../../packages/form/src/widgets/tree-select/tree-select.widget.html","../../../../packages/form/src/widgets/upload/upload.widget.ts","../../../../packages/form/src/widgets/upload/upload.widget.html","../../../../packages/form/src/widgets/nz-widget.registry.ts","../../../../packages/form/src/module.ts","../../../../packages/form/src/errors.ts","../../../../packages/form/form.ts"],"sourcesContent":["import { YunzaiConfigService, YunzaiSFConfig } from '@yelon/util/config';\n\nimport { SFButton } from './interface';\nimport { SFUISchemaItem } from './schema/ui';\n\nexport const SF_DEFAULT_CONFIG: YunzaiSFConfig = {\n  formatMap: {\n    'date-time': {\n      widget: 'date',\n      showTime: true,\n      format: `yyyy-MM-dd'T'HH:mm:ss.SSSxxx`\n    },\n    date: { widget: 'date', format: 'yyyy-MM-dd' },\n    'full-date': { widget: 'date', format: 'yyyy-MM-dd' },\n    time: { widget: 'time', format: 'HH:mm:ss.SSSxxx' },\n    'full-time': { widget: 'time' },\n    week: { widget: 'date', mode: 'week', format: 'yyyy-ww' },\n    month: { widget: 'date', mode: 'month', format: 'yyyy-MM' },\n    uri: { widget: 'upload' },\n    email: { widget: 'autocomplete', type: 'email' },\n    color: { widget: 'string', type: 'color' },\n    '': { widget: 'string' }\n  },\n  ignoreKeywords: ['type', 'enum'],\n  liveValidate: true,\n  autocomplete: null,\n  firstVisual: false,\n  onlyVisual: false,\n  errors: {},\n  ui: {} as SFUISchemaItem,\n  button: { submit_type: 'primary', reset_type: 'default' } as SFButton,\n  uiDateStringFormat: 'yyyy-MM-dd HH:mm:ss',\n  uiDateNumberFormat: 'T',\n  uiTimeStringFormat: 'HH:mm:ss',\n  uiTimeNumberFormat: 'T',\n  uiEmailSuffixes: ['qq.com', '163.com', 'gmail.com', '126.com', 'aliyun.com'],\n  delay: false\n};\n\nexport function mergeConfig(srv: YunzaiConfigService): YunzaiSFConfig {\n  return srv.merge('sf', SF_DEFAULT_CONFIG)!;\n}\n","export const SF_SEQ = '/';\n","import { Observable, of, map } from 'rxjs';\n\nimport { toBoolean } from '@yelon/util/decorator';\nimport { deepCopy } from '@yelon/util/other';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\n\nimport { SF_SEQ } from './const';\nimport type { SFValue } from './interface';\nimport type { SFSchema, SFSchemaDefinition, SFSchemaEnum } from './schema';\nimport type { SFUISchema, SFUISchemaItem, SFUISchemaItemRun, SFVisibleIf } from './schema/ui';\n\nexport function isBlank(o: NzSafeAny): boolean {\n  return o == null;\n}\n\nexport function toBool(value: NzSafeAny, defaultValue: boolean): boolean {\n  return toBoolean(value, defaultValue)!!;\n}\n\nexport function di(ui: SFUISchema, ...args: NzSafeAny[]): void {\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    if (ui.debug) {\n      console.warn(...args);\n    }\n  }\n}\n\n/** 根据 `$ref` 查找 `definitions` */\nfunction findSchemaDefinition($ref: string, definitions: SFSchemaDefinition): NzSafeAny {\n  const match = /^#\\/definitions\\/(.*)$/.exec($ref);\n  if (match && match[1]) {\n    // parser JSON Pointer\n    const parts = match[1].split(SF_SEQ);\n    let current: NzSafeAny = definitions;\n    for (let part of parts) {\n      part = part.replace(/~1/g, SF_SEQ).replace(/~0/g, '~');\n      if (current.hasOwnProperty(part)) {\n        current = current[part];\n      } else {\n        throw new Error(`Could not find a definition for ${$ref}.`);\n      }\n    }\n    return current;\n  }\n  throw new Error(`Could not find a definition for ${$ref}.`);\n}\n\n/**\n * 取回Schema，并处理 `$ref` 的关系\n */\nexport function retrieveSchema(schema: SFSchema, definitions: SFSchemaDefinition = {}): SFSchema {\n  if (schema.hasOwnProperty('$ref')) {\n    const $refSchema = findSchemaDefinition(schema.$ref!, definitions);\n    // remove $ref property\n    const { $ref, ...localSchema } = schema;\n    return retrieveSchema({ ...$refSchema, ...localSchema }, definitions);\n  }\n\n  return schema;\n}\n\nexport function resolveIfSchema(_schema: SFSchema, _ui: SFUISchemaItemRun): void {\n  const fn = (schema: SFSchema, ui: SFUISchemaItemRun): void => {\n    resolveIf(schema, ui);\n\n    Object.keys(schema.properties!).forEach(key => {\n      const property = schema.properties![key];\n      const uiKey = `$${key}`;\n      if (property.items) {\n        fn(property.items, ui[uiKey].$items);\n      }\n      if (property.properties) {\n        fn(property, ui[uiKey]);\n      }\n    });\n  };\n  fn(_schema, _ui);\n}\n\nfunction resolveIf(schema: SFSchema, ui: SFUISchemaItemRun): SFSchema | null {\n  if (!(schema.hasOwnProperty('if') && schema.hasOwnProperty('then'))) return null;\n  if (!schema.if!.properties) throw new Error(`if: does not contain 'properties'`);\n\n  const allKeys = Object.keys(schema.properties!);\n  const ifKeys = Object.keys(schema.if!.properties!);\n  detectKey(allKeys, ifKeys);\n  detectKey(allKeys, schema.then!.required!);\n  schema.required = schema.required!.concat(schema.then!.required!);\n  const hasElse = schema.hasOwnProperty('else');\n  if (hasElse) {\n    detectKey(allKeys, schema.else!.required!);\n    schema.required = schema.required.concat(schema.else!.required!);\n  }\n\n  const visibleIf: SFVisibleIf = {};\n  const visibleElse: SFVisibleIf = {};\n  ifKeys.forEach(key => {\n    const cond = schema.if!.properties![key].enum;\n    visibleIf[key] = cond!;\n    if (hasElse) visibleElse[key] = (value: SFValue) => !cond!.includes(value);\n  });\n\n  schema.then!.required!.forEach(key => (ui[`$${key}`].visibleIf = visibleIf));\n  if (hasElse) {\n    schema.else!.required!.forEach(key => (ui[`$${key}`].visibleIf = visibleElse));\n  }\n\n  return schema;\n}\n\nfunction detectKey(keys: string[], detectKeys: string[]): void {\n  detectKeys.forEach(key => {\n    if (!keys.includes(key)) {\n      throw new Error(`if: properties does not contain '${key}'`);\n    }\n  });\n}\n\nexport function orderProperties(properties: string[], order: string[]): string[] {\n  if (!Array.isArray(order)) return properties;\n  const arrayToHash = (arr: NzSafeAny): NzSafeAny =>\n    arr.reduce((prev: NzSafeAny, curr: NzSafeAny) => {\n      prev[curr] = true;\n      return prev;\n    }, {});\n  const errorPropList = (arr: NzSafeAny): string => `property [${arr.join(`', '`)}]`;\n\n  const propertyHash = arrayToHash(properties);\n  const orderHash = arrayToHash(order);\n  const extraneous = order.filter(prop => prop !== '*' && !propertyHash[prop]);\n  if (extraneous.length) {\n    throw new Error(`ui schema order list contains extraneous ${errorPropList(extraneous)}`);\n  }\n  const rest = properties.filter(prop => !orderHash[prop]);\n  const restIndex = order.indexOf('*');\n  if (restIndex === -1) {\n    if (rest.length) {\n      throw new Error(`ui schema order list does not contain ${errorPropList(rest)}`);\n    }\n    return order;\n  }\n  if (restIndex !== order.lastIndexOf('*')) {\n    throw new Error('ui schema order list contains more than one wildcard item');\n  }\n  const complete = [...order];\n  complete.splice(restIndex, 1, ...rest);\n  return complete;\n}\n\nexport function getEnum(list: NzSafeAny[], formData: NzSafeAny, readOnly: boolean): SFSchemaEnum[] {\n  if (isBlank(list) || !Array.isArray(list) || list.length === 0) return [];\n  if (typeof list[0] !== 'object') {\n    list = list.map((item: NzSafeAny) => {\n      return { label: item, value: item } as SFSchemaEnum;\n    });\n  }\n  if (formData) {\n    if (!Array.isArray(formData)) formData = [formData];\n    list.forEach((item: SFSchemaEnum) => {\n      if (~formData.indexOf(item.value)) item.checked = true;\n    });\n  }\n  // fix disabled status\n  if (readOnly) {\n    list.forEach((item: SFSchemaEnum) => (item.disabled = true));\n  }\n  return list;\n}\n\nexport function getCopyEnum(list: NzSafeAny[], formData: NzSafeAny, readOnly: boolean): SFSchemaEnum[] {\n  return getEnum(deepCopy(list || []), formData, readOnly);\n}\n\nexport function getData(\n  schema: SFSchema,\n  ui: SFUISchemaItem,\n  formData: NzSafeAny,\n  asyncArgs?: NzSafeAny\n): Observable<SFSchemaEnum[]> {\n  if (typeof ui.asyncData === 'function') {\n    return ui.asyncData(asyncArgs).pipe(map((list: SFSchemaEnum[]) => getEnum(list, formData, schema.readOnly!)));\n  }\n  return of(getCopyEnum(schema.enum!, formData, schema.readOnly!));\n}\n\n/**\n * Whether to using date-fns to format a date\n */\nexport function isDateFns(srv: NzI18nService): boolean {\n  if (!srv) return false;\n  const data = srv.getDateLocale();\n  // Compatible date-fns v1.x & v2.x\n  return data != null && !!data.formatDistance; // (!!data.distanceInWords || !!data.formatDistance);\n}\n","import { Injector, NgZone } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable, distinctUntilChanged, map, take } from 'rxjs';\n\nimport { YunzaiSFConfig } from '@yelon/util/config';\nimport { NzFormStatusService } from 'ng-zorro-antd/core/form';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport type { NzFormControlStatusType } from 'ng-zorro-antd/form';\n\nimport { SF_SEQ } from '../const';\nimport type { ErrorData } from '../errors';\nimport type { SFFormValueChange, SFUpdateValueAndValidity, SFValue } from '../interface';\nimport type { SFSchema, SFSchemaType } from '../schema';\nimport type { SFUISchema, SFUISchemaItem, SFUISchemaItemRun, SFVisibleIfReturn } from '../schema/ui';\nimport { isBlank } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport type { Widget } from '../widget';\n\nexport abstract class FormProperty {\n  private _errors: ErrorData[] | null = null;\n  private _valueChanges = new BehaviorSubject<SFFormValueChange>({ path: null, pathValue: null, value: null });\n  private _errorsChanges = new BehaviorSubject<ErrorData[] | null>(null);\n  private _visible = true;\n  private _visibilityChanges = new BehaviorSubject<boolean>(true);\n  private _root: PropertyGroup;\n  private _parent: PropertyGroup | null;\n  _objErrors: { [key: string]: ErrorData[] } = {};\n  schemaValidator: (value: SFValue) => ErrorData[];\n  schema: SFSchema;\n  ui: SFUISchema | SFUISchemaItemRun;\n  formData: Record<string, unknown>;\n  _value: SFValue = null;\n  widget!: Widget<FormProperty, SFUISchemaItem>;\n  path: string;\n  propertyId?: string;\n\n  constructor(\n    private injector: Injector,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: Record<string, unknown>,\n    parent: PropertyGroup | null,\n    path: string,\n    private _options: YunzaiSFConfig\n  ) {\n    this.schema = schema;\n    this.ui = ui;\n    this.schemaValidator = schemaValidatorFactory.createValidatorFn(schema, {\n      ignoreKeywords: this.ui.ignoreKeywords as string[],\n      debug: (ui as SFUISchemaItem)!.debug!\n    });\n    this.formData = formData || schema.default;\n    this._parent = parent;\n    if (parent) {\n      this._root = parent.root;\n    } else {\n      this._root = this as NzSafeAny;\n    }\n    this.path = path;\n  }\n\n  get valueChanges(): BehaviorSubject<SFFormValueChange> {\n    return this._valueChanges;\n  }\n\n  get errorsChanges(): BehaviorSubject<ErrorData[] | null> {\n    return this._errorsChanges;\n  }\n\n  get type(): SFSchemaType {\n    return this.schema.type!;\n  }\n\n  get parent(): PropertyGroup | null {\n    return this._parent;\n  }\n\n  get root(): PropertyGroup {\n    return this._root;\n  }\n\n  get value(): SFValue {\n    return this._value;\n  }\n\n  get errors(): ErrorData[] | null {\n    return this._errors;\n  }\n\n  get visible(): boolean {\n    return this._visible;\n  }\n\n  get valid(): boolean {\n    return this._errors === null || this._errors.length === 0;\n  }\n\n  get options(): YunzaiSFConfig {\n    return this._options;\n  }\n\n  /**\n   * 设置值\n   *\n   * @param onlySelf `true` 只对当前字段更新值和校验；`false` 包含上级字段\n   */\n  abstract setValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * 重置值，默认值为 `schema.default`\n   *\n   * @param onlySelf `true` 只对当前字段更新值和校验；`false` 包含上级字段\n   */\n  abstract resetValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * @internal\n   */\n  abstract _hasValue(): boolean;\n\n  /**\n   *  @internal\n   */\n  abstract _updateValue(): void;\n\n  cd(onlySelf: boolean = false): void {\n    this.widget?.detectChanges(onlySelf);\n  }\n\n  /**\n   * 更新值且校验数据\n   */\n  updateValueAndValidity(options?: SFUpdateValueAndValidity): void {\n    options = {\n      onlySelf: false,\n      emitValidator: true,\n      emitValueEvent: true,\n      updatePath: '',\n      updateValue: null,\n      ...options\n    };\n    this._updateValue();\n\n    if (options.emitValueEvent) {\n      options.updatePath = options.updatePath || this.path;\n      options.updateValue = options.updateValue == null ? this.value : options.updateValue;\n      this.valueChanges.next({ value: this.value, path: options.updatePath, pathValue: options.updateValue });\n    }\n\n    // `emitValidator` 每一次数据变更已经包含完整错误链路，后续父节点数据变更无须再触发校验\n    if (options.emitValidator && this.ui.liveValidate === true) {\n      this._runValidation();\n    }\n\n    if (this.parent && !options.onlySelf) {\n      this.parent.updateValueAndValidity({ ...options, emitValidator: false });\n    }\n  }\n\n  /** 根据路径搜索表单属性 */\n  searchProperty(path: string): FormProperty | null {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let prop: FormProperty = this;\n    let base: PropertyGroup | null = null;\n\n    let result = null;\n    if (path[0] === SF_SEQ) {\n      base = this.findRoot();\n      result = base.getProperty(path.substring(1));\n    } else {\n      while (result === null && prop.parent !== null) {\n        prop = base = prop.parent;\n        result = base.getProperty(path);\n      }\n    }\n    return result!;\n  }\n\n  /** 查找根表单属性 */\n  findRoot(): PropertyGroup {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let property: FormProperty = this;\n    while (property.parent !== null) {\n      property = property.parent;\n    }\n    return property as PropertyGroup;\n  }\n\n  // #region process errors\n\n  private isEmptyData(value: Record<string, unknown>): boolean {\n    if (isBlank(value)) return true;\n    switch (this.type) {\n      case 'string':\n        return `${value}`.length === 0;\n    }\n    return false;\n  }\n\n  /**\n   * @internal\n   */\n  _runValidation(): void {\n    let errors: ErrorData[];\n    // The definition of some rules:\n    // 1. Should not ajv validator when is empty data and required fields\n    // 2. Should not ajv validator when is empty data\n    const isEmpty = this.isEmptyData(this._value);\n    if (isEmpty && this.ui._required) {\n      errors = [{ keyword: 'required' }];\n    } else if (isEmpty) {\n      errors = [];\n    } else {\n      errors = this.schemaValidator(this._value) || [];\n    }\n    const customValidator = (this.ui as SFUISchemaItemRun).validator;\n    if (typeof customValidator === 'function') {\n      const customErrors = customValidator(this.value, this, this.findRoot());\n      if (customErrors instanceof Observable) {\n        customErrors.subscribe(res => {\n          this.setCustomErrors(errors, res);\n          this.cd(false);\n        });\n        return;\n      }\n      this.setCustomErrors(errors, customErrors);\n      return;\n    }\n\n    this._errors = errors;\n    this.setErrors(this._errors);\n  }\n\n  private setCustomErrors(errors: ErrorData[], list: ErrorData[]): void {\n    const hasCustomError = Array.isArray(list) && list.length > 0;\n    if (hasCustomError) {\n      list.forEach(err => {\n        if (!err.message) {\n          throw new Error(`The custom validator must contain a 'message' attribute to viewed error text`);\n        }\n        err.keyword = null;\n      });\n    }\n    this._errors = hasCustomError ? errors.concat(...list) : errors;\n    this.setErrors(this._errors);\n  }\n\n  /**\n   * Set the current error message\n   *\n   * 设置当前错误消息\n   *\n   * @param emitFormat 若提供的消息带有 `{xx}` 会自动根据参数进行转化，包含自定义函数\n   *\n   * @example\n   *\n   * this.sf.getProperty('/name')?.setErrors({ keyword: 'required' });\n   * this.sf.getProperty('/name')?.setErrors({ message: 'Please input your username!' });\n   * this.sf.getProperty('/name')?.setErrors(); // Clean error\n   */\n  setErrors(errors: ErrorData | ErrorData[] = [], emitFormat: boolean = true): void {\n    let arrErrs = Array.isArray(errors) ? errors : [errors];\n\n    if (emitFormat && arrErrs && !this.ui.onlyVisual) {\n      const l = (this.widget && this.widget.l.error) || {};\n      arrErrs = arrErrs.map((err: ErrorData) => {\n        let message: string | ((err: ErrorData) => string) =\n          err.keyword == null && err.message\n            ? err.message\n            : (this.ui.errors || {})[err.keyword!] || this._options.errors![err.keyword!] || l[err.keyword!] || ``;\n\n        if (message && typeof message === 'function') {\n          message = message(err);\n        }\n\n        if (message) {\n          if (~message.indexOf('{') && err.params) {\n            message = message.replace(/{([\\.a-zA-Z0-9]+)}/g, (_v: string, key: string) => err.params![key] || '');\n          }\n          err.message = message;\n        }\n        return err;\n      });\n    }\n    this._errors = arrErrs;\n    this._errorsChanges.next(arrErrs);\n    // Should send errors to parent field\n    if (this._parent) {\n      this._parent.setParentAndPlatErrors(arrErrs, this.path);\n    }\n  }\n\n  setParentAndPlatErrors(errors: ErrorData[], path: string): void {\n    this._objErrors[path] = errors;\n    const platErrors: ErrorData[] = [];\n    Object.keys(this._objErrors).forEach(p => {\n      const property = this.searchProperty(p);\n      if (property && !property.visible) return;\n      platErrors.push(...this._objErrors[p]);\n    });\n    this.setErrors(platErrors, false);\n  }\n\n  // #endregion\n\n  // #region condition\n\n  /**\n   * Set the hide or display of widget\n   * 设置小部件的隐藏或显示\n   */\n  setVisible(visible: boolean): this {\n    this._visible = visible;\n    this._visibilityChanges.next(visible);\n    // 渲染时需要重新触发 reset\n    if (visible) {\n      this.injector\n        .get(NgZone)\n        .onStable.pipe(take(1))\n        .subscribe(() => {\n          this.resetValue(this.value, true);\n        });\n    }\n    return this;\n  }\n\n  _bindVisibility(): void {\n    const visibleIf = (this.ui as SFUISchemaItem).visibleIf;\n    if (typeof visibleIf === 'object' && Object.keys(visibleIf).length === 0) {\n      this.setVisible(false);\n    } else if (visibleIf != null) {\n      const propertiesBinding: Array<Observable<boolean>> = [];\n      for (const dependencyPath in visibleIf) {\n        if (visibleIf.hasOwnProperty(dependencyPath)) {\n          const property = this.searchProperty(dependencyPath);\n          if (property) {\n            const valueCheck = property.valueChanges.pipe(\n              map(res => {\n                const vi = visibleIf[dependencyPath];\n                if (typeof vi === 'function') {\n                  const viFnRes = vi(res.value, property);\n                  // 同步更新 required\n                  if (typeof viFnRes === 'object') {\n                    const fixViFnRes = { show: false, required: false, ...viFnRes } as SFVisibleIfReturn;\n                    const parentRequired = this.parent?.schema.required!;\n                    if (parentRequired && this.propertyId) {\n                      const idx = parentRequired.findIndex(w => w === this.propertyId);\n                      if (fixViFnRes.required) {\n                        if (idx === -1) parentRequired.push(this.propertyId);\n                      } else {\n                        if (idx !== -1) parentRequired.splice(idx, 1);\n                      }\n                      this.ui._required = fixViFnRes.required;\n                    }\n                    return fixViFnRes.show!;\n                  }\n                  return viFnRes;\n                }\n                if (vi.indexOf('$ANY$') !== -1) {\n                  return res.value && res.value.length > 0;\n                } else {\n                  return vi.indexOf(res.value) !== -1;\n                }\n              })\n            );\n            const visibilityCheck = property._visibilityChanges;\n            const and = combineLatest([valueCheck, visibilityCheck]).pipe(map(results => results[0] && results[1]));\n            propertiesBinding.push(and);\n          } else {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n              console.warn(`Can't find property ${dependencyPath} for visibility check of ${this.path}`);\n            }\n          }\n        }\n      }\n\n      combineLatest(propertiesBinding)\n        .pipe(\n          map(values => (this.ui.visibleIfLogical === 'and' ? values.every(v => v) : values.some(v => v))),\n          distinctUntilChanged()\n        )\n        .subscribe(visible => this.setVisible(visible));\n    }\n  }\n\n  // #endregion\n\n  updateFeedback(status: NzFormControlStatusType = ''): void {\n    this.ui.feedback = status;\n    this.widget?.injector.get(NzFormStatusService).formStatusChanges.next({ status, hasFeedback: !!status });\n    this.cd(true);\n  }\n}\n\nexport abstract class PropertyGroup extends FormProperty {\n  properties: { [key: string]: FormProperty } | FormProperty[] | null = null;\n\n  getProperty(path: string): FormProperty | undefined {\n    const subPathIdx = path.indexOf(SF_SEQ);\n    const propertyId = subPathIdx !== -1 ? path.substring(0, subPathIdx) : path;\n\n    let property = (this.properties as { [key: string]: FormProperty })[propertyId];\n    if (property !== null && subPathIdx !== -1 && property instanceof PropertyGroup) {\n      const subPath = path.substring(subPathIdx + 1);\n      property = (property as PropertyGroup).getProperty(subPath)!;\n    }\n    return property;\n  }\n\n  forEachChild(fn: (formProperty: FormProperty, str: string) => void): void {\n    for (const propertyId in this.properties) {\n      if (this.properties.hasOwnProperty(propertyId)) {\n        const property = (this.properties as { [key: string]: FormProperty })[propertyId];\n        fn(property, propertyId);\n      }\n    }\n  }\n\n  forEachChildRecursive(fn: (formProperty: FormProperty) => void): void {\n    this.forEachChild(child => {\n      fn(child);\n      if (child instanceof PropertyGroup) {\n        (child as PropertyGroup).forEachChildRecursive(fn);\n      }\n    });\n  }\n\n  _bindVisibility(): void {\n    super._bindVisibility();\n    this._bindVisibilityRecursive();\n  }\n\n  private _bindVisibilityRecursive(): void {\n    this.forEachChildRecursive(property => {\n      property._bindVisibility();\n    });\n  }\n\n  isRoot(): boolean {\n    return this === this.root;\n  }\n}\n","import { Injector } from '@angular/core';\n\nimport { YunzaiSFConfig } from '@yelon/util/config';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { orderProperties } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\n\nexport class ObjectProperty extends PropertyGroup {\n  private _propertiesId: string[] = [];\n\n  get propertiesId(): string[] {\n    return this._propertiesId;\n  }\n\n  constructor(\n    injector: Injector,\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: NzSafeAny,\n    parent: PropertyGroup | null,\n    path: string,\n    options: YunzaiSFConfig\n  ) {\n    super(injector, schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.createProperties();\n  }\n\n  private createProperties(): void {\n    this.properties = {};\n    this._propertiesId = [];\n    let orderedProperties: string[];\n    try {\n      orderedProperties = orderProperties(Object.keys(this.schema.properties!), this.ui.order as string[]);\n    } catch (e) {\n      console.error(`Invalid ${this.schema.title || 'root'} object field configuration:`, e);\n    }\n    orderedProperties!.forEach(propertyId => {\n      (this.properties as { [key: string]: FormProperty })[propertyId] = this.formPropertyFactory.createProperty(\n        this.schema.properties![propertyId],\n        this.ui[`$${propertyId}`],\n        ((this.formData || {}) as NzSafeAny)[propertyId],\n        this,\n        propertyId\n      );\n      this._propertiesId.push(propertyId);\n    });\n  }\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    const properties = this.properties as { [key: string]: FormProperty };\n    for (const propertyId in value) {\n      if (value.hasOwnProperty(propertyId) && properties[propertyId]) {\n        (properties[propertyId] as FormProperty).setValue(value[propertyId], true);\n      }\n    }\n    this.cd(onlySelf);\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean): void {\n    value = value || this.schema.default || {};\n    const properties = this.properties as { [key: string]: FormProperty };\n    for (const propertyId in this.schema.properties) {\n      if (this.schema.properties.hasOwnProperty(propertyId)) {\n        properties[propertyId].resetValue(value[propertyId], true);\n      }\n    }\n    this.cd(onlySelf);\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n\n  _hasValue(): boolean {\n    return this.value != null && !!Object.keys(this.value).length;\n  }\n\n  _updateValue(): void {\n    const value: SFValue = {};\n    this.forEachChild((property, propertyId) => {\n      if (property.visible && property._hasValue()) {\n        value[propertyId] = property.value;\n      }\n    });\n    this._value = value;\n  }\n}\n","import { Injector } from '@angular/core';\n\nimport { YunzaiSFConfig } from '@yelon/util/config';\nimport { deepCopy } from '@yelon/util/other';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\nimport { ObjectProperty } from './object.property';\nimport { SF_SEQ } from '../const';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { SchemaValidatorFactory } from '../validator.factory';\n\nexport class ArrayProperty extends PropertyGroup {\n  constructor(\n    injector: Injector,\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: Record<string, unknown>,\n    parent: PropertyGroup | null,\n    path: string,\n    options: YunzaiSFConfig\n  ) {\n    super(injector, schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.properties = [];\n  }\n\n  getProperty(path: string): FormProperty | undefined {\n    const subPathIdx = path.indexOf(SF_SEQ);\n    const pos = +(subPathIdx !== -1 ? path.substring(0, subPathIdx) : path);\n    const list = this.properties as PropertyGroup[];\n    if (isNaN(pos) || pos >= list.length) {\n      return undefined;\n    }\n    const subPath = path.substring(subPathIdx + 1);\n    return list[pos].getProperty(subPath);\n  }\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    this.properties = [];\n    this.clearErrors();\n    this.resetProperties(value);\n    this.cd(onlySelf);\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean): void {\n    this._value = value || this.schema.default || [];\n    this.setValue(this._value, onlySelf);\n  }\n\n  _hasValue(): boolean {\n    return true;\n  }\n\n  _updateValue(): void {\n    const value: NzSafeAny[] = [];\n    this.forEachChild((property: FormProperty) => {\n      if (property.visible) {\n        value.push({ ...(this.widget?.cleanValue ? null : property.formData), ...property.value });\n      }\n    });\n    this._value = value;\n  }\n\n  private addProperty(formData: Record<string, unknown>): FormProperty {\n    const newProperty = this.formPropertyFactory.createProperty(\n      deepCopy(this.schema.items!),\n      deepCopy(this.ui.$items),\n      formData,\n      this as PropertyGroup\n    ) as ObjectProperty;\n    (this.properties as FormProperty[]).push(newProperty);\n    return newProperty;\n  }\n\n  private resetProperties(formDatas: Array<Record<string, unknown>>): void {\n    for (const item of formDatas) {\n      const property = this.addProperty(item);\n      property.resetValue(item, true);\n    }\n  }\n\n  private clearErrors(property?: FormProperty): void {\n    (property || this)._objErrors = {};\n  }\n\n  // #region actions\n\n  add(formData: Record<string, unknown>): FormProperty {\n    const newProperty = this.addProperty(formData);\n    newProperty.resetValue(formData, false);\n    return newProperty;\n  }\n\n  remove(index: number): void {\n    const list = this.properties as FormProperty[];\n    this.clearErrors();\n    list.splice(index, 1);\n    list.forEach((property, idx) => {\n      property.path = [property.parent!.path, idx].join(SF_SEQ);\n      this.clearErrors(property);\n      // TODO: 受限于 sf 的设计思路，对于移除数组项需要重新对每个子项进行校验，防止错误被父级合并后引起始终是错误的现象\n      if (property instanceof ObjectProperty) {\n        property.forEachChild(p => {\n          p.updateValueAndValidity();\n        });\n      }\n    });\n    if (list.length === 0) {\n      this.updateValueAndValidity();\n    }\n  }\n\n  // #endregion\n}\n","import { FormProperty } from './form.property';\nimport { SFValue } from '../interface';\n\nexport abstract class AtomicProperty extends FormProperty {\n  abstract fallbackValue(): SFValue;\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    this._value = value;\n    this.cd(onlySelf);\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean): void {\n    if (value == null) {\n      value = this.schema.default !== undefined ? this.schema.default : this.fallbackValue();\n    }\n    this._value = value;\n\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n\n    if (this.widget) {\n      this.widget.reset(value);\n      this.cd(onlySelf);\n    }\n  }\n\n  _hasValue(): boolean {\n    return this.fallbackValue() !== this.value;\n  }\n\n  _updateValue(): void {}\n}\n","import { AtomicProperty } from './atomic.property';\nimport { SFValue } from '../interface';\n\nexport class BooleanProperty extends AtomicProperty {\n  fallbackValue(): SFValue {\n    return null;\n  }\n}\n","import { AtomicProperty } from './atomic.property';\nimport { SFValue } from '../interface';\n\nexport class NumberProperty extends AtomicProperty {\n  fallbackValue(): null {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    if (typeof value === 'string') {\n      if (value.length) {\n        value = value.indexOf('.') > -1 ? parseFloat(value) : parseInt(value, 10);\n      } else {\n        value = undefined;\n      }\n    }\n    this._value = value;\n    this.cd(onlySelf);\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n}\n","import { AtomicProperty } from './atomic.property';\nimport { SFValue } from '../interface';\n\nexport class StringProperty extends AtomicProperty {\n  fallbackValue(): null {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean): void {\n    this._value = value == null ? '' : value;\n    this.cd(onlySelf);\n    this.updateValueAndValidity({ onlySelf, emitValueEvent: true });\n  }\n}\n","import { Injector } from '@angular/core';\n\nimport { YunzaiConfigService, YunzaiSFConfig } from '@yelon/util/config';\n\nimport { ArrayProperty } from './array.property';\nimport { BooleanProperty } from './boolean.property';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { NumberProperty } from './number.property';\nimport { ObjectProperty } from './object.property';\nimport { StringProperty } from './string.property';\nimport { mergeConfig } from '../config';\nimport { SF_SEQ } from '../const';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { retrieveSchema } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\n\nexport class FormPropertyFactory {\n  private options: YunzaiSFConfig;\n  constructor(\n    private injector: Injector,\n    private schemaValidatorFactory: SchemaValidatorFactory,\n    cogSrv: YunzaiConfigService\n  ) {\n    this.options = mergeConfig(cogSrv);\n  }\n\n  createProperty(\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: Record<string, unknown>,\n    parent: PropertyGroup | null = null,\n    propertyId?: string\n  ): FormProperty {\n    let newProperty: FormProperty | null = null;\n    let path = '';\n    if (parent) {\n      path += parent.path;\n      if (parent.parent !== null) {\n        path += SF_SEQ;\n      }\n      switch (parent.type) {\n        case 'object':\n          path += propertyId;\n          break;\n        case 'array':\n          path += ((parent as ArrayProperty).properties as PropertyGroup[]).length;\n          break;\n        default:\n          throw new Error(`Instanciation of a FormProperty with an unknown parent type: ${parent.type}`);\n      }\n    } else {\n      path = SF_SEQ;\n    }\n\n    if (schema.$ref) {\n      const refSchema = retrieveSchema(schema, parent!.root.schema.definitions);\n      newProperty = this.createProperty(refSchema, ui, formData, parent, path);\n    } else {\n      // fix required\n      if (\n        (propertyId && parent!.schema.required!.indexOf(propertyId.split(SF_SEQ).pop()!) !== -1) ||\n        ui.showRequired === true\n      ) {\n        ui._required = true;\n      }\n      // fix title\n      if (schema.title == null) {\n        schema.title = propertyId;\n      }\n      // fix date\n      if ((schema.type === 'string' || schema.type === 'number') && !schema.format && !(ui as SFUISchemaItem).format) {\n        if ((ui as SFUISchemaItem).widget === 'date')\n          ui._format = schema.type === 'string' ? this.options.uiDateStringFormat : this.options.uiDateNumberFormat;\n        else if ((ui as SFUISchemaItem).widget === 'time')\n          ui._format = schema.type === 'string' ? this.options.uiTimeStringFormat : this.options.uiTimeNumberFormat;\n      } else {\n        ui._format = ui.format;\n      }\n      switch (schema.type) {\n        case 'integer':\n        case 'number':\n          newProperty = new NumberProperty(\n            this.injector,\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options\n          );\n          break;\n        case 'string':\n          newProperty = new StringProperty(\n            this.injector,\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options\n          );\n          break;\n        case 'boolean':\n          newProperty = new BooleanProperty(\n            this.injector,\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options\n          );\n          break;\n        case 'object':\n          newProperty = new ObjectProperty(\n            this.injector,\n            this,\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options\n          );\n          break;\n        case 'array':\n          newProperty = new ArrayProperty(\n            this.injector,\n            this,\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options\n          );\n          break;\n        default:\n          throw new TypeError(`Undefined type ${schema.type}`);\n      }\n    }\n\n    newProperty.propertyId = propertyId;\n\n    if (newProperty instanceof PropertyGroup) {\n      this.initializeRoot(newProperty);\n    }\n\n    return newProperty;\n  }\n\n  private initializeRoot(rootProperty: PropertyGroup): void {\n    // rootProperty.init();\n    rootProperty._bindVisibility();\n  }\n}\n","import { Subject } from 'rxjs';\n\nexport class TerminatorService {\n  onDestroy: Subject<boolean>;\n\n  constructor() {\n    this.onDestroy = new Subject();\n  }\n\n  destroy(): void {\n    this.onDestroy.next(true);\n  }\n}\n","import { Inject, Injectable, NgZone } from '@angular/core';\n\nimport Ajv from 'ajv';\nimport addFormats from 'ajv-formats';\n\nimport { YunzaiConfigService, YunzaiSFConfig } from '@yelon/util/config';\nimport { REGEX } from '@yelon/util/format';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { mergeConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFValue } from './interface';\nimport { SFSchema } from './schema';\n\n@Injectable()\nexport abstract class SchemaValidatorFactory {\n  abstract createValidatorFn(\n    schema: SFSchema,\n    extraOptions: { ignoreKeywords: string[]; debug: boolean }\n  ): (value: SFValue) => ErrorData[];\n}\n\n@Injectable()\nexport class AjvSchemaValidatorFactory extends SchemaValidatorFactory {\n  protected ajv!: Ajv;\n  protected options!: YunzaiSFConfig;\n\n  constructor(\n    @Inject(YunzaiConfigService) cogSrv: YunzaiConfigService,\n    private ngZone: NgZone\n  ) {\n    super();\n    if (!(typeof document === 'object' && !!document)) {\n      return;\n    }\n    this.options = mergeConfig(cogSrv);\n    const customOptions = this.options.ajv || {};\n    this.ngZone.runOutsideAngular(() => {\n      this.ajv = new Ajv({\n        allErrors: true,\n        loopEnum: 50,\n        ...customOptions,\n        formats: {\n          'data-url': /^data:([a-z]+\\/[a-z0-9-+.]+)?;name=(.*);base64,(.*)$/,\n          color: REGEX.color,\n          mobile: REGEX.mobile,\n          'id-card': REGEX.idCard,\n          ...customOptions.formats\n        }\n      });\n      addFormats(this.ajv as NzSafeAny);\n    });\n  }\n\n  createValidatorFn(\n    schema: SFSchema,\n    extraOptions: { ignoreKeywords: string[]; debug: boolean }\n  ): (value: SFValue) => ErrorData[] {\n    const ignoreKeywords: string[] = [\n      ...(this.options.ignoreKeywords as string[]),\n      ...((extraOptions.ignoreKeywords as string[]) || [])\n    ];\n\n    return (value: SFValue): ErrorData[] => {\n      try {\n        this.ngZone.runOutsideAngular(() => this.ajv.validate(schema, value));\n      } catch (e) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          // swallow errors thrown in ajv due to invalid schemas, these\n          // still get displayed\n          if (extraOptions.debug) {\n            console.warn(e);\n          }\n        }\n      }\n      let errors = this.ajv.errors;\n      if (this.options && ignoreKeywords && errors) {\n        errors = errors.filter(w => ignoreKeywords.indexOf(w.keyword) === -1);\n      }\n      return errors as ErrorData[];\n    };\n  }\n}\n","import { ComponentRef, Injectable, ViewContainerRef } from '@angular/core';\n\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { FormProperty } from './model/form.property';\nimport { SFUISchemaItem } from './schema/ui';\nimport type { Widget } from './widget';\n\nexport class WidgetRegistry {\n  private _widgets: { [type: string]: Widget<FormProperty, SFUISchemaItem> } = {};\n\n  private defaultWidget!: Widget<FormProperty, SFUISchemaItem>;\n\n  get widgets(): { [type: string]: Widget<FormProperty, SFUISchemaItem> } {\n    return this._widgets;\n  }\n\n  setDefault(widget: NzSafeAny): void {\n    this.defaultWidget = widget;\n  }\n\n  register(type: string, widget: NzSafeAny): void {\n    this._widgets[type] = widget;\n  }\n\n  has(type: string): boolean {\n    return this._widgets.hasOwnProperty(type);\n  }\n\n  getType(type: string): Widget<FormProperty, SFUISchemaItem> {\n    if (this.has(type)) {\n      return this._widgets[type];\n    }\n    return this.defaultWidget;\n  }\n}\n\n@Injectable()\nexport class WidgetFactory {\n  constructor(private registry: WidgetRegistry) {}\n\n  createWidget(container: ViewContainerRef, type: string): ComponentRef<Widget<FormProperty, SFUISchemaItem>> {\n    if (!this.registry.has(type)) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        console.warn(`No widget for type \"${type}\"`);\n      }\n    }\n\n    const componentClass = this.registry.getType(type) as NzSafeAny;\n    return container.createComponent(componentClass);\n  }\n}\n","import {\n  Component,\n  ComponentRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { NzFormStatusService } from 'ng-zorro-antd/core/form';\n\nimport { FormProperty } from './model/form.property';\nimport { SFUISchemaItem } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport type { Widget } from './widget';\nimport { WidgetFactory } from './widget.factory';\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'sf-item',\n  exportAs: 'sfItem',\n  host: { '[class.sf__item]': 'true' },\n  template: `\n    <ng-template #target></ng-template>\n    <ng-container *ngTemplateOutlet=\"footer\" />\n  `,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  providers: [NzFormStatusService]\n})\nexport class SFItemComponent implements OnInit, OnChanges, OnDestroy {\n  private ref!: ComponentRef<Widget<FormProperty, SFUISchemaItem>>;\n  readonly destroy$ = new Subject<void>();\n  widget: Widget<FormProperty, SFUISchemaItem> | null = null;\n\n  @Input() formProperty!: FormProperty;\n  @Input() footer: TemplateRef<void> | null = null;\n\n  @ViewChild('target', { read: ViewContainerRef, static: true })\n  private container!: ViewContainerRef;\n\n  constructor(\n    private widgetFactory: WidgetFactory,\n    private terminator: TerminatorService\n  ) {}\n\n  onWidgetInstanciated(widget: Widget<FormProperty, SFUISchemaItem>): void {\n    this.widget = widget;\n    const id = `_sf-${nextUniqueId++}`;\n\n    const ui = this.formProperty.ui as SFUISchemaItem;\n    this.widget.formProperty = this.formProperty;\n    this.widget.schema = this.formProperty.schema;\n    this.widget.ui = ui;\n    this.widget.id = id;\n    this.formProperty.widget = widget;\n  }\n\n  ngOnInit(): void {\n    this.terminator.onDestroy.subscribe(() => this.ngOnDestroy());\n  }\n\n  ngOnChanges(): void {\n    const p = this.formProperty;\n    this.ref = this.widgetFactory.createWidget(this.container, (p.ui.widget || p.schema.type) as string);\n    this.onWidgetInstanciated(this.ref.instance);\n  }\n\n  ngOnDestroy(): void {\n    const { destroy$ } = this;\n    destroy$.next();\n    destroy$.complete();\n    this.ref.destroy();\n  }\n}\n","import { AfterViewInit, Directive, ElementRef, Input, OnChanges, Renderer2 } from '@angular/core';\n\nimport { InputNumber } from '@yelon/util/decorator';\n\n@Directive({ selector: '[fixed-label]' })\nexport class SFFixedDirective implements AfterViewInit, OnChanges {\n  private el: HTMLDivElement;\n  private _inited = false;\n\n  @Input('fixed-label') @InputNumber() num?: number | null;\n\n  private init(): void {\n    if (!this._inited || this.num == null || this.num <= 0) return;\n    const widgetEl = this.el.querySelector('.ant-row') || this.el;\n    this.render.addClass(widgetEl, 'sf__fixed');\n    const labelEl = widgetEl.querySelector('.ant-form-item-label');\n    const controlEl = widgetEl.querySelector('.ant-form-item-control-wrapper,.ant-form-item-control');\n    const unit = `${this.num}px`;\n    if (labelEl) {\n      this.render.setStyle(labelEl, 'flex', `0 0 ${unit}`);\n      this.render.setStyle(controlEl, 'max-width', `calc(100% - ${unit})`);\n    } else {\n      this.render.setStyle(controlEl, 'margin-left', unit);\n    }\n  }\n\n  constructor(\n    er: ElementRef,\n    private render: Renderer2\n  ) {\n    this.el = er.nativeElement as HTMLDivElement;\n  }\n\n  ngAfterViewInit(): void {\n    this._inited = true;\n    this.init();\n  }\n\n  ngOnChanges(): void {\n    if (this._inited) this.init();\n  }\n}\n","import { Platform } from '@angular/cdk/platform';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Injector,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { merge, Observable, filter } from 'rxjs';\n\nimport { ACLService } from '@yelon/acl';\nimport { YunzaiI18NService, YUNZAI_I18N_TOKEN, YelonLocaleService, LocaleData } from '@yelon/theme';\nimport { YunzaiConfigService, YunzaiSFConfig } from '@yelon/util/config';\nimport { BooleanInput, InputBoolean } from '@yelon/util/decorator';\nimport { deepCopy } from '@yelon/util/other';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport type { NzFormControlStatusType } from 'ng-zorro-antd/form';\n\nimport { mergeConfig } from './config';\nimport type { ErrorData } from './errors';\nimport type { SFButton, SFLayout, SFMode, SFValueChange } from './interface';\nimport { FormProperty, PropertyGroup } from './model/form.property';\nimport { FormPropertyFactory } from './model/form.property.factory';\nimport type { SFSchema } from './schema/index';\nimport type { SFOptionalHelp, SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport { di, resolveIfSchema, retrieveSchema } from './utils';\nimport { SchemaValidatorFactory } from './validator.factory';\nimport { WidgetFactory } from './widget.factory';\n\nexport function useFactory(\n  injector: Injector,\n  schemaValidatorFactory: SchemaValidatorFactory,\n  cogSrv: YunzaiConfigService\n): FormPropertyFactory {\n  return new FormPropertyFactory(injector, schemaValidatorFactory, cogSrv);\n}\n\n@Component({\n  selector: 'sf, [sf]',\n  exportAs: 'sf',\n  templateUrl: './sf.component.html',\n  providers: [\n    WidgetFactory,\n    {\n      provide: FormPropertyFactory,\n      useFactory,\n      deps: [Injector, SchemaValidatorFactory, YunzaiConfigService]\n    },\n    TerminatorService\n  ],\n  host: {\n    '[class.sf]': 'true',\n    '[class.sf__inline]': `layout === 'inline'`,\n    '[class.sf__horizontal]': `layout === 'horizontal'`,\n    '[class.sf__search]': `mode === 'search'`,\n    '[class.sf__edit]': `mode === 'edit'`,\n    '[class.sf__no-error]': `onlyVisual`,\n    '[class.sf__no-colon]': `noColon`,\n    '[class.sf__compact]': `compact`\n  },\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class SFComponent implements OnInit, OnChanges, OnDestroy {\n  static ngAcceptInputType_liveValidate: BooleanInput;\n  static ngAcceptInputType_firstVisual: BooleanInput;\n  static ngAcceptInputType_onlyVisual: BooleanInput;\n  static ngAcceptInputType_compact: BooleanInput;\n  static ngAcceptInputType_loading: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_noColon: BooleanInput;\n  static ngAcceptInputType_cleanValue: BooleanInput;\n  static ngAcceptInputType_delay: BooleanInput;\n\n  private _renders = new Map<string, TemplateRef<void>>();\n  private _item!: Record<string, unknown>;\n  private _valid = true;\n  private _defUi!: SFUISchemaItem;\n  readonly options: YunzaiSFConfig;\n\n  _inited = false;\n  locale: LocaleData = {};\n  rootProperty: FormProperty | null = null;\n  _formData!: Record<string, unknown>;\n  _btn!: SFButton;\n  _schema!: SFSchema;\n  _ui!: SFUISchema;\n\n  get btnGrid(): NzSafeAny {\n    return this._btn.render!.grid;\n  }\n\n  // #region fields\n\n  /** 表单布局，等同 `nzLayout`，默认：horizontal */\n  @Input() layout: SFLayout = 'horizontal';\n  /** JSON Schema */\n  @Input() schema!: SFSchema;\n  /** UI Schema */\n  @Input() ui!: SFUISchema;\n  /** 表单默认值 */\n  @Input() formData?: Record<string, NzSafeAny>;\n  /**\n   * 按钮\n   * - 值为 `null` 或 `undefined` 表示手动添加按钮，但保留容器\n   * - 值为 `none` 表示手动添加按钮，且不保留容器\n   * - 使用 `spanLabelFixed` 固定标签宽度时，若无 `render.class` 则默认为居中状态\n   */\n  @Input() button?: SFButton | 'none' | null = {};\n  /**\n   * 是否实时校验，默认：`true`\n   * - `true` 每一次都校验\n   * - `false` 提交时校验\n   */\n  @Input() @InputBoolean() liveValidate = true;\n  /** 指定表单 `autocomplete` 值 */\n  @Input() autocomplete: 'on' | 'off';\n  /**\n   * Whether to display error visuals immediately\n   *\n   * 是否立即显示错误视觉\n   */\n  @Input() @InputBoolean() firstVisual = true;\n  /**\n   * Whether to only display error visuals but not error text\n   *\n   * 是否只展示错误视觉不显示错误文本\n   */\n  @Input() @InputBoolean() onlyVisual = false;\n  @Input() @InputBoolean() compact = false;\n\n  /**\n   * Form default mode, will force override `layout`, `firstVisual`, `liveValidate` parameters\n   *\n   * 表单预设模式，会强制覆盖 `layout`，`firstVisual`，`liveValidate` 参数\n   */\n  @Input()\n  set mode(value: SFMode) {\n    switch (value) {\n      case 'search':\n        this.layout = 'inline';\n        this.firstVisual = false;\n        this.liveValidate = false;\n        if (this._btn) {\n          this._btn.submit = this._btn.search;\n        }\n        break;\n      case 'edit':\n        this.layout = 'horizontal';\n        this.firstVisual = false;\n        this.liveValidate = true;\n        if (this._btn) {\n          this._btn.submit = this._btn.edit;\n        }\n        break;\n    }\n    this._mode = value;\n  }\n\n  get mode(): SFMode {\n    return this._mode;\n  }\n\n  private _mode!: SFMode;\n  /**\n   * Whether to load status，when `true` reset button is disabled status, submit button is loading status\n   */\n  @Input() @InputBoolean() loading = false;\n  @Input() @InputBoolean() disabled = false;\n  @Input() @InputBoolean() noColon = false;\n  @Input() @InputBoolean() cleanValue = false;\n  @Input() @InputBoolean() delay = false;\n  @Output() readonly formValueChange = new EventEmitter<SFValueChange>();\n  @Output() readonly formChange = new EventEmitter<Record<string, unknown>>();\n  @Output() readonly formSubmit = new EventEmitter<Record<string, unknown>>();\n  @Output() readonly formReset = new EventEmitter<Record<string, unknown>>();\n  @Output() readonly formError = new EventEmitter<ErrorData[]>();\n\n  // #endregion\n\n  /**\n   * Whether the form is valid\n   *\n   * 表单是否有效\n   */\n  get valid(): boolean {\n    return this._valid;\n  }\n\n  /**\n   * The value of the form\n   *\n   * 表单值\n   */\n  get value(): { [key: string]: NzSafeAny } {\n    return this._item;\n  }\n\n  /**\n   * Get form element property based on [path](https://ng.yunzainfo.com/form/qa#path)\n   *\n   * 根据[路径](https://ng.yunzainfo.com/form/qa#path)获取表单元素属性\n   */\n  getProperty(path: string): FormProperty | null | undefined {\n    return this.rootProperty?.searchProperty(path);\n  }\n\n  /**\n   * Get element value based on [path](https://ng.yunzainfo.com/form/qa#path)\n   *\n   * 根据[路径](https://ng.yunzainfo.com/form/qa#path)获取表单元素值\n   */\n  getValue(path: string): NzSafeAny {\n    return this.getProperty(path)?.value;\n  }\n\n  /**\n   * Set form element new value based on [path](https://ng.yunzainfo.com/form/qa#path)\n   *\n   * 根据[路径](https://ng.yunzainfo.com/form/qa#path)设置某个表单元素属性值\n   */\n  setValue(path: string, value: NzSafeAny): this {\n    const item = this.getProperty(path);\n    if (!item) {\n      throw new Error(`Invalid path: ${path}`);\n    }\n    item.resetValue(value, false);\n    return this;\n  }\n\n  /**\n   * Update the feedback status of the widget\n   *\n   * 更新小部件的反馈状态\n   *\n   * ```ts\n   * // Validate status of the widget\n   * this.sf.updateFeedback('/name', 'validating');\n   * // Clean validate status of the widget\n   * this.sf.updateFeedback('/name');\n   * ```\n   */\n  updateFeedback(path: string, status: NzFormControlStatusType = ''): this {\n    this.getProperty(path)?.updateFeedback(status);\n    return this;\n  }\n\n  onSubmit(e: Event): void {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!this.liveValidate) this.validator();\n    if (!this.valid) return;\n    this.formSubmit.emit(this.value);\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    private terminator: TerminatorService,\n    private dom: DomSanitizer,\n    private cdr: ChangeDetectorRef,\n    private localeSrv: YelonLocaleService,\n    @Optional() private aclSrv: ACLService,\n    @Optional() @Inject(YUNZAI_I18N_TOKEN) private i18nSrv: YunzaiI18NService,\n    cogSrv: YunzaiConfigService,\n    private platform: Platform\n  ) {\n    this.options = mergeConfig(cogSrv);\n    this.liveValidate = this.options.liveValidate as boolean;\n    this.firstVisual = this.options.firstVisual as boolean;\n    this.autocomplete = this.options.autocomplete as 'on' | 'off';\n    this.delay = this.options.delay as boolean;\n    this.localeSrv.change.pipe(takeUntilDestroyed()).subscribe(() => {\n      this.locale = this.localeSrv.getData('sf');\n      if (this._inited) {\n        this.validator({ emitError: false, onlyRoot: false });\n        this.coverButtonProperty();\n        this.cdr.markForCheck();\n      }\n    });\n    const refSchemas: Array<Observable<NzSafeAny> | null> = [\n      this.aclSrv ? this.aclSrv.change : null,\n      this.i18nSrv ? this.i18nSrv.change : null\n    ].filter(o => o != null);\n    if (refSchemas.length > 0) {\n      merge(...(refSchemas as Array<Observable<NzSafeAny>>))\n        .pipe(\n          filter(() => this._inited),\n          takeUntilDestroyed()\n        )\n        .subscribe(() => this.refreshSchema());\n    }\n  }\n\n  protected fanyi(key: string): string {\n    return (this.i18nSrv ? this.i18nSrv.fanyi(key) : '') || key;\n  }\n\n  private inheritUI(ui: SFUISchemaItemRun): void {\n    ['optionalHelp'].filter(key => !!this._defUi[key]).forEach(key => (ui[key] = { ...this._defUi[key], ...ui[key] }));\n  }\n\n  private coverProperty(): void {\n    const isHorizontal = this.layout === 'horizontal';\n    const _schema = deepCopy(this.schema);\n    const { definitions } = _schema;\n\n    const inFn = (\n      schema: SFSchema,\n      _parentSchema: SFSchema,\n      uiSchema: SFUISchemaItemRun,\n      parentUiSchema: SFUISchemaItemRun,\n      uiRes: SFUISchemaItemRun\n    ): void => {\n      if (!Array.isArray(schema.required)) schema.required = [];\n\n      Object.keys(schema.properties!).forEach(key => {\n        const uiKeyPrefix = '$';\n        const uiKey = uiKeyPrefix + key;\n        const property = retrieveSchema(schema.properties![key] as SFSchema, definitions);\n        const curUi = {\n          ...(property.ui as SFUISchemaItem),\n          ...uiSchema[uiKey]\n        };\n        const ui = {\n          ...this._defUi,\n          ...parentUiSchema,\n          // 忽略部分会引起呈现的属性\n          visibleIf: undefined,\n          hidden: undefined,\n          optional: undefined,\n          optionalHelp: undefined,\n          widget: property.type,\n          ...(property.format && (this.options.formatMap as NzSafeAny)[property.format]),\n          ...(typeof property.ui === 'string' ? { widget: property.ui } : null),\n          ...(!property.format && !property.ui && Array.isArray(property.enum) && property.enum.length > 0\n            ? { widget: 'select' }\n            : null),\n          ...curUi\n        } as SFUISchemaItemRun;\n        Object.keys(ui)\n          .filter(key => key.startsWith(uiKeyPrefix))\n          .forEach(key => delete ui[key]);\n        // 继承父节点布局属性\n        if (isHorizontal) {\n          if (parentUiSchema.spanLabelFixed) {\n            if (!curUi.spanLabelFixed) {\n              ui.spanLabelFixed = parentUiSchema.spanLabelFixed;\n            }\n          } else {\n            if (!ui.spanLabel)\n              ui.spanLabel = typeof parentUiSchema.spanLabel === 'undefined' ? 5 : parentUiSchema.spanLabel;\n            if (!ui.spanControl)\n              ui.spanControl = typeof parentUiSchema.spanControl === 'undefined' ? 19 : parentUiSchema.spanControl;\n            if (!ui.offsetControl)\n              ui.offsetControl =\n                typeof parentUiSchema.offsetControl === 'undefined' ? null : parentUiSchema.offsetControl;\n          }\n        } else {\n          ui.spanLabel = null;\n          ui.spanControl = null;\n          ui.offsetControl = null;\n        }\n        // 内联强制清理 `grid` 参数\n        if (this.layout === 'inline') {\n          delete ui.grid;\n        }\n        // 非水平布局强制清理 `spanLabelFixed` 值\n        if (this.layout !== 'horizontal') {\n          ui.spanLabelFixed = null;\n        }\n        // 当指定标签为固定宽度时无须指定 `spanLabel`，`spanControl`\n        if (ui.spanLabelFixed != null && ui.spanLabelFixed > 0) {\n          ui.spanLabel = null;\n          ui.spanControl = null;\n        }\n        if (ui.widget === 'date' && ui.end != null) {\n          const dateEndProperty = schema.properties![ui.end];\n          if (dateEndProperty) {\n            dateEndProperty.ui = {\n              ...(dateEndProperty.ui as SFUISchemaItem),\n              widget: ui.widget,\n              hidden: true\n            };\n          } else {\n            ui.end = null;\n          }\n        }\n        this.inheritUI(ui);\n        if (ui.optionalHelp) {\n          if (typeof ui.optionalHelp === 'string') {\n            ui.optionalHelp = {\n              text: ui.optionalHelp\n            } as SFOptionalHelp;\n          }\n          const oh = (ui.optionalHelp = {\n            text: '',\n            icon: 'question-circle',\n            placement: 'top',\n            trigger: 'hover',\n            mouseEnterDelay: 0.15,\n            mouseLeaveDelay: 0.1,\n            ...ui.optionalHelp\n          });\n          if (oh.i18n) {\n            oh.text = this.fanyi(oh.i18n);\n          }\n          if (!oh.text) {\n            ui.optionalHelp = undefined;\n          }\n        }\n        if (ui.i18n) {\n          property.title = this.fanyi(ui.i18n);\n        }\n        if (ui.descriptionI18n) {\n          property.description = this.fanyi(ui.descriptionI18n);\n        }\n        if (property.description) {\n          ui._description = this.dom.bypassSecurityTrustHtml(property.description);\n        }\n        ui.hidden = typeof ui.hidden === 'boolean' ? ui.hidden : false;\n        if (ui.hidden === false && ui.acl && this.aclSrv && !this.aclSrv.can(ui.acl)) {\n          ui.hidden = true;\n        }\n\n        uiRes[uiKey] = ui;\n        delete property.ui;\n\n        if (ui.hidden === true) {\n          const idx = schema.required!.indexOf(key);\n          if (idx !== -1) {\n            schema.required!.splice(idx, 1);\n          }\n        }\n\n        if (property.items) {\n          ui.$items = {\n            ...(property.items.ui as SFUISchemaItem),\n            ...uiSchema[uiKey],\n            ...ui.$items\n          };\n          inFn(property.items, property.items, uiSchema[uiKey]?.$items ?? {}, ui.$items, ui.$items);\n        }\n\n        if (property.properties && Object.keys(property.properties).length) {\n          inFn(property, schema, uiSchema[uiKey] || {}, ui, ui);\n        }\n      });\n    };\n\n    if (this.ui == null) this.ui = {};\n    this._defUi = {\n      onlyVisual: this.options.onlyVisual,\n      size: this.options.size,\n      liveValidate: this.liveValidate,\n      ...this.options.ui,\n      ...(_schema as NzSafeAny).ui,\n      ...this.ui['*']\n    };\n    if (this.onlyVisual === true) {\n      this._defUi.onlyVisual = true;\n    }\n    // 内联强制清理 `grid` 参数\n    if (this.layout === 'inline') {\n      delete this._defUi.grid;\n    }\n\n    // root\n    this._ui = { ...this._defUi };\n\n    inFn(_schema, _schema, this.ui, this.ui, this._ui);\n\n    // cond\n    resolveIfSchema(_schema, this._ui);\n\n    this._schema = _schema;\n    delete _schema.ui;\n\n    di(this._ui, 'cover schema & ui', this._ui, _schema);\n  }\n\n  private coverButtonProperty(): void {\n    this._btn = {\n      render: { size: 'default' },\n      ...this.locale,\n      ...this.options.button,\n      ...(this.button as SFButton)\n    };\n    const firstKey = Object.keys(this._ui).find(w => w.startsWith('$'));\n    const btnRender = this._btn.render!;\n    if (this.layout === 'horizontal') {\n      const btnUi = firstKey ? this._ui[firstKey] : this._defUi;\n      if (!btnRender.grid) {\n        btnRender.grid = {\n          offset: btnUi.spanLabel,\n          span: btnUi.spanControl\n        };\n      }\n      // fixed label\n      if (btnRender.spanLabelFixed == null) {\n        btnRender.spanLabelFixed = btnUi.spanLabelFixed;\n      }\n      // 固定标签宽度时，若不指定样式，则默认居中\n      if (!btnRender.class && typeof btnUi.spanLabelFixed === 'number' && btnUi.spanLabelFixed > 0) {\n        btnRender.class = 'text-center';\n      }\n    } else {\n      btnRender.grid = {};\n    }\n    if (this._mode) {\n      this.mode = this._mode;\n    }\n\n    di(this._ui, 'button property', this._btn);\n  }\n\n  ngOnInit(): void {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n    this.validator();\n    this._inited = true;\n  }\n\n  ngOnChanges(changes: { [P in keyof this]?: SimpleChange } & SimpleChanges): void {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n    const ignoreRender = ['disabled', 'loading'];\n    if (Object.keys(changes).every(key => ignoreRender.includes(key))) {\n      this.cdr.detectChanges();\n      return;\n    }\n    if (!this.delay) {\n      this.refreshSchema();\n    }\n  }\n\n  /** @internal */\n  _addTpl(path: string, templateRef: TemplateRef<void>): void {\n    if (!this._inited) {\n      return;\n    }\n    if (this._renders.has(path)) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        console.warn(`Duplicate definition \"${path}\" custom widget`);\n      }\n      return;\n    }\n    this._renders.set(path, templateRef);\n    this.attachCustomRender();\n  }\n\n  private attachCustomRender(): void {\n    this._renders.forEach((tpl, path) => {\n      const property = this.rootProperty?.searchProperty(path);\n      if (property == null) {\n        return;\n      }\n      property.ui._render = tpl;\n    });\n  }\n\n  /**\n   * Validator the form is valid\n   *\n   * 校验表单是否有效\n   * - `emitError` 当表单无效时是否触发 `formError` 事件，默认：`true`\n   * - `onlyRoot` 只对根进行检验，不进行向下逐个递归，根已经包含整个 Json Schema，默认：`true`\n   */\n  validator(options: { emitError?: boolean; onlyRoot?: boolean } = { emitError: true, onlyRoot: true }): boolean {\n    if (this.rootProperty == null || !this.platform.isBrowser) {\n      return false;\n    }\n    const fn = (property: FormProperty): void => {\n      property._runValidation();\n      if (!(property instanceof PropertyGroup) || !property.properties) return;\n      if (Array.isArray(property.properties)) {\n        property.properties.forEach(p => fn(p));\n      } else {\n        Object.keys(property.properties).forEach(key =>\n          fn((property.properties as { [key: string]: FormProperty })[key])\n        );\n      }\n    };\n    if (options.onlyRoot) {\n      this.rootProperty!._runValidation();\n    } else {\n      fn(this.rootProperty!);\n    }\n\n    const errors = this.rootProperty!.errors;\n    this._valid = !(errors && errors.length);\n    if (options.emitError && !this._valid) this.formError.emit(errors!);\n    this.cdr.detectChanges();\n    return this._valid;\n  }\n\n  /**\n   * Refresh the form Schema, when specifying `newSchema` means to replace the current Schema\n   *\n   * 刷新 Schema，当指定 `newSchema` 表示替换当前的 Schema\n   *\n   * 可以针对某个表单元素进行刷新，例如：\n   * ```\n   * // 获取某个元素\n   * const statusProperty = this.sf.getProperty('/status')!;\n   * // 重置 `schema` 或 `ui` 参数\n   * statusProperty.schema.enum = ['1', '2', '3'];\n   * // 调用 `reset` 重置初始值\n   * statusProperty.widget.reset('2');\n   * ```\n   */\n  refreshSchema(newSchema?: SFSchema, newUI?: SFUISchema): this {\n    if (!this.platform.isBrowser) {\n      return this;\n    }\n    if (newSchema) this.schema = newSchema;\n    if (newUI) this.ui = newUI;\n\n    if (!this.schema || typeof this.schema.properties === 'undefined') throw new Error(`Invalid Schema`);\n    if (this.schema.ui && typeof this.schema.ui === 'string')\n      throw new Error(`Don't support string with root ui property`);\n\n    this.schema.type = 'object';\n\n    this._formData = { ...this.formData };\n\n    if (this._inited) this.terminator.destroy();\n\n    this.cleanRootSub();\n\n    this.coverProperty();\n    this.coverButtonProperty();\n\n    this.rootProperty = this.formPropertyFactory.createProperty(this._schema, this._ui, this.formData!);\n    this.attachCustomRender();\n    this.cdr.detectChanges();\n    this.reset();\n\n    let isFirst = true;\n    this.rootProperty.valueChanges.subscribe(res => {\n      this._item = { ...(this.cleanValue ? null : this.formData), ...res.value };\n      if (isFirst) {\n        isFirst = false;\n        return;\n      }\n      this.formChange.emit(this._item);\n      this.formValueChange.emit({ value: this._item, path: res.path, pathValue: res.pathValue });\n    });\n    this.rootProperty.errorsChanges.subscribe(errors => {\n      this._valid = !(errors && errors.length);\n      this.formError.emit(errors!);\n      this.cdr.detectChanges();\n    });\n\n    return this;\n  }\n\n  /**\n   * Reset form\n   *\n   * 重置表单\n   *\n   * @param [emit] 是否触发 `formReset` 事件，默认：`false`\n   */\n  reset(emit: boolean = false): this {\n    if (this.rootProperty == null || !this.platform.isBrowser) {\n      return this;\n    }\n    this.rootProperty.resetValue(this.formData, false);\n    Promise.resolve().then(() => this.cdr.detectChanges());\n    if (emit) {\n      this.formReset.emit(this.value);\n    }\n    return this;\n  }\n\n  private cleanRootSub(): void {\n    if (!this.rootProperty) return;\n    this.rootProperty.errorsChanges.unsubscribe();\n    this.rootProperty.valueChanges.unsubscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanRootSub();\n    this.terminator.destroy();\n  }\n}\n","<ng-template #con>\n  <ng-content></ng-content>\n</ng-template>\n<ng-template #btnTpl>\n  <ng-container *ngIf=\"button !== 'none'; else con\">\n    <nz-form-item\n      *ngIf=\"_btn && _btn.render\"\n      [ngClass]=\"_btn.render!.class!\"\n      class=\"sf-btns\"\n      [fixed-label]=\"_btn.render!.spanLabelFixed!\"\n    >\n      <div\n        nz-col\n        class=\"ant-form-item-control\"\n        [nzSpan]=\"btnGrid.span\"\n        [nzOffset]=\"btnGrid.offset\"\n        [nzXs]=\"btnGrid.xs\"\n        [nzSm]=\"btnGrid.sm\"\n        [nzMd]=\"btnGrid.md\"\n        [nzLg]=\"btnGrid.lg\"\n        [nzXl]=\"btnGrid.xl\"\n        [nzXXl]=\"btnGrid.xxl\"\n      >\n        <div class=\"ant-form-item-control-input\">\n          <div class=\"ant-form-item-control-input-content\">\n            <ng-container *ngIf=\"button; else con\">\n              <button\n                type=\"submit\"\n                nz-button\n                data-type=\"submit\"\n                [attr.data-event-id]=\"_btn.deid\"\n                [attr.title]=\"_btn.deid ? _btn.deid + 'submit' : 'submit'\"\n                [nzType]=\"_btn.submit_type!\"\n                [nzSize]=\"_btn.render!.size!\"\n                [nzLoading]=\"loading\"\n                [disabled]=\"liveValidate && !valid\"\n              >\n                <i\n                  *ngIf=\"_btn.submit_icon\"\n                  nz-icon\n                  [nzType]=\"_btn.submit_icon.type!\"\n                  [nzTheme]=\"_btn.submit_icon.theme!\"\n                  [nzTwotoneColor]=\"_btn.submit_icon.twoToneColor!\"\n                  [nzIconfont]=\"_btn.submit_icon.iconfont!\"\n                ></i>\n                {{ _btn.submit }}\n              </button>\n              <button\n                *ngIf=\"_btn.reset\"\n                type=\"button\"\n                nz-button\n                data-type=\"reset\"\n                [attr.data-event-id]=\"_btn.deid\"\n                [attr.title]=\"_btn.deid ? _btn.deid + 'reset' : 'reset'\"\n                [nzType]=\"_btn.reset_type!\"\n                [nzSize]=\"_btn.render!.size!\"\n                [disabled]=\"loading\"\n                (click)=\"reset(true)\"\n              >\n                <i\n                  *ngIf=\"_btn.reset_icon\"\n                  nz-icon\n                  [nzType]=\"_btn.reset_icon.type!\"\n                  [nzTheme]=\"_btn.reset_icon.theme!\"\n                  [nzTwotoneColor]=\"_btn.reset_icon.twoToneColor!\"\n                  [nzIconfont]=\"_btn.reset_icon.iconfont!\"\n                ></i>\n                {{ _btn.reset }}\n              </button>\n            </ng-container>\n          </div>\n        </div>\n      </div>\n    </nz-form-item>\n  </ng-container>\n</ng-template>\n<form nz-form [nzLayout]=\"layout\" (submit)=\"onSubmit($event)\" [attr.autocomplete]=\"autocomplete\">\n  <sf-item *ngIf=\"rootProperty\" [formProperty]=\"rootProperty\" [footer]=\"btnTpl\" />\n</form>\n","import { Component, Input, OnChanges, ViewEncapsulation } from '@angular/core';\n\nimport { helpMotion } from 'ng-zorro-antd/core/animation';\nimport { NzFormStatusService } from 'ng-zorro-antd/core/form';\n\nimport type { SFSchema } from './schema/index';\nimport type { SFOptionalHelp, SFUISchemaItem } from './schema/ui';\n\n@Component({\n  selector: 'sf-item-wrap',\n  templateUrl: './sf-item-wrap.component.html',\n  animations: [helpMotion],\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class SFItemWrapComponent implements OnChanges {\n  _showTitle: boolean = false;\n  @Input() id?: string;\n  @Input() schema!: SFSchema;\n  @Input() ui!: SFUISchemaItem;\n  @Input() showError?: boolean;\n  @Input() error?: string;\n  @Input()\n  set showTitle(val: boolean | string | null | undefined) {\n    this._showTitle = !!val;\n  }\n  @Input() title: string | null = null;\n\n  get t(): string {\n    return this.title === null ? this.schema.title! : this.title;\n  }\n\n  get oh(): SFOptionalHelp {\n    return this.ui.optionalHelp as SFOptionalHelp;\n  }\n\n  constructor(private statusSrv: NzFormStatusService) {}\n\n  ngOnChanges(): void {\n    const hasError = !!this.error;\n    this.statusSrv.formStatusChanges.next({ status: hasError ? 'error' : '', hasFeedback: !!this.ui.feedback });\n  }\n}\n","<nz-form-item\n  [style.width.px]=\"ui.width\"\n  [class.ant-form-item-has-error]=\"showError\"\n  [class.ant-form-item-with-help]=\"showError\"\n  [class.ant-form-item-has-success]=\"ui.feedback === 'success'\"\n  [class.ant-form-item-has-warning]=\"ui.feedback === 'warning'\"\n  [class.ant-form-item-has-error]=\"ui.feedback === 'error'\"\n  [class.ant-form-item-is-validating]=\"ui.feedback === 'validating'\"\n  [class.ant-form-item-has-feedback]=\"ui.feedback\"\n>\n  <div nz-col *ngIf=\"_showTitle\" [nzSpan]=\"ui.spanLabel!\" class=\"ant-form-item-label\">\n    <label *ngIf=\"t\" [attr.for]=\"id\" [class.ant-form-item-required]=\"ui._required\">\n      <span class=\"sf__label-text\">{{ t }}</span>\n      <span *ngIf=\"ui.optional || oh\" class=\"sf__optional\">\n        {{ ui.optional }}\n        <i\n          *ngIf=\"oh\"\n          nz-tooltip\n          [nzTooltipTitle]=\"oh.text\"\n          [nzTooltipPlacement]=\"oh.placement\"\n          [nzTooltipTrigger]=\"oh.trigger\"\n          [nzTooltipColor]=\"oh.bgColor\"\n          [nzTooltipOverlayClassName]=\"oh.overlayClassName\"\n          [nzTooltipOverlayStyle]=\"oh.overlayStyle\"\n          [nzTooltipMouseEnterDelay]=\"oh.mouseEnterDelay\"\n          [nzTooltipMouseLeaveDelay]=\"oh.mouseLeaveDelay\"\n          nz-icon\n          [nzType]=\"oh.icon!\"\n        ></i>\n      </span>\n    </label>\n  </div>\n  <div nz-col class=\"ant-form-item-control\" [nzSpan]=\"ui.spanControl!\" [nzOffset]=\"ui.offsetControl!\">\n    <div class=\"ant-form-item-control-input\">\n      <div class=\"ant-form-item-control-input-content\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n    <div *ngIf=\"!ui.onlyVisual && showError\" @helpMotion class=\"ant-form-item-explain ant-form-item-explain-connected\">\n      <div role=\"alert\" class=\"ant-form-item-explain-error\">\n        {{ error }}\n      </div>\n    </div>\n    <div *ngIf=\"schema.description\" class=\"ant-form-item-extra\" [innerHTML]=\"ui._description\"></div>\n  </div>\n</nz-form-item>\n","import { Directive, Input, OnInit, TemplateRef } from '@angular/core';\n\nimport { SF_SEQ } from '../../const';\nimport { SFComponent } from '../../sf.component';\n\n@Directive({\n  selector: '[sf-template]'\n})\nexport class SFTemplateDirective implements OnInit {\n  @Input('sf-template') path!: string;\n\n  constructor(\n    private templateRef: TemplateRef<void>,\n    private table: SFComponent\n  ) {}\n\n  ngOnInit(): void {\n    this.table._addTpl(this.path.startsWith(SF_SEQ) ? this.path : SF_SEQ + this.path, this.templateRef);\n  }\n}\n","import { AfterViewInit, ChangeDetectorRef, Directive, HostBinding, Inject, Injector } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { takeUntil } from 'rxjs';\n\nimport { LocaleData } from '@yelon/theme';\nimport { NgClassType, NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport type { ErrorData } from './errors';\nimport type { SFValue } from './interface';\nimport { ArrayProperty } from './model/array.property';\nimport { FormProperty } from './model/form.property';\nimport { ObjectProperty } from './model/object.property';\nimport type { SFSchema } from './schema';\nimport type { SFOptionalHelp, SFUISchemaItem } from './schema/ui';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport { di } from './utils';\nimport type { SFArrayWidgetSchema, SFObjectWidgetSchema } from './widgets';\n\n@Directive()\nexport abstract class Widget<T extends FormProperty, UIT extends SFUISchemaItem> implements AfterViewInit {\n  formProperty!: T;\n  error?: string;\n  showError = false;\n  id = '';\n  schema!: SFSchema;\n  ui!: UIT;\n\n  @HostBinding('class')\n  get cls(): NgClassType {\n    return this.ui.class || '';\n  }\n\n  get disabled(): boolean {\n    if (this.schema.readOnly === true || this.sfComp!.disabled) {\n      return true;\n    }\n\n    return false;\n  }\n\n  get l(): LocaleData {\n    return this.formProperty.root.widget!.sfComp!.locale;\n  }\n\n  get oh(): SFOptionalHelp {\n    return this.ui.optionalHelp as SFOptionalHelp;\n  }\n\n  get dom(): DomSanitizer {\n    return this.injector.get(DomSanitizer);\n  }\n\n  get cleanValue(): boolean {\n    return this.sfComp?.cleanValue!;\n  }\n\n  constructor(\n    @Inject(ChangeDetectorRef) public readonly cd: ChangeDetectorRef,\n    @Inject(Injector) public readonly injector: Injector,\n    @Inject(SFItemComponent) public readonly sfItemComp?: SFItemComponent,\n    @Inject(SFComponent) public readonly sfComp?: SFComponent\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.formProperty.errorsChanges\n      .pipe(takeUntil(this.sfItemComp!.destroy$))\n      .subscribe((errors: ErrorData[] | null) => {\n        if (errors == null) return;\n\n        di(this.ui, 'errorsChanges', this.formProperty.path, errors);\n\n        // 不显示首次校验视觉\n        const firstVisual = this.sfComp?.firstVisual;\n        if (firstVisual || (!firstVisual && this.sfComp?._inited)) {\n          this.showError = errors.length > 0;\n          this.error = this.showError ? (errors[0].message as string) : '';\n\n          this.cd.detectChanges();\n        }\n      });\n    this.afterViewInit();\n  }\n\n  setValue(value: SFValue): void {\n    this.formProperty.setValue(value, false);\n    di(this.ui, 'valueChanges', this.formProperty.path, this.formProperty);\n  }\n\n  get value(): NzSafeAny {\n    return this.formProperty.value;\n  }\n\n  detectChanges(onlySelf: boolean = false): void {\n    if (onlySelf) {\n      this.cd.markForCheck();\n    } else {\n      this.formProperty.root.widget?.cd.markForCheck();\n    }\n  }\n\n  abstract reset(value: SFValue): void;\n\n  abstract afterViewInit(): void;\n}\n\n@Directive()\nexport class ControlWidget extends Widget<FormProperty, SFUISchemaItem> {\n  reset(_value: SFValue): void {}\n  afterViewInit(): void {}\n}\n\n@Directive()\nexport class ControlUIWidget<UIT extends SFUISchemaItem> extends Widget<FormProperty, UIT> {\n  reset(_value: SFValue): void {}\n  afterViewInit(): void {}\n}\n\n@Directive()\nexport class ArrayLayoutWidget extends Widget<ArrayProperty, SFArrayWidgetSchema> implements AfterViewInit {\n  reset(_value: SFValue): void {}\n  afterViewInit(): void {}\n\n  ngAfterViewInit(): void {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.destroy$)).subscribe(() => this.cd.detectChanges());\n  }\n}\n\n@Directive()\nexport class ObjectLayoutWidget extends Widget<ObjectProperty, SFObjectWidgetSchema> implements AfterViewInit {\n  reset(_value: SFValue): void {}\n  afterViewInit(): void {}\n\n  ngAfterViewInit(): void {\n    this.formProperty.errorsChanges.pipe(takeUntil(this.sfItemComp!.destroy$)).subscribe(() => this.cd.detectChanges());\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\n\nimport { NzButtonType } from 'ng-zorro-antd/button';\n\nimport type { FormProperty } from '../../model/form.property';\nimport { ArrayLayoutWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-array',\n  templateUrl: './array.widget.html',\n  host: { '[class.sf__array]': 'true' },\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class ArrayWidget extends ArrayLayoutWidget implements OnInit {\n  addTitle!: SafeHtml;\n  addType!: NzButtonType;\n  removeTitle?: string | null;\n  arraySpan = 8;\n\n  get addDisabled(): boolean {\n    return (\n      this.disabled ||\n      (this.schema.maxItems != null && (this.formProperty.properties as FormProperty[]).length >= this.schema.maxItems!)\n    );\n  }\n\n  get showRemove(): boolean {\n    if (this.disabled || !this.removeTitle) return false;\n    if (\n      this.schema.minItems != null &&\n      (this.formProperty.properties as FormProperty[]).length <= this.schema.minItems!\n    )\n      return false;\n    return true;\n  }\n\n  ngOnInit(): void {\n    const { grid, addTitle, addType, removable, removeTitle } = this.ui;\n    if (grid && grid.arraySpan) {\n      this.arraySpan = grid.arraySpan;\n    }\n\n    this.addTitle = this.dom.bypassSecurityTrustHtml(addTitle || this.l.addText);\n    this.addType = addType || 'dashed';\n    this.removeTitle = removable === false ? null : removeTitle || this.l.removeText;\n  }\n\n  private reValid(): void {\n    this.formProperty.updateValueAndValidity({ onlySelf: false, emitValueEvent: false, emitValidator: true });\n  }\n\n  addItem(): void {\n    const property = this.formProperty.add({});\n    this.reValid();\n    if (this.ui.add) {\n      this.ui.add(property);\n    }\n  }\n\n  removeItem(index: number): void {\n    this.formProperty.remove(index);\n    this.reValid();\n    if (this.ui.remove) {\n      this.ui.remove(index);\n    }\n  }\n}\n","<nz-form-item [class.ant-form-item-with-help]=\"showError\">\n  <div nz-col *ngIf=\"schema.title\" [nzSpan]=\"ui.spanLabel!\" class=\"ant-form-item-label\">\n    <label [class.ant-form-item-required]=\"ui.required\">\n      {{ schema.title }}\n      <span class=\"sf__optional\">\n        {{ ui.optional }}\n        <i\n          *ngIf=\"oh\"\n          nz-tooltip\n          [nzTooltipTitle]=\"oh.text\"\n          [nzTooltipPlacement]=\"oh.placement\"\n          [nzTooltipTrigger]=\"oh.trigger\"\n          [nzTooltipOverlayClassName]=\"oh.overlayClassName\"\n          [nzTooltipOverlayStyle]=\"oh.overlayStyle\"\n          [nzTooltipMouseEnterDelay]=\"oh.mouseEnterDelay\"\n          [nzTooltipMouseLeaveDelay]=\"oh.mouseLeaveDelay\"\n          nz-icon\n          [nzType]=\"oh.icon!\"\n        ></i>\n      </span>\n    </label>\n    <div class=\"sf__array-add\">\n      <button\n        type=\"button\"\n        nz-button\n        [nzType]=\"addType\"\n        [disabled]=\"addDisabled\"\n        (click)=\"addItem()\"\n        [innerHTML]=\"addTitle\"\n      ></button>\n    </div>\n  </div>\n  <div nz-col class=\"ant-form-item-control-wrapper\" [nzSpan]=\"ui.spanControl!\" [nzOffset]=\"ui.offsetControl!\">\n    <div class=\"ant-form-item-control\" [class.has-error]=\"showError\">\n      <div nz-row class=\"sf__array-container\">\n        <ng-container *ngFor=\"let i of $any(formProperty).properties; let idx = index\">\n          <div\n            nz-col\n            *ngIf=\"i.visible && !i.ui.hidden\"\n            [nzSpan]=\"arraySpan\"\n            [attr.data-index]=\"idx\"\n            class=\"sf__array-item\"\n          >\n            <nz-card>\n              <sf-item [formProperty]=\"i\" />\n              <span *ngIf=\"showRemove\" class=\"sf__array-remove\" (click)=\"removeItem(idx)\" [attr.title]=\"removeTitle\">\n                <i nz-icon nzType=\"delete\"></i>\n              </span>\n            </nz-card>\n          </div>\n        </ng-container>\n      </div>\n      <div *ngIf=\"!ui.onlyVisual && showError\" class=\"ant-form-explain\">{{ error }}</div>\n      <div *ngIf=\"schema.description\" [innerHTML]=\"ui._description\" class=\"ant-form-extra\"></div>\n    </div>\n  </div>\n</nz-form-item>\n","import { Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { Observable, of, debounceTime, map, mergeMap, startWith, takeUntil } from 'rxjs';\n\nimport { NzAutocompleteOptionComponent } from 'ng-zorro-antd/auto-complete';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { SFAutoCompleteWidgetSchema } from './schema';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getCopyEnum, getEnum, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-autocomplete',\n  templateUrl: './autocomplete.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class AutoCompleteWidget extends ControlUIWidget<SFAutoCompleteWidgetSchema> {\n  i: NzSafeAny = {};\n  list!: Observable<SFSchemaEnum[]>;\n  typing: string = '';\n  @ViewChild(NgModel, { static: false }) private ngModel!: NgModel;\n  private filterOption!: (input: string, option: SFSchemaEnum) => boolean;\n  private isAsync = false;\n  private fixData: SFSchemaEnum[] = [];\n\n  updateValue(item: NzAutocompleteOptionComponent): void {\n    this.typing = item.nzLabel!;\n    const data: SFSchemaEnum = item.nzValue;\n    this.setValue(data.value);\n    if (this.ui.change) {\n      this.ui.change(item, data);\n    }\n  }\n\n  _setValue(item: SFSchemaEnum): void {\n    let val = item.toString();\n    if (typeof item !== 'string') {\n      val = item.value;\n    }\n    this.setValue(val);\n  }\n\n  afterViewInit(): void {\n    const { backfill, defaultActiveFirstOption, nzWidth, filterOption, asyncData, compareWith } = this.ui;\n    this.i = {\n      backfill: toBool(backfill, false),\n      defaultActiveFirstOption: toBool(defaultActiveFirstOption, true),\n      width: nzWidth || undefined,\n      compareWith: compareWith || ((o1: any, o2: any) => o1 === o2)\n    };\n\n    let filterOptionValue = filterOption == null ? true : filterOption;\n    if (typeof filterOptionValue === 'boolean') {\n      filterOptionValue = (input: string, option: SFSchemaEnum) =>\n        option.label.toLowerCase().indexOf((input || '').toLowerCase()) > -1;\n    }\n    this.filterOption = filterOptionValue;\n\n    this.isAsync = !!asyncData;\n    const orgTime = +(this.ui.debounceTime || 0);\n    const time = Math.max(0, this.isAsync ? Math.max(50, orgTime) : orgTime);\n\n    this.list = this.ngModel.valueChanges!.pipe(\n      debounceTime(time),\n      startWith(''),\n      mergeMap(input => (this.isAsync ? asyncData!(input) : this.filterData(input))),\n      map(res => getEnum(res, null, this.schema.readOnly!))\n    );\n  }\n\n  reset(value: SFValue): void {\n    if (this.isAsync) {\n      this.ui.asyncData!(value)\n        .pipe(\n          takeUntil(this.sfItemComp!.destroy$),\n          map(res => getEnum(res, null, this.schema.readOnly!))\n        )\n        .subscribe(data => {\n          this.typing = data.find(w => w.value === this.value)?.label ?? '';\n        });\n      return;\n    }\n\n    this.typing = value;\n    switch (this.ui.type) {\n      case 'email':\n        this.fixData = getCopyEnum(\n          this.schema.enum! || this.formProperty.options.uiEmailSuffixes,\n          null,\n          this.schema.readOnly!\n        );\n        break;\n      default:\n        this.fixData = getCopyEnum(this.schema.enum!, value, this.schema.readOnly!);\n        break;\n    }\n  }\n\n  private filterData(input: string): Observable<SFSchemaEnum[]> | Observable<string[]> {\n    switch (this.ui.type) {\n      case 'email':\n        return this.addEmailSuffix(input);\n      default:\n        return of(this.fixData.filter(option => this.filterOption(input, option)));\n    }\n  }\n\n  private addEmailSuffix(value: string): Observable<string[]> {\n    return of(!value || ~value.indexOf('@') ? [] : this.fixData.map(domain => `${value}@${domain.label}`));\n  }\n}\n","<sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n  <input\n    nz-input\n    [nzAutocomplete]=\"auto\"\n    [attr.id]=\"id\"\n    [disabled]=\"disabled\"\n    [attr.disabled]=\"disabled\"\n    [nzSize]=\"ui.size!\"\n    [(ngModel)]=\"typing\"\n    (ngModelChange)=\"_setValue($event)\"\n    [attr.maxLength]=\"schema.maxLength || null\"\n    [attr.placeholder]=\"ui.placeholder\"\n    autocomplete=\"off\"\n  />\n  <nz-autocomplete\n    #auto\n    [nzBackfill]=\"i.backfill\"\n    [nzDefaultActiveFirstOption]=\"i.defaultActiveFirstOption\"\n    [nzWidth]=\"i.width\"\n    [nzOverlayStyle]=\"ui.overlayStyle || {}\"\n    [nzOverlayClassName]=\"ui.overlayClassName || ''\"\n    [compareWith]=\"i.compareWith\"\n    (selectionChange)=\"updateValue($event)\"\n  >\n    <nz-auto-option *ngFor=\"let i of list | async\" [nzValue]=\"i\" [nzLabel]=\"i.label\"> {{ i.label }} </nz-auto-option>\n  </nz-autocomplete>\n</sf-item-wrap>\n","import { Component, ViewEncapsulation } from '@angular/core';\n\nimport { SFBooleanWidgetSchema } from './schema';\nimport { ControlUIWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-boolean',\n  templateUrl: './boolean.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class BooleanWidget extends ControlUIWidget<SFBooleanWidgetSchema> {}\n","<sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n  <nz-switch\n    [ngModel]=\"value\"\n    (ngModelChange)=\"setValue($event)\"\n    [nzDisabled]=\"disabled\"\n    [nzSize]=\"ui.size!\"\n    [nzCheckedChildren]=\"ui.checkedChildren!\"\n    [nzUnCheckedChildren]=\"ui.unCheckedChildren!\"\n    [nzLoading]=\"ui.loading\"\n  />\n</sf-item-wrap>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { SFCascaderWidgetSchema } from './schema';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-cascader',\n  templateUrl: './cascader.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class CascaderWidget extends ControlUIWidget<SFCascaderWidgetSchema> implements OnInit {\n  clearText!: string;\n  showArrow!: boolean;\n  showInput!: boolean;\n  triggerAction!: string[];\n  data: SFSchemaEnum[] = [];\n  loadData?: (node: NzCascaderOption, index: number) => PromiseLike<NzSafeAny>;\n\n  ngOnInit(): void {\n    const { clearText, showArrow, showInput, triggerAction, asyncData } = this.ui;\n    this.clearText = clearText || '清除';\n    this.showArrow = toBool(showArrow, true);\n    this.showInput = toBool(showInput, true);\n    this.triggerAction = triggerAction || ['click'];\n    if (!!asyncData) {\n      this.loadData = (node: NzCascaderOption, index: number) =>\n        asyncData(node, index, this).then(() => this.detectChanges());\n    }\n  }\n\n  reset(value: SFValue): void {\n    getData(this.schema, {}, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _visibleChange(status: boolean): void {\n    if (this.ui.visibleChange) this.ui.visibleChange(status);\n  }\n\n  _change(value: NzSafeAny[] | null): void {\n    this.setValue(value);\n    if (this.ui.change) {\n      this.ui.change(value);\n    }\n  }\n\n  _selectionChange(options: NzCascaderOption[]): void {\n    if (this.ui.selectionChange) {\n      this.ui.selectionChange(options);\n    }\n  }\n\n  _clear(): void {\n    if (this.ui.clear) this.ui.clear();\n  }\n}\n","<sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n  <nz-cascader\n    [nzDisabled]=\"disabled\"\n    [nzSize]=\"ui.size!\"\n    [ngModel]=\"value\"\n    (ngModelChange)=\"_change($event)\"\n    [nzOptions]=\"data\"\n    [nzAllowClear]=\"ui.allowClear\"\n    [nzAutoFocus]=\"ui.autoFocus\"\n    [nzChangeOn]=\"ui.changeOn\"\n    [nzChangeOnSelect]=\"ui.changeOnSelect\"\n    [nzColumnClassName]=\"ui.columnClassName\"\n    [nzExpandTrigger]=\"ui.expandTrigger!\"\n    [nzMenuClassName]=\"ui.menuClassName\"\n    [nzMenuStyle]=\"ui.menuStyle!\"\n    [nzNotFoundContent]=\"ui.notFoundContent\"\n    [nzLabelProperty]=\"ui.labelProperty || 'label'\"\n    [nzValueProperty]=\"ui.valueProperty || 'value'\"\n    [nzLoadData]=\"loadData\"\n    [nzPlaceHolder]=\"ui.placeholder!\"\n    [nzShowArrow]=\"showArrow\"\n    [nzShowInput]=\"showInput\"\n    [nzShowSearch]=\"ui.showSearch!\"\n    (nzClear)=\"_clear()\"\n    (nzVisibleChange)=\"_visibleChange($event)\"\n    (nzSelectionChange)=\"_selectionChange($event)\"\n  />\n</sf-item-wrap>\n","import { Component, ViewEncapsulation } from '@angular/core';\n\nimport { SFCheckboxWidgetSchema } from './schema';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-checkbox',\n  templateUrl: './checkbox.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class CheckboxWidget extends ControlUIWidget<SFCheckboxWidgetSchema> {\n  data: SFSchemaEnum[] = [];\n  allChecked = false;\n  indeterminate = false;\n  grid_span!: number;\n  labelTitle: string = ``;\n  inited = false;\n\n  reset(value: SFValue): void {\n    this.inited = false;\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.allChecked = false;\n      this.indeterminate = false;\n      this.labelTitle = list.length === 0 ? '' : (this.schema.title as string);\n      const { span } = this.ui;\n      this.grid_span = span && span > 0 ? span : 0;\n\n      this.updateAllChecked();\n      this.inited = true;\n      this.detectChanges();\n    });\n  }\n\n  _setValue(value: SFValue): void {\n    this.setValue(value);\n    this.detectChanges();\n    this.notifyChange(value);\n  }\n\n  notifySet(): void {\n    const checkList = this.data.filter(w => w.checked);\n    this.updateAllChecked().setValue(checkList.map(item => item.value));\n    this.notifyChange(checkList);\n  }\n\n  groupInGridChange(values: SFValue[]): void {\n    this.data.forEach(item => (item.checked = values.indexOf(item.value) !== -1));\n    this.notifySet();\n  }\n\n  onAllChecked(): void {\n    this.data.forEach(item => (item.checked = this.allChecked));\n    this.notifySet();\n  }\n\n  updateAllChecked(): this {\n    if (this.data.every(item => item.checked !== true)) {\n      this.allChecked = false;\n      this.indeterminate = false;\n    } else if (this.data.every(item => item.checked === true)) {\n      this.allChecked = true;\n      this.indeterminate = false;\n    } else {\n      this.indeterminate = true;\n    }\n    this.detectChanges();\n    return this;\n  }\n\n  private notifyChange(res: boolean | SFSchemaEnum[]): void {\n    if (this.ui.change) this.ui.change(res);\n  }\n}\n","<ng-template #all>\n  <label\n    *ngIf=\"ui.checkAll\"\n    nz-checkbox\n    class=\"sf__checkbox-all mr-sm\"\n    [(ngModel)]=\"allChecked\"\n    (ngModelChange)=\"onAllChecked()\"\n    [nzIndeterminate]=\"indeterminate\"\n    >{{ ui.checkAllText || l.checkAllText }}</label\n  >\n</ng-template>\n<sf-item-wrap\n  [id]=\"id\"\n  [schema]=\"schema\"\n  [ui]=\"ui\"\n  [showError]=\"showError\"\n  [error]=\"error\"\n  [showTitle]=\"true\"\n  [title]=\"labelTitle\"\n>\n  <ng-container *ngIf=\"inited && data.length === 0\">\n    <label nz-checkbox [nzDisabled]=\"disabled\" [ngModel]=\"value\" (ngModelChange)=\"_setValue($event)\">\n      {{ schema.title }}\n      <span class=\"sf__optional\">\n        {{ ui.optional }}\n        <i\n          *ngIf=\"oh\"\n          nz-tooltip\n          [nzTooltipTitle]=\"oh.text\"\n          [nzTooltipPlacement]=\"oh.placement\"\n          [nzTooltipTrigger]=\"oh.trigger\"\n          [nzTooltipOverlayClassName]=\"oh.overlayClassName\"\n          [nzTooltipOverlayStyle]=\"oh.overlayStyle\"\n          [nzTooltipMouseEnterDelay]=\"oh.mouseEnterDelay\"\n          [nzTooltipMouseLeaveDelay]=\"oh.mouseLeaveDelay\"\n          nz-icon\n          [nzType]=\"oh.icon!\"\n        ></i>\n      </span>\n    </label>\n  </ng-container>\n  <ng-container *ngIf=\"inited && data.length > 0\">\n    <ng-container *ngIf=\"grid_span === 0\">\n      <ng-template [ngTemplateOutlet]=\"all\"></ng-template>\n      <nz-checkbox-group [ngModel]=\"data\" (ngModelChange)=\"notifySet()\" />\n    </ng-container>\n    <ng-container *ngIf=\"grid_span !== 0\">\n      <nz-checkbox-wrapper class=\"sf__checkbox-list\" (nzOnChange)=\"groupInGridChange($event)\">\n        <div nz-row>\n          <div nz-col [nzSpan]=\"grid_span\" *ngIf=\"ui.checkAll\">\n            <ng-template [ngTemplateOutlet]=\"all\"></ng-template>\n          </div>\n          <div nz-col [nzSpan]=\"grid_span\" *ngFor=\"let i of data\">\n            <label nz-checkbox [nzValue]=\"i.value\" [ngModel]=\"i.checked\" [nzDisabled]=\"i.disabled\">{{ i.label }}</label>\n          </div>\n        </div>\n      </nz-checkbox-wrapper>\n    </ng-container>\n  </ng-container>\n</sf-item-wrap>\n","import { Component, ViewEncapsulation } from '@angular/core';\n\nimport { SFCustomWidgetSchema } from './schema';\nimport { ControlUIWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-custom',\n  template: `\n    <sf-item-wrap\n      [id]=\"id\"\n      [schema]=\"schema\"\n      [ui]=\"ui\"\n      [showError]=\"showError\"\n      [error]=\"error\"\n      [showTitle]=\"schema.title\"\n    >\n      <ng-template\n        [ngTemplateOutlet]=\"$any(ui)._render\"\n        [ngTemplateOutletContext]=\"{ $implicit: this, schema: schema, ui: ui }\"\n      ></ng-template>\n    </sf-item-wrap>\n  `,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class CustomWidget extends ControlUIWidget<SFCustomWidgetSchema> {}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { format } from 'date-fns';\n\nimport { toDate } from '@yelon/util/date-time';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { SFDateWidgetSchema } from './schema';\nimport { SFValue } from '../../interface';\nimport { FormProperty } from '../../model/form.property';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-date',\n  templateUrl: './date.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class DateWidget extends ControlUIWidget<SFDateWidgetSchema> implements OnInit {\n  private startFormat!: string;\n  private endFormat?: string;\n  private flatRange = false;\n  mode!: string;\n  displayValue: Date | Date[] | null = null;\n  displayFormat!: string;\n  i!: { allowClear: boolean; showToday: boolean };\n\n  ngOnInit(): void {\n    const { mode, end, displayFormat, allowClear, showToday } = this.ui;\n    this.mode = mode || 'date';\n    this.flatRange = end != null;\n    // 构建属性对象时会对默认值进行校验，因此可以直接使用 format 作为格式化属性\n    this.startFormat = this.ui._format!;\n    if (this.flatRange) {\n      this.mode = 'range';\n      const endUi = this.endProperty.ui as SFDateWidgetSchema;\n      this.endFormat = endUi.format ? endUi._format : this.startFormat;\n    }\n    if (!displayFormat) {\n      switch (this.mode) {\n        case 'year':\n          this.displayFormat = `yyyy`;\n          break;\n        case 'month':\n          this.displayFormat = `yyyy-MM`;\n          break;\n        case 'week':\n          this.displayFormat = `yyyy-ww`;\n          break;\n      }\n    } else {\n      this.displayFormat = displayFormat;\n    }\n    this.i = {\n      allowClear: toBool(allowClear, true),\n      // nz-date-picker\n      showToday: toBool(showToday, true)\n    };\n  }\n\n  reset(value: SFValue): void {\n    const toDateOptions = { formatString: this.startFormat, defaultValue: null };\n    if (Array.isArray(value)) {\n      value = value.map(v => toDate(v, toDateOptions));\n    } else {\n      value = toDate(value, toDateOptions);\n    }\n    if (this.flatRange) {\n      const endValue = toDate(this.endProperty.formData as NzSafeAny, {\n        formatString: this.endFormat || this.startFormat,\n        defaultValue: null\n      });\n      this.displayValue = value == null || endValue == null ? [] : [value, endValue];\n    } else {\n      this.displayValue = value;\n    }\n    this.detectChanges();\n    // TODO: Need to wait for the rendering to complete, otherwise it will be overwritten of end widget\n    if (this.displayValue) {\n      setTimeout(() => this._change(this.displayValue, false));\n    }\n  }\n\n  _change(value: Date | Date[] | null, emitModelChange: boolean = true): void {\n    if (emitModelChange && this.ui.change) {\n      this.ui.change(value);\n    }\n    if (value == null || (Array.isArray(value) && value.length < 2)) {\n      this.setValue(null);\n      this.setEnd(null);\n      return;\n    }\n\n    const res = Array.isArray(value)\n      ? [format(value[0], this.startFormat), format(value[1], this.endFormat || this.startFormat)]\n      : format(value, this.startFormat);\n\n    if (this.flatRange) {\n      this.setValue(res[0]);\n      this.setEnd(res[1]);\n    } else {\n      this.setValue(res);\n    }\n  }\n\n  _openChange(status: boolean): void {\n    if (this.ui.onOpenChange) this.ui.onOpenChange(status);\n  }\n\n  _ok(value: NzSafeAny): void {\n    if (this.ui.onOk) this.ui.onOk(value);\n  }\n\n  private get endProperty(): FormProperty {\n    return (this.formProperty.parent!.properties as { [key: string]: FormProperty })[this.ui.end!];\n  }\n\n  private setEnd(value: string | null): void {\n    if (!this.flatRange) return;\n\n    this.endProperty.setValue(value, true);\n    this.endProperty.updateValueAndValidity();\n  }\n}\n","<sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n  <ng-container [ngSwitch]=\"mode\">\n    <nz-year-picker\n      *ngSwitchCase=\"'year'\"\n      [nzId]=\"id\"\n      [nzDisabled]=\"disabled\"\n      [nzSize]=\"ui.size!\"\n      [nzFormat]=\"displayFormat\"\n      [(ngModel)]=\"displayValue\"\n      (ngModelChange)=\"_change($event)\"\n      [nzAllowClear]=\"i.allowClear\"\n      [ngClass]=\"ui.className!\"\n      [nzDisabledDate]=\"ui.disabledDate\"\n      [nzLocale]=\"ui.locale!\"\n      [nzPlaceHolder]=\"ui.placeholder!\"\n      [nzPopupStyle]=\"ui.popupStyle!\"\n      [nzDropdownClassName]=\"ui.dropdownClassName\"\n      (nzOnOpenChange)=\"_openChange($event)\"\n      [nzRenderExtraFooter]=\"ui.renderExtraFooter\"\n      [nzInputReadOnly]=\"ui.inputReadOnly\"\n      [nzInline]=\"ui.inline!\"\n    />\n\n    <nz-month-picker\n      *ngSwitchCase=\"'month'\"\n      [nzId]=\"id\"\n      [nzDisabled]=\"disabled\"\n      [nzSize]=\"ui.size!\"\n      [nzFormat]=\"displayFormat\"\n      [(ngModel)]=\"displayValue\"\n      (ngModelChange)=\"_change($event)\"\n      [nzAllowClear]=\"i.allowClear\"\n      [ngClass]=\"ui.className!\"\n      [nzDisabledDate]=\"ui.disabledDate\"\n      [nzLocale]=\"ui.locale!\"\n      [nzPlaceHolder]=\"ui.placeholder!\"\n      [nzPopupStyle]=\"ui.popupStyle!\"\n      [nzDropdownClassName]=\"ui.dropdownClassName\"\n      (nzOnOpenChange)=\"_openChange($event)\"\n      [nzRenderExtraFooter]=\"ui.renderExtraFooter\"\n      [nzInputReadOnly]=\"ui.inputReadOnly\"\n      [nzInline]=\"ui.inline!\"\n    />\n\n    <nz-week-picker\n      *ngSwitchCase=\"'week'\"\n      [nzId]=\"id\"\n      [nzDisabled]=\"disabled\"\n      [nzSize]=\"ui.size!\"\n      [nzFormat]=\"displayFormat\"\n      [(ngModel)]=\"displayValue\"\n      (ngModelChange)=\"_change($event)\"\n      [nzAllowClear]=\"i.allowClear\"\n      [ngClass]=\"ui.className!\"\n      [nzDisabledDate]=\"ui.disabledDate\"\n      [nzLocale]=\"ui.locale!\"\n      [nzPlaceHolder]=\"ui.placeholder!\"\n      [nzPopupStyle]=\"ui.popupStyle!\"\n      [nzDropdownClassName]=\"ui.dropdownClassName\"\n      [nzInputReadOnly]=\"ui.inputReadOnly\"\n      [nzInline]=\"ui.inline!\"\n      (nzOnOpenChange)=\"_openChange($event)\"\n    />\n\n    <nz-range-picker\n      *ngSwitchCase=\"'range'\"\n      [nzId]=\"id\"\n      [nzDisabled]=\"disabled\"\n      [nzSize]=\"ui.size!\"\n      [nzFormat]=\"displayFormat\"\n      [(ngModel)]=\"displayValue\"\n      (ngModelChange)=\"_change($event)\"\n      [nzAllowClear]=\"i.allowClear\"\n      [ngClass]=\"ui.className!\"\n      [nzDisabledDate]=\"ui.disabledDate\"\n      [nzLocale]=\"ui.locale!\"\n      [nzPlaceHolder]=\"ui.placeholder!\"\n      [nzPopupStyle]=\"ui.popupStyle!\"\n      [nzDropdownClassName]=\"ui.dropdownClassName\"\n      (nzOnOpenChange)=\"_openChange($event)\"\n      [nzDisabledTime]=\"ui.disabledTime\"\n      [nzRenderExtraFooter]=\"ui.renderExtraFooter\"\n      [nzRanges]=\"ui.ranges\"\n      [nzShowTime]=\"ui.showTime\"\n      [nzSeparator]=\"ui.separator\"\n      [nzShowWeekNumber]=\"ui.showWeekNumber || false\"\n      [nzMode]=\"ui.rangeMode\"\n      [nzInputReadOnly]=\"ui.inputReadOnly\"\n      [nzInline]=\"ui.inline!\"\n      (nzOnOk)=\"_ok($event)\"\n    />\n\n    <nz-date-picker\n      *ngSwitchDefault\n      [nzId]=\"id\"\n      [nzDisabled]=\"disabled\"\n      [nzSize]=\"ui.size!\"\n      [nzFormat]=\"displayFormat\"\n      [(ngModel)]=\"displayValue\"\n      (ngModelChange)=\"_change($event)\"\n      [nzAllowClear]=\"i.allowClear\"\n      [ngClass]=\"ui.className!\"\n      [nzDisabledDate]=\"ui.disabledDate\"\n      [nzLocale]=\"ui.locale!\"\n      [nzPlaceHolder]=\"ui.placeholder!\"\n      [nzPopupStyle]=\"ui.popupStyle!\"\n      [nzDropdownClassName]=\"ui.dropdownClassName\"\n      (nzOnOpenChange)=\"_openChange($event)\"\n      [nzDisabledTime]=\"ui.disabledTime\"\n      [nzRenderExtraFooter]=\"ui.renderExtraFooter\"\n      [nzShowTime]=\"ui.showTime\"\n      [nzShowToday]=\"i.showToday\"\n      [nzShowWeekNumber]=\"ui.showWeekNumber || false\"\n      [nzInputReadOnly]=\"ui.inputReadOnly\"\n      [nzInline]=\"ui.inline!\"\n      (nzOnOk)=\"_ok($event)\"\n    />\n  </ng-container>\n</sf-item-wrap>\n","import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { map, tap } from 'rxjs';\n\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { MentionOnSearchTypes, NzMentionComponent } from 'ng-zorro-antd/mention';\n\nimport { SFMentionWidgetSchema } from './schema';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, getEnum } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-mention',\n  templateUrl: './mention.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class MentionWidget extends ControlUIWidget<SFMentionWidgetSchema> implements OnInit {\n  @ViewChild('mentions', { static: true }) private mentionChild!: NzMentionComponent;\n  data: SFSchemaEnum[] = [];\n  i: NzSafeAny;\n  loading = false;\n\n  ngOnInit(): void {\n    const { valueWith, notFoundContent, placement, prefix, autosize } = this.ui;\n    this.i = {\n      valueWith: valueWith || (item => item.label),\n      notFoundContent: notFoundContent || '无匹配结果，轻敲空格完成输入',\n      placement: placement || 'bottom',\n      prefix: prefix || '@',\n      autosize: typeof autosize === 'undefined' ? true : this.ui.autosize\n    };\n\n    const { minimum, maximum } = this.schema;\n    const min = typeof minimum !== 'undefined' ? minimum : -1;\n    const max = typeof maximum !== 'undefined' ? maximum : -1;\n\n    if (!this.ui.validator && (min !== -1 || max !== -1)) {\n      this.ui.validator = (() => {\n        const count = this.mentionChild.getMentions().length;\n        if (min !== -1 && count < min) {\n          return [{ keyword: 'mention', message: `最少提及 ${min} 次` }];\n        }\n        if (max !== -1 && count > max) {\n          return [{ keyword: 'mention', message: `最多提及 ${max} 次` }];\n        }\n        return null;\n      }) as NzSafeAny;\n    }\n  }\n\n  reset(_value: SFValue): void {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _select(options: NzSafeAny): void {\n    if (this.ui.select) this.ui.select(options);\n  }\n\n  _search(option: MentionOnSearchTypes): void {\n    if (typeof this.ui.loadData !== 'function') return;\n\n    this.loading = true;\n    this.ui\n      .loadData(option)\n      .pipe(\n        tap(() => (this.loading = false)),\n        map(res => getEnum(res, null, this.schema.readOnly!))\n      )\n      .subscribe(res => {\n        this.data = res;\n        this.detectChanges(true);\n      });\n  }\n}\n","<sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n  <nz-mention\n    #mentions\n    [nzSuggestions]=\"data\"\n    [nzValueWith]=\"i.valueWith\"\n    [nzLoading]=\"loading\"\n    [nzNotFoundContent]=\"i.notFoundContent\"\n    [nzPlacement]=\"i.placement\"\n    [nzPrefix]=\"i.prefix\"\n    (nzOnSelect)=\"_select($event)\"\n    (nzOnSearchChange)=\"_search($event)\"\n  >\n    <input\n      *ngIf=\"ui.inputStyle !== 'textarea'\"\n      nzMentionTrigger\n      nz-input\n      [attr.id]=\"id\"\n      [disabled]=\"disabled\"\n      [attr.disabled]=\"disabled\"\n      [nzSize]=\"ui.size!\"\n      [ngModel]=\"value\"\n      (ngModelChange)=\"setValue($event)\"\n      [attr.maxLength]=\"schema.maxLength || null\"\n      [attr.placeholder]=\"ui.placeholder\"\n      autocomplete=\"off\"\n    />\n    <textarea\n      *ngIf=\"ui.inputStyle === 'textarea'\"\n      nzMentionTrigger\n      nz-input\n      [attr.id]=\"id\"\n      [disabled]=\"disabled\"\n      [attr.disabled]=\"disabled\"\n      [nzSize]=\"ui.size!\"\n      [ngModel]=\"value\"\n      (ngModelChange)=\"setValue($event)\"\n      [attr.maxLength]=\"schema.maxLength || null\"\n      [attr.placeholder]=\"ui.placeholder\"\n      [nzAutosize]=\"i.autosize\"\n    >\n    </textarea>\n  </nz-mention>\n</sf-item-wrap>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SFNumberWidgetSchema } from './schema';\nimport { ControlUIWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-number',\n  templateUrl: './number.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class NumberWidget extends ControlUIWidget<SFNumberWidgetSchema> implements OnInit {\n  min!: number;\n  max!: number;\n  step!: number;\n  formatter: (value: number) => string | number = value => value;\n  parser: (value: string) => string = value => value;\n  width = '';\n\n  ngOnInit(): void {\n    const { minimum, exclusiveMinimum, maximum, exclusiveMaximum, multipleOf, type } = this.schema;\n    this.step = multipleOf || 1;\n    if (typeof minimum !== 'undefined') {\n      this.min = exclusiveMinimum ? minimum + this.step : minimum;\n    }\n    if (typeof maximum !== 'undefined') {\n      this.max = exclusiveMaximum ? maximum - this.step : maximum;\n    }\n    if (type === 'integer') {\n      this.min = Math.trunc(this.min);\n      this.max = Math.trunc(this.max);\n      this.step = Math.trunc(this.step);\n    }\n\n    const ui = this.ui;\n    if (ui.prefix != null) {\n      ui.formatter = value => (value == null ? '' : `${ui.prefix} ${value}`);\n      ui.parser = value => value.replace(`${ui.prefix} `, '');\n    }\n    if (ui.unit != null) {\n      ui.formatter = value => (value == null ? '' : `${value} ${ui.unit}`);\n      ui.parser = value => value.replace(` ${ui.unit}`, '');\n    }\n    if (ui.formatter) this.formatter = ui.formatter;\n    if (ui.parser) this.parser = ui.parser;\n    this.width = typeof ui.widgetWidth === 'number' ? `${ui.widgetWidth}px` : ui.widgetWidth ?? '90px';\n  }\n\n  _setValue(val: number): void {\n    this.setValue(this.schema.type === 'integer' ? Math.floor(val) : val);\n    if (this.ui.change) this.ui.change(this.value);\n  }\n}\n","<sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n  <nz-input-number\n    [nzId]=\"id\"\n    [ngModel]=\"value\"\n    (ngModelChange)=\"_setValue($event)\"\n    [nzDisabled]=\"disabled\"\n    [nzSize]=\"ui.size!\"\n    [nzMin]=\"min\"\n    [nzMax]=\"max\"\n    [nzStep]=\"step\"\n    [nzFormatter]=\"formatter\"\n    [nzParser]=\"parser\"\n    [nzPrecision]=\"ui.precision\"\n    [nzPlaceHolder]=\"ui.placeholder || ''\"\n    [style.width]=\"width\"\n    [ngClass]=\"{ 'ant-input-number__hide-step': ui.hideStep }\"\n  />\n</sf-item-wrap>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport type { SFObjectWidgetRenderType } from './schema';\nimport { ArrayProperty } from '../../model/array.property';\nimport { FormProperty } from '../../model/form.property';\nimport type { SFGridSchema } from '../../schema/ui';\nimport { toBool } from '../../utils';\nimport { ObjectLayoutWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-object',\n  templateUrl: './object.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class ObjectWidget extends ObjectLayoutWidget implements OnInit {\n  grid: NzSafeAny;\n  type: SFObjectWidgetRenderType = 'default';\n  list: NzSafeAny[] = [];\n  title?: string;\n  showExpand = true;\n  expand = true;\n\n  ngOnInit(): void {\n    const { formProperty, ui } = this;\n    const { grid, showTitle, type } = ui;\n    this.showExpand = toBool(ui.showExpand, true);\n    this.expand = toBool(ui.expand, true);\n    this.type = type ?? 'default';\n    if (\n      this.type === 'card' ||\n      (!formProperty.isRoot() && !(formProperty.parent instanceof ArrayProperty) && showTitle === true)\n    ) {\n      this.title = this.schema.title as string;\n    }\n    this.grid = grid as SFGridSchema;\n    const list: NzSafeAny[] = [];\n    for (const key of formProperty.propertiesId) {\n      const property = (formProperty.properties as { [key: string]: FormProperty })[key] as FormProperty;\n      const item = {\n        property,\n        grid: property.ui.grid || grid || {},\n        spanLabelFixed: property.ui.spanLabelFixed,\n        show: property.ui.hidden === false\n      };\n      list.push(item);\n    }\n    this.list = list;\n  }\n\n  changeExpand(): void {\n    if (!this.showExpand) {\n      return;\n    }\n    this.expand = !this.expand;\n    this.detectChanges(true);\n  }\n}\n","<ng-template #default let-noTitle>\n  <div *ngIf=\"!noTitle && title\" class=\"sf__title\">{{ title }}</div>\n  <ng-container *ngIf=\"grid; else noGrid\">\n    <div nz-row [nzGutter]=\"grid.gutter\">\n      <ng-container *ngFor=\"let i of list\">\n        <ng-container *ngIf=\"i.property.visible && i.show\">\n          <div\n            nz-col\n            [nzSpan]=\"i.grid.span\"\n            [nzOffset]=\"i.grid.offset\"\n            [nzXs]=\"i.grid.xs\"\n            [nzSm]=\"i.grid.sm\"\n            [nzMd]=\"i.grid.md\"\n            [nzLg]=\"i.grid.lg\"\n            [nzXl]=\"i.grid.xl\"\n            [nzXXl]=\"i.grid.xxl\"\n          >\n            <sf-item [formProperty]=\"i.property\" [fixed-label]=\"i.spanLabelFixed\" />\n          </div>\n        </ng-container>\n      </ng-container>\n    </div>\n  </ng-container>\n  <ng-template #noGrid>\n    <ng-container *ngFor=\"let i of list\">\n      <ng-container *ngIf=\"i.property.visible && i.show\">\n        <sf-item [formProperty]=\"i.property\" [fixed-label]=\"i.spanLabelFixed\" />\n      </ng-container>\n    </ng-container>\n  </ng-template>\n</ng-template>\n<nz-card\n  *ngIf=\"type === 'card'; else default\"\n  [nzTitle]=\"cardTitleTpl\"\n  [nzExtra]=\"ui.cardExtra\"\n  [nzSize]=\"ui.cardSize || 'small'\"\n  [nzActions]=\"ui.cardActions || []\"\n  [nzBodyStyle]=\"ui.cardBodyStyle!\"\n  [nzBordered]=\"ui.cardBordered || true\"\n  [nzBorderless]=\"ui.cardBorderless || false\"\n  class=\"sf__object-card\"\n  [class.sf__object-card-fold]=\"!expand\"\n>\n  <ng-template #cardTitleTpl>\n    <div [class.point]=\"showExpand\" (click)=\"changeExpand()\">\n      <i *ngIf=\"showExpand\" nz-icon [nzType]=\"expand ? 'down' : 'up'\" class=\"mr-xs text-xs\"></i>\n      {{ title }}\n      <span *ngIf=\"ui.optional || oh\" class=\"sf__optional\">\n        {{ ui.optional }}\n        <i\n          *ngIf=\"oh\"\n          nz-tooltip\n          [nzTooltipTitle]=\"oh.text\"\n          [nzTooltipPlacement]=\"oh.placement\"\n          [nzTooltipTrigger]=\"oh.trigger\"\n          [nzTooltipColor]=\"oh.bgColor\"\n          [nzTooltipOverlayClassName]=\"oh.overlayClassName\"\n          [nzTooltipOverlayStyle]=\"oh.overlayStyle\"\n          [nzTooltipMouseEnterDelay]=\"oh.mouseEnterDelay\"\n          [nzTooltipMouseLeaveDelay]=\"oh.mouseLeaveDelay\"\n          nz-icon\n          [nzType]=\"oh.icon!\"\n        ></i>\n      </span>\n    </div>\n  </ng-template>\n  <ng-template [ngTemplateOutlet]=\"default\" [ngTemplateOutletContext]=\"{ $implicit: true }\"></ng-template>\n</nz-card>\n","import { Component, ViewEncapsulation } from '@angular/core';\n\nimport { SFRadioWidgetSchema } from './schema';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema/index';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-radio',\n  templateUrl: './radio.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class RadioWidget extends ControlUIWidget<SFRadioWidgetSchema> {\n  data: SFSchemaEnum[] = [];\n  styleType!: boolean;\n\n  reset(value: SFValue): void {\n    this.styleType = (this.ui.styleType || 'default') === 'default';\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  _setValue(value: SFValue): void {\n    this.setValue(value);\n    if (this.ui.change) this.ui.change(value);\n  }\n}\n","<sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n  <nz-radio-group\n    [nzSize]=\"ui.size!\"\n    [nzName]=\"id\"\n    [ngModel]=\"value\"\n    (ngModelChange)=\"_setValue($event)\"\n    [nzButtonStyle]=\"ui.buttonStyle || 'outline'\"\n  >\n    <ng-container *ngIf=\"styleType\">\n      <label *ngFor=\"let option of data\" nz-radio [nzValue]=\"option.value\" [nzDisabled]=\"disabled || option.disabled\">\n        <span [innerHTML]=\"option.label\"></span>\n      </label>\n    </ng-container>\n    <ng-container *ngIf=\"!styleType\">\n      <label\n        *ngFor=\"let option of data\"\n        nz-radio-button\n        [nzValue]=\"option.value\"\n        [nzDisabled]=\"disabled || option.disabled\"\n      >\n        <span [innerHTML]=\"option.label\"></span>\n      </label>\n    </ng-container>\n  </nz-radio-group>\n</sf-item-wrap>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SFRateWidgetSchema } from './schema';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-rate',\n  templateUrl: './rate.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class RateWidget extends ControlUIWidget<SFRateWidgetSchema> implements OnInit {\n  count!: number;\n  allowHalf!: boolean;\n  allowClear!: boolean;\n  autoFocus!: boolean;\n  hasText = false;\n\n  get text(): string {\n    return (this.ui.text as string).replace('{{value}}', this.formProperty.value);\n  }\n\n  ngOnInit(): void {\n    const { schema, ui } = this;\n    this.count = schema.maximum || 5;\n    this.allowHalf = (schema.multipleOf || 0.5) === 0.5;\n    this.allowClear = toBool(ui.allowClear, true);\n    this.autoFocus = toBool(ui.autoFocus, false);\n    this.hasText = !!ui.text;\n  }\n}\n","<sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n  <nz-rate\n    [nzDisabled]=\"disabled\"\n    [ngModel]=\"value\"\n    (ngModelChange)=\"setValue($event)\"\n    [nzAllowClear]=\"allowClear\"\n    [nzAllowHalf]=\"allowHalf\"\n    [nzTooltips]=\"ui.tooltips || []\"\n    [nzAutoFocus]=\"autoFocus\"\n    [nzCount]=\"$any(count)\"\n  />\n  <span *ngIf=\"hasText && formProperty.value\" class=\"ant-rate-text\">{{ text }}</span>\n</sf-item-wrap>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Subject, catchError, debounceTime, distinctUntilChanged, switchMap, takeUntil } from 'rxjs';\n\nimport { ArrayService } from '@yelon/util/array';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { SFSelectWidgetSchema } from './schema';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-select',\n  templateUrl: './select.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class SelectWidget extends ControlUIWidget<SFSelectWidgetSchema> implements OnInit {\n  private search$ = new Subject<string>();\n  i!: SFSelectWidgetSchema;\n  data: SFSchemaEnum[] = [];\n  _value: NzSafeAny;\n  hasGroup = false;\n  loading = false;\n\n  private checkGroup(list: SFSchemaEnum[]): void {\n    this.hasGroup = (list || []).filter(w => w.group === true).length > 0;\n  }\n\n  ngOnInit(): void {\n    const {\n      autoClearSearchValue,\n      borderless,\n      autoFocus,\n      dropdownMatchSelectWidth,\n      serverSearch,\n      maxMultipleCount,\n      mode,\n      showSearch,\n      tokenSeparators,\n      maxTagCount,\n      compareWith,\n      optionHeightPx,\n      optionOverflowSize,\n      showArrow\n    } = this.ui;\n    this.i = {\n      autoClearSearchValue: toBool(autoClearSearchValue, true),\n      borderless: toBool(borderless, false),\n      autoFocus: toBool(autoFocus, false),\n      dropdownMatchSelectWidth: toBool(dropdownMatchSelectWidth, true),\n      serverSearch: toBool(serverSearch, false),\n      maxMultipleCount: maxMultipleCount || Infinity,\n      mode: mode || 'default',\n      showSearch: toBool(showSearch, true),\n      tokenSeparators: tokenSeparators || [],\n      maxTagCount: maxTagCount || undefined,\n      optionHeightPx: optionHeightPx || 32,\n      optionOverflowSize: optionOverflowSize || 8,\n      showArrow: typeof showArrow !== 'boolean' ? undefined : showArrow,\n      compareWith: compareWith || ((o1: NzSafeAny, o2: NzSafeAny) => o1 === o2)\n    };\n\n    const onSearch = this.ui.onSearch!;\n    if (onSearch) {\n      this.search$\n        .pipe(\n          takeUntil(this.sfItemComp!.destroy$),\n          distinctUntilChanged(),\n          debounceTime(this.ui.searchDebounceTime || 300),\n          switchMap(text => onSearch(text)),\n          catchError(() => [])\n        )\n        .subscribe(list => {\n          this.data = list;\n          this.checkGroup(list);\n          this.loading = false;\n          this.detectChanges();\n        });\n    }\n  }\n\n  reset(value: SFValue): void {\n    const onSearch = this.ui.onSearch!;\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this._value = value;\n      if (onSearch == null) this.data = list;\n      this.checkGroup(list);\n      this.detectChanges();\n    });\n    if (value && onSearch != null) this.search$.next(value);\n  }\n\n  change(values: SFValue): void {\n    if (this.ui.change) {\n      this.ui.change(values, this.getOrgData(values));\n    }\n    this.setValue(values == null ? undefined : values);\n  }\n\n  private getOrgData(values: SFValue): SFSchemaEnum | SFSchemaEnum[] {\n    const srv = this.injector.get(ArrayService);\n    if (!Array.isArray(values)) {\n      return srv.findTree(this.data, (item: SFSchemaEnum) => item.value === values)!;\n    }\n    return values.map(value => srv.findTree(this.data, (item: SFSchemaEnum) => item.value === value));\n  }\n\n  openChange(status: boolean): void {\n    if (this.ui.openChange) {\n      this.ui.openChange(status);\n    }\n  }\n\n  scrollToBottom(): void {\n    if (this.ui.scrollToBottom) {\n      this.ui.scrollToBottom();\n    }\n  }\n\n  onSearch(value: string): void {\n    if (this.ui.onSearch) {\n      this.loading = true;\n      this.search$.next(value);\n    }\n  }\n}\n","<sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n  <nz-select\n    [nzId]=\"id\"\n    [nzDisabled]=\"disabled\"\n    [(ngModel)]=\"_value\"\n    (ngModelChange)=\"change($event)\"\n    [nzSize]=\"ui.size!\"\n    [nzPlaceHolder]=\"ui.placeholder!\"\n    [nzNotFoundContent]=\"ui.notFoundContent\"\n    [nzDropdownClassName]=\"ui.dropdownClassName!\"\n    [nzAllowClear]=\"ui.allowClear\"\n    [nzDropdownStyle]=\"ui.dropdownStyle!\"\n    [nzCustomTemplate]=\"ui.customTemplate!\"\n    [nzSuffixIcon]=\"ui.suffixIcon!\"\n    [nzRemoveIcon]=\"ui.removeIcon!\"\n    [nzClearIcon]=\"ui.clearIcon!\"\n    [nzMenuItemSelectedIcon]=\"ui.menuItemSelectedIcon!\"\n    [nzMaxTagPlaceholder]=\"ui.maxTagPlaceholder!\"\n    [nzDropdownRender]=\"ui.dropdownRender!\"\n    [nzAutoClearSearchValue]=\"i.autoClearSearchValue\"\n    [nzBorderless]=\"i.borderless\"\n    [nzAutoFocus]=\"i.autoFocus\"\n    [nzDropdownMatchSelectWidth]=\"i.dropdownMatchSelectWidth!\"\n    [nzServerSearch]=\"i.serverSearch\"\n    [nzMaxMultipleCount]=\"i.maxMultipleCount!\"\n    [nzMode]=\"i.mode!\"\n    [nzShowSearch]=\"i.showSearch\"\n    [nzShowArrow]=\"i.showArrow!\"\n    [nzTokenSeparators]=\"i.tokenSeparators!\"\n    [nzMaxTagCount]=\"i.maxTagCount!\"\n    [compareWith]=\"i.compareWith!\"\n    [nzOptionHeightPx]=\"i.optionHeightPx!\"\n    [nzOptionOverflowSize]=\"i.optionOverflowSize!\"\n    (nzOpenChange)=\"openChange($event)\"\n    (nzOnSearch)=\"onSearch($event)\"\n    (nzScrollToBottom)=\"scrollToBottom()\"\n  >\n    <ng-container *ngIf=\"!loading && !hasGroup\">\n      <nz-option\n        *ngFor=\"let o of data\"\n        [nzLabel]=\"o.label\"\n        [nzValue]=\"o.value\"\n        [nzHide]=\"o.hide\"\n        [nzDisabled]=\"o.disabled\"\n      />\n    </ng-container>\n    <ng-container *ngIf=\"!loading && hasGroup\">\n      <nz-option-group *ngFor=\"let i of data\" [nzLabel]=\"i.label\">\n        <nz-option\n          *ngFor=\"let o of i.children\"\n          [nzLabel]=\"o.label\"\n          [nzValue]=\"o.value\"\n          [nzDisabled]=\"o.disabled\"\n          [nzHide]=\"o.hide\"\n        />\n      </nz-option-group>\n    </ng-container>\n    <nz-option *ngIf=\"loading\" nzDisabled nzCustomContent>\n      <i nz-icon nzType=\"loading\"></i>\n      {{ ui.searchLoadingText }}\n    </nz-option>\n  </nz-select>\n</sf-item-wrap>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { NzMarks, NzSliderValue } from 'ng-zorro-antd/slider';\n\nimport { SFSliderWidgetSchema } from './schema';\nimport { ControlUIWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-slider',\n  templateUrl: './slider.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class SliderWidget extends ControlUIWidget<SFSliderWidgetSchema> implements OnInit {\n  min!: number;\n  max!: number;\n  step!: number;\n  marks: NzMarks | null = null;\n  included!: boolean;\n\n  ngOnInit(): void {\n    const { minimum, maximum, multipleOf } = this.schema;\n    this.min = minimum || 0;\n    this.max = maximum || 100;\n    this.step = multipleOf || 1;\n\n    const { marks, included } = this.ui;\n    this.marks = marks || null;\n    this.included = typeof included === 'undefined' ? true : included;\n  }\n\n  _formatter = (value: number): string => {\n    const { formatter } = this.ui;\n    if (formatter) return formatter(value);\n    return `${value}`;\n  };\n\n  _afterChange(value: NzSliderValue): void {\n    const { afterChange } = this.ui;\n    if (afterChange) return afterChange(value);\n  }\n}\n","<sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n  <nz-slider\n    [ngModel]=\"value\"\n    (ngModelChange)=\"setValue($event)\"\n    [nzDisabled]=\"disabled\"\n    [nzRange]=\"ui.range\"\n    [nzMin]=\"min\"\n    [nzMax]=\"max\"\n    [nzStep]=\"step\"\n    [nzMarks]=\"marks\"\n    [nzDots]=\"ui.dots\"\n    [nzIncluded]=\"included\"\n    [nzVertical]=\"ui.vertical\"\n    [nzTipFormatter]=\"_formatter\"\n    (nzOnAfterChange)=\"_afterChange($event)\"\n  />\n</sf-item-wrap>\n","import { Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\nimport { BehaviorSubject, debounceTime, switchMap, takeUntil } from 'rxjs';\n\nimport { SFStringWidgetSchema } from './schema';\nimport { SFValue } from '../../interface';\nimport { ControlUIWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-string',\n  templateUrl: './string.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class StringWidget extends ControlUIWidget<SFStringWidgetSchema> implements OnInit {\n  type!: string;\n  private change$: BehaviorSubject<string> | null = null;\n\n  ngOnInit(): void {\n    const {\n      addOnAfter,\n      addOnAfterIcon,\n      addOnBefore,\n      addOnBeforeIcon,\n      prefix,\n      prefixIcon,\n      suffix,\n      suffixIcon,\n      autofocus\n    } = this.ui;\n    this.type = !!(\n      addOnAfter ||\n      addOnBefore ||\n      addOnAfterIcon ||\n      addOnBeforeIcon ||\n      prefix ||\n      prefixIcon ||\n      suffix ||\n      suffixIcon\n    )\n      ? 'addon'\n      : '';\n    if (autofocus === true) {\n      setTimeout(() => {\n        (\n          (this.injector.get(ElementRef).nativeElement as HTMLElement).querySelector(`#${this.id}`) as HTMLElement\n        ).focus();\n      }, 20);\n    }\n    this.initChange();\n  }\n\n  reset(value: SFValue): void {\n    if (!value && this.schema.format === 'color') {\n      this.setValue('#000000');\n    }\n  }\n\n  private initChange(): void {\n    const dueTime = this.ui.changeDebounceTime;\n    const changeFn = this.ui.change;\n    if (dueTime == null || dueTime <= 0 || changeFn == null) return;\n\n    this.change$ = new BehaviorSubject<string>(this.value);\n    let obs = this.change$.asObservable().pipe(debounceTime(dueTime), takeUntil(this.sfItemComp!.destroy$));\n    if (this.ui.changeMap != null) {\n      obs = obs.pipe(switchMap(this.ui.changeMap));\n    }\n    obs.subscribe(val => changeFn(val));\n  }\n\n  change(val: string): void {\n    this.setValue(val);\n    if (this.change$ != null) {\n      this.change$.next(val);\n      return;\n    }\n    if (this.ui.change) this.ui.change(val);\n  }\n\n  focus(e: FocusEvent): void {\n    if (this.ui.focus) this.ui.focus(e);\n  }\n\n  blur(e: FocusEvent): void {\n    if (this.ui.blur) this.ui.blur(e);\n  }\n\n  enter(e: Event): void {\n    if (this.ui.enter) this.ui.enter(e);\n  }\n}\n","<sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n  <ng-template #ipt>\n    <input\n      nz-input\n      [attr.id]=\"id\"\n      [disabled]=\"disabled\"\n      [attr.disabled]=\"disabled\"\n      [nzSize]=\"ui.size!\"\n      [nzBorderless]=\"ui.borderless\"\n      [ngModel]=\"value\"\n      (ngModelChange)=\"change($event)\"\n      [attr.maxLength]=\"schema.maxLength || null\"\n      [attr.type]=\"ui.type || 'text'\"\n      [attr.placeholder]=\"ui.placeholder\"\n      [attr.autocomplete]=\"ui.autocomplete\"\n      [attr.autoFocus]=\"ui.autofocus\"\n      (keyup.enter)=\"enter($event)\"\n      (focus)=\"focus($event)\"\n      (blur)=\"blur($event)\"\n    />\n  </ng-template>\n\n  <ng-container *ngIf=\"type === 'addon'; else ipt\">\n    <nz-input-group\n      [nzAddOnBefore]=\"ui.addOnBefore\"\n      [nzAddOnAfter]=\"ui.addOnAfter\"\n      [nzAddOnBeforeIcon]=\"ui.addOnBeforeIcon\"\n      [nzAddOnAfterIcon]=\"ui.addOnAfterIcon\"\n      [nzPrefix]=\"ui.prefix\"\n      [nzPrefixIcon]=\"ui.prefixIcon\"\n      [nzSuffix]=\"ui.suffix\"\n      [nzSuffixIcon]=\"ui.suffixIcon\"\n    >\n      <ng-template [ngTemplateOutlet]=\"ipt\"></ng-template>\n    </nz-input-group>\n  </ng-container>\n</sf-item-wrap>\n","import { Component, ViewEncapsulation } from '@angular/core';\n\nimport { SFTagWidgetSchema } from './schema';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-tag',\n  templateUrl: './tag.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class TagWidget extends ControlUIWidget<SFTagWidgetSchema> {\n  data: SFSchemaEnum[] = [];\n\n  reset(value: SFValue): void {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  onChange(item: SFSchemaEnum): void {\n    item.checked = !item.checked;\n    this.updateValue();\n    if (this.ui.checkedChange) {\n      this.ui.checkedChange(item.checked);\n    }\n  }\n\n  _close(e: MouseEvent): void {\n    if (this.ui.onClose) this.ui.onClose(e);\n  }\n\n  private updateValue(): void {\n    this.formProperty.setValue(\n      this.data.filter(w => w.checked).map(i => i.value),\n      false\n    );\n  }\n}\n","<sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n  <ng-template #icon let-i>\n    <i\n      nz-icon\n      [nzType]=\"i.type\"\n      [nzTheme]=\"i.theme\"\n      [nzTwotoneColor]=\"i.twotoneColor\"\n      [nzRotate]=\"i.rotate\"\n      [nzIconfont]=\"i.iconfont\"\n      [nzSpin]=\"i.spin\"\n    ></i>\n  </ng-template>\n  <nz-tag\n    *ngFor=\"let i of data\"\n    [nzMode]=\"ui.mode || 'checkable'\"\n    [nzChecked]=\"i.checked\"\n    (nzOnClose)=\"_close($event)\"\n    (nzCheckedChange)=\"onChange(i)\"\n  >\n    <ng-container *ngIf=\"i.prefixIcon\">\n      <ng-template [ngTemplateOutlet]=\"icon\" [ngTemplateOutletContext]=\"{ $implicit: i.prefixIcon }\"></ng-template>\n    </ng-container>\n    <span>{{ i.label }}</span>\n    <ng-container *ngIf=\"i.suffixIcon\">\n      <ng-template [ngTemplateOutlet]=\"icon\" [ngTemplateOutletContext]=\"{ $implicit: i.suffixIcon }\"></ng-template>\n    </ng-container>\n  </nz-tag>\n</sf-item-wrap>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SFTextWidgetSchema } from './schema';\nimport { SFValue } from '../../interface';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-text',\n  templateUrl: './text.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class TextWidget extends ControlUIWidget<SFTextWidgetSchema> implements OnInit {\n  text: string = '';\n  ngOnInit(): void {\n    this.ui._required = false;\n    this.ui.html = toBool(this.ui.html, true);\n  }\n\n  reset(value: SFValue): void {\n    this.text = value || this.ui.defaultText || '-';\n  }\n}\n","<sf-item-wrap\n  [id]=\"id\"\n  [schema]=\"schema\"\n  [ui]=\"ui\"\n  [showError]=\"showError\"\n  [error]=\"error\"\n  [showTitle]=\"schema.title\"\n  [class.sf__text-html]=\"ui.html\"\n>\n  <span *ngIf=\"ui.html\" [innerHTML]=\"text\"></span>\n  <span *ngIf=\"!ui.html\" [innerText]=\"text\"></span>\n</sf-item-wrap>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport type { AutoSizeType } from 'ng-zorro-antd/input';\n\nimport { SFTextareaWidgetSchema } from './schema';\nimport { ControlUIWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-textarea',\n  templateUrl: './textarea.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class TextareaWidget extends ControlUIWidget<SFTextareaWidgetSchema> implements OnInit {\n  autosize: string | boolean | AutoSizeType = true;\n\n  ngOnInit(): void {\n    if (this.ui.autosize != null) {\n      this.autosize = this.ui.autosize;\n    }\n    if (this.ui.computeCharacterCount == null) {\n      this.ui.computeCharacterCount = v => v.length;\n    }\n  }\n\n  change(val: string): void {\n    this.setValue(val);\n    if (this.ui.change) this.ui.change(val);\n  }\n\n  focus(e: FocusEvent): void {\n    if (this.ui.focus) this.ui.focus(e);\n  }\n\n  blur(e: FocusEvent): void {\n    if (this.ui.blur) this.ui.blur(e);\n  }\n}\n","<sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n  <ng-template #ipt>\n    <textarea\n      nz-input\n      [attr.id]=\"id\"\n      [disabled]=\"disabled\"\n      [attr.disabled]=\"disabled\"\n      [nzSize]=\"ui.size!\"\n      [ngModel]=\"value\"\n      (ngModelChange)=\"change($event)\"\n      [attr.maxLength]=\"schema.maxLength || null\"\n      [attr.placeholder]=\"ui.placeholder\"\n      [nzAutosize]=\"autosize\"\n      [nzBorderless]=\"ui.borderless\"\n      (focus)=\"focus($event)\"\n      (blur)=\"blur($event)\"\n    >\n    </textarea>\n  </ng-template>\n\n  <ng-container *ngIf=\"ui.maxCharacterCount; else ipt\">\n    <nz-textarea-count\n      [nzMaxCharacterCount]=\"ui.maxCharacterCount\"\n      [nzComputeCharacterCount]=\"ui.computeCharacterCount!\"\n    >\n      <textarea\n        nz-input\n        [attr.id]=\"id\"\n        [disabled]=\"disabled\"\n        [attr.disabled]=\"disabled\"\n        [nzSize]=\"ui.size!\"\n        [ngModel]=\"value\"\n        (ngModelChange)=\"change($event)\"\n        [attr.maxLength]=\"schema.maxLength || null\"\n        [attr.placeholder]=\"ui.placeholder\"\n        [nzAutosize]=\"autosize\"\n        [nzBorderless]=\"ui.borderless\"\n        (focus)=\"focus($event)\"\n        (blur)=\"blur($event)\"\n      >\n      </textarea>\n    </nz-textarea-count>\n  </ng-container>\n</sf-item-wrap>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { format } from 'date-fns';\n\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { SFTimeWidgetSchema } from './schema';\nimport { SFValue } from '../../interface';\nimport { toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-time',\n  templateUrl: './time.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class TimeWidget extends ControlUIWidget<SFTimeWidgetSchema> implements OnInit {\n  private valueFormat: string | undefined;\n  displayValue: Date | null = null;\n  i: NzSafeAny;\n\n  ngOnInit(): void {\n    const ui = this.ui;\n    this.valueFormat = ui._format;\n    const opt = {\n      displayFormat: ui.displayFormat || 'HH:mm:ss',\n      allowEmpty: toBool(ui.allowEmpty, true),\n      clearText: ui.clearText || '清除',\n      defaultOpenValue: ui.defaultOpenValue || new Date(),\n      hideDisabledOptions: toBool(ui.hideDisabledOptions, false),\n      use12Hours: toBool(ui.use12Hours, false),\n      hourStep: ui.hourStep || 1,\n      minuteStep: ui.minuteStep || 1,\n      secondStep: ui.secondStep || 1\n    };\n    if (opt.use12Hours && !ui.displayFormat) {\n      opt.displayFormat = `h:mm:ss a`;\n    }\n    this.i = opt;\n  }\n\n  reset(value: SFValue): void {\n    if (value instanceof Date) {\n      this.displayValue = value;\n      this.detectChanges();\n      return;\n    }\n    let v = value != null && value.toString().length ? new Date(value) : null;\n\n    // trying restore full Date format\n    if (v != null && v.toString() === 'Invalid Date') {\n      if (value.toString().split(':').length <= 1) {\n        value += ':00';\n      }\n      v = new Date(`1970-1-1 ${value}`);\n    }\n    this.displayValue = v;\n    this.detectChanges();\n  }\n\n  _change(value: Date | null): void {\n    if (this.ui.change) {\n      this.ui.change(value);\n    }\n    if (value == null) {\n      this.setValue(null);\n      return;\n    }\n    if (this.ui.utcEpoch === true) {\n      this.setValue(Date.UTC(1970, 0, 1, value.getHours(), value.getMinutes(), value.getSeconds()));\n      return;\n    }\n    this.setValue(format(value, this.valueFormat!));\n  }\n\n  _openChange(status: boolean): void {\n    if (this.ui.openChange) {\n      this.ui.openChange(status);\n    }\n  }\n}\n","<sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n  <nz-time-picker\n    [nzId]=\"id\"\n    [(ngModel)]=\"displayValue\"\n    (ngModelChange)=\"_change($event)\"\n    [nzDisabled]=\"disabled\"\n    [nzSize]=\"$any(ui.size)\"\n    [nzFormat]=\"i.displayFormat\"\n    [nzAllowEmpty]=\"i.allowEmpty\"\n    [nzClearText]=\"i.clearText\"\n    [nzDefaultOpenValue]=\"i.defaultOpenValue\"\n    [nzDisabledHours]=\"ui.disabledHours\"\n    [nzDisabledMinutes]=\"ui.disabledMinutes\"\n    [nzDisabledSeconds]=\"ui.disabledSeconds\"\n    [nzHideDisabledOptions]=\"i.hideDisabledOptions\"\n    [nzUse12Hours]=\"i.use12Hours\"\n    [nzHourStep]=\"i.hourStep\"\n    [nzMinuteStep]=\"i.minuteStep\"\n    [nzSecondStep]=\"i.secondStep\"\n    [nzPopupClassName]=\"ui.popupClassName!\"\n    [nzPlaceHolder]=\"ui.placeholder!\"\n    [nzNowText]=\"ui.nowText!\"\n    [nzOkText]=\"ui.okText!\"\n    (nzOpenChange)=\"_openChange($event)\"\n  />\n</sf-item-wrap>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport {\n  TransferCanMove,\n  TransferChange,\n  TransferItem,\n  TransferSearchChange,\n  TransferSelectChange\n} from 'ng-zorro-antd/transfer';\n\nimport { SFTransferWidgetSchema } from './schema';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-transfer',\n  templateUrl: './transfer.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class TransferWidget extends ControlUIWidget<SFTransferWidgetSchema> implements OnInit {\n  list: SFSchemaEnum[] = [];\n  i!: { titles: string[]; operations: string[]; itemUnit: string; itemsUnit: string };\n  private _data: SFSchemaEnum[] = [];\n\n  ngOnInit(): void {\n    const { titles, operations, itemUnit, itemsUnit } = this.ui;\n    this.i = {\n      titles: titles || ['', ''],\n      operations: operations || ['', ''],\n      itemUnit: itemUnit || '项',\n      itemsUnit: itemsUnit || '项'\n    };\n  }\n\n  reset(value: SFValue): void {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      let formData = value;\n      if (!Array.isArray(formData)) {\n        formData = [formData];\n      }\n      list.forEach((item: SFSchemaEnum) => {\n        if (~(formData as NzSafeAny[]).indexOf(item.value)) {\n          item.direction = 'right';\n        }\n      });\n      this.list = list;\n      this._data = list.filter(w => w.direction === 'right');\n      this.notify();\n      this.detectChanges();\n    });\n  }\n\n  private notify(): void {\n    this.formProperty.setValue(\n      this._data.map(i => i.value),\n      false\n    );\n  }\n\n  _canMove = (arg: TransferCanMove): Observable<TransferItem[]> => {\n    return this.ui.canMove ? this.ui.canMove(arg) : of(arg.list);\n  };\n\n  _change(options: TransferChange): void {\n    if (options.to === 'right') {\n      this._data = this._data.concat(...options.list);\n    } else {\n      this._data = this._data.filter((w: SFSchemaEnum) => options.list.indexOf(w as TransferItem) === -1);\n    }\n    if (this.ui.change) this.ui.change(options);\n    this.notify();\n  }\n\n  _searchChange(options: TransferSearchChange): void {\n    if (this.ui.searchChange) this.ui.searchChange(options);\n    this.detectChanges();\n  }\n\n  _selectChange(options: TransferSelectChange): void {\n    if (this.ui.selectChange) this.ui.selectChange(options);\n    this.detectChanges();\n  }\n}\n","<sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n  <nz-transfer\n    [nzDataSource]=\"$any(list)\"\n    [nzTitles]=\"i.titles\"\n    [nzOperations]=\"i.operations\"\n    [nzListStyle]=\"ui.listStyle!\"\n    [nzItemUnit]=\"i.itemUnit\"\n    [nzItemsUnit]=\"i.itemsUnit\"\n    [nzShowSearch]=\"ui.showSearch\"\n    [nzFilterOption]=\"ui.filterOption\"\n    [nzSearchPlaceholder]=\"ui.searchPlaceholder\"\n    [nzNotFoundContent]=\"ui.notFoundContent\"\n    [nzCanMove]=\"_canMove\"\n    (nzChange)=\"_change($event)\"\n    (nzSearchChange)=\"_searchChange($event)\"\n    (nzSelectChange)=\"_selectChange($event)\"\n  />\n</sf-item-wrap>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { NzFormatEmitEvent, NzTreeNode } from 'ng-zorro-antd/core/tree';\n\nimport { SFTreeSelectWidgetSchema } from './schema';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-tree-select',\n  templateUrl: './tree-select.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class TreeSelectWidget extends ControlUIWidget<SFTreeSelectWidgetSchema> implements OnInit {\n  i!: SFTreeSelectWidgetSchema;\n  data: SFSchemaEnum[] = [];\n  asyncData = false;\n\n  ngOnInit(): void {\n    const { ui } = this;\n    this.i = {\n      allowClear: ui.allowClear,\n      showSearch: toBool(ui.showSearch, false),\n      dropdownMatchSelectWidth: toBool(ui.dropdownMatchSelectWidth, true),\n      multiple: toBool(ui.multiple, false),\n      checkable: toBool(ui.checkable, false),\n      showIcon: toBool(ui.showIcon, false),\n      showExpand: toBool(ui.showExpand, true),\n      showLine: toBool(ui.showLine, false),\n      checkStrictly: toBool(ui.checkStrictly, false),\n      hideUnMatched: toBool(ui.hideUnMatched, false),\n      defaultExpandAll: toBool(ui.defaultExpandAll, false),\n      displayWith: ui.displayWith || ((node: NzTreeNode) => node.title)\n    };\n    this.asyncData = typeof ui.expandChange === 'function';\n  }\n\n  reset(value: SFValue): void {\n    getData(this.schema, this.ui, value).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  change(value: string[] | string): void {\n    if (this.ui.change) this.ui.change(value);\n    this.setValue(value);\n  }\n\n  expandChange(e: NzFormatEmitEvent): void {\n    const { ui } = this;\n    if (typeof ui.expandChange !== 'function') return;\n    ui.expandChange(e).subscribe(res => {\n      e.node!.clearChildren();\n      e.node!.addChildren(res);\n      this.detectChanges();\n    });\n  }\n}\n","<sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n  <nz-tree-select\n    [nzId]=\"id\"\n    [nzAllowClear]=\"i.allowClear\"\n    [nzPlaceHolder]=\"ui.placeholder!\"\n    [nzDropdownStyle]=\"ui.dropdownStyle!\"\n    [nzDropdownClassName]=\"ui.dropdownClassName\"\n    [nzSize]=\"ui.size!\"\n    [nzExpandedKeys]=\"ui.expandedKeys!\"\n    [nzNotFoundContent]=\"ui.notFoundContent\"\n    [nzMaxTagCount]=\"ui.maxTagCount!\"\n    [nzMaxTagPlaceholder]=\"ui.maxTagPlaceholder || null\"\n    [nzTreeTemplate]=\"ui.treeTemplate!\"\n    [nzDisabled]=\"disabled\"\n    [nzShowSearch]=\"i.showSearch\"\n    [nzShowIcon]=\"i.showIcon\"\n    [nzDropdownMatchSelectWidth]=\"i.dropdownMatchSelectWidth\"\n    [nzMultiple]=\"i.multiple\"\n    [nzHideUnMatched]=\"i.hideUnMatched\"\n    [nzCheckable]=\"i.checkable\"\n    [nzShowExpand]=\"i.showExpand\"\n    [nzShowLine]=\"i.showLine\"\n    [nzCheckStrictly]=\"i.checkStrictly\"\n    [nzAsyncData]=\"asyncData\"\n    [nzNodes]=\"$any(data)\"\n    [nzDefaultExpandAll]=\"i.defaultExpandAll\"\n    [nzDisplayWith]=\"i.displayWith!\"\n    [ngModel]=\"value\"\n    [nzVirtualHeight]=\"ui.virtualHeight!\"\n    [nzVirtualItemSize]=\"ui.virtualItemSize || 28\"\n    [nzVirtualMaxBufferPx]=\"ui.virtualMaxBufferPx || 500\"\n    [nzVirtualMinBufferPx]=\"ui.virtualMinBufferPx || 28\"\n    (ngModelChange)=\"change($event)\"\n    (nzExpandChange)=\"expandChange($event)\"\n  />\n</sf-item-wrap>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { of } from 'rxjs';\n\nimport { deepGet } from '@yelon/util/other';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzModalService } from 'ng-zorro-antd/modal';\nimport { NzUploadChangeParam, NzUploadFile } from 'ng-zorro-antd/upload';\n\nimport { SFUploadWidgetSchema } from './schema';\nimport { SFValue } from '../../interface';\nimport { getData, toBool } from '../../utils';\nimport { ControlUIWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-upload',\n  templateUrl: './upload.widget.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class UploadWidget extends ControlUIWidget<SFUploadWidgetSchema> implements OnInit {\n  i: NzSafeAny;\n  fileList: NzUploadFile[] = [];\n  btnType = '';\n\n  ngOnInit(): void {\n    const {\n      type,\n      text,\n      hint,\n      action,\n      accept,\n      limit,\n      filter,\n      fileSize,\n      fileType,\n      listType,\n      multiple,\n      name,\n      showUploadList,\n      withCredentials,\n      resReName,\n      urlReName,\n      beforeUpload,\n      customRequest,\n      directory,\n      openFileDialogOnClick,\n      limitFileCount\n    } = this.ui;\n    const res: NzSafeAny = {\n      type: type || 'select',\n      text: text || '点击上传',\n      action: action || '',\n      accept: accept || '',\n      directory: toBool(directory, false),\n      openFileDialogOnClick: toBool(openFileDialogOnClick, true),\n      limit: limit == null ? 0 : +limit,\n      filter: filter == null ? [] : filter,\n      size: fileSize == null ? 0 : +fileSize,\n      fileType: fileType || '',\n      listType: listType || 'text',\n      multiple: toBool(multiple, false),\n      name: name || 'file',\n      showUploadList: showUploadList == null ? true : showUploadList,\n      withCredentials: toBool(withCredentials, false),\n      resReName: (resReName || '').split('.'),\n      urlReName: (urlReName || '').split('.'),\n      beforeUpload: typeof beforeUpload === 'function' ? beforeUpload : null,\n      customRequest: typeof customRequest === 'function' ? customRequest : null,\n      limitFileCount: limitFileCount || 999\n    };\n    if (res.listType === 'picture-card') {\n      this.btnType = 'plus';\n    }\n    if (res.type === 'drag') {\n      res.listType = null;\n      this.btnType = 'drag';\n      res.text = text || `单击或拖动文件到该区域上传`;\n      res.hint = hint || `支持单个或批量，严禁上传公司数据或其他安全文件`;\n    }\n    this.i = res;\n  }\n\n  change(args: NzUploadChangeParam): void {\n    if (this.ui.change) this.ui.change(args);\n    if (args.type !== 'success') return;\n    this._setValue(args.fileList);\n  }\n\n  reset(value: SFValue): void {\n    const { fileList } = this.ui;\n    (fileList ? of(fileList) : Array.isArray(value) ? of(value) : getData(this.schema, this.ui, null)).subscribe(\n      list => {\n        this.fileList = list as NzUploadFile[];\n        this.formProperty._value = this.pureValue(list);\n        this.formProperty.updateValueAndValidity({ onlySelf: false, emitValueEvent: false, emitValidator: false });\n        this.detectChanges();\n      }\n    );\n  }\n\n  private _getValue(file: NzUploadFile): NzSafeAny {\n    return deepGet(file.response, this.i.resReName, file.response);\n  }\n\n  private pureValue(fileList: NzUploadFile[]): NzSafeAny {\n    fileList\n      .filter(file => !file.url)\n      .forEach(file => {\n        file.url = deepGet(file.response, this.i.urlReName);\n      });\n    const res = fileList.filter(w => w.status === 'done').map(file => this._getValue(file));\n    return this.i.multiple === true ? res : res.pop();\n  }\n\n  private _setValue(fileList: NzUploadFile[]): void {\n    this.setValue(this.pureValue(fileList));\n  }\n\n  handleRemove = (): boolean => {\n    this._setValue(this.fileList);\n    return true;\n  };\n\n  handlePreview = (file: NzUploadFile): void => {\n    if (this.ui.preview) {\n      this.ui.preview(file);\n      return;\n    }\n    const _url = file.thumbUrl || file.url;\n    if (!_url) {\n      return;\n    }\n    this.injector.get<NzModalService>(NzModalService).create({\n      nzContent: `<img src=\"${_url}\" class=\"img-fluid\" />`,\n      nzFooter: null\n    });\n  };\n}\n","<sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n  <nz-upload\n    [nzType]=\"i.type\"\n    [(nzFileList)]=\"fileList\"\n    [nzDisabled]=\"disabled\"\n    [nzAction]=\"i.action\"\n    [nzDirectory]=\"i.directory\"\n    [nzOpenFileDialogOnClick]=\"i.openFileDialogOnClick\"\n    [nzAccept]=\"i.accept\"\n    [nzLimit]=\"i.limit\"\n    [nzFilter]=\"i.filter\"\n    [nzSize]=\"i.size\"\n    [nzFileType]=\"i.fileType\"\n    [nzHeaders]=\"ui.headers\"\n    [nzData]=\"ui.data\"\n    [nzListType]=\"i.listType\"\n    [nzMultiple]=\"i.multiple\"\n    [nzName]=\"i.name\"\n    [nzShowUploadList]=\"i.showUploadList\"\n    [nzWithCredentials]=\"i.withCredentials\"\n    [nzBeforeUpload]=\"i.beforeUpload\"\n    [nzCustomRequest]=\"i.customRequest\"\n    [nzRemove]=\"ui.remove || handleRemove\"\n    [nzPreview]=\"handlePreview\"\n    [nzPreviewFile]=\"ui.previewFile\"\n    [nzDownload]=\"ui.download\"\n    [nzTransformFile]=\"ui.transformFile\"\n    (nzChange)=\"change($event)\"\n    [nzShowButton]=\"fileList.length < i.limitFileCount\"\n  >\n    <ng-container [ngSwitch]=\"btnType\">\n      <ng-container *ngSwitchCase=\"'plus'\">\n        <i nz-icon nzType=\"plus\"></i>\n        <div class=\"ant-upload-text\" [innerHTML]=\"i.text\"></div>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"'drag'\">\n        <p class=\"ant-upload-drag-icon\"><i nz-icon nzType=\"inbox\"></i></p>\n        <p class=\"ant-upload-text\" [innerHTML]=\"i.text\"></p>\n        <p class=\"ant-upload-hint\" [innerHTML]=\"i.hint\"></p>\n      </ng-container>\n      <ng-container *ngSwitchDefault>\n        <button type=\"button\" nz-button><i nz-icon nzType=\"upload\"></i><span [innerHTML]=\"i.text\"></span></button>\n      </ng-container>\n    </ng-container>\n  </nz-upload>\n</sf-item-wrap>\n","import { ArrayWidget } from './array/array.widget';\nimport { AutoCompleteWidget } from './autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './boolean/boolean.widget';\nimport { CascaderWidget } from './cascader/cascader.widget';\nimport { CheckboxWidget } from './checkbox/checkbox.widget';\nimport { CustomWidget } from './custom/custom.widget';\nimport { DateWidget } from './date/date.widget';\nimport { MentionWidget } from './mention/mention.widget';\nimport { NumberWidget } from './number/number.widget';\nimport { ObjectWidget } from './object/object.widget';\nimport { RadioWidget } from './radio/radio.widget';\nimport { RateWidget } from './rate/rate.widget';\nimport { SelectWidget } from './select/select.widget';\nimport { SliderWidget } from './slider/slider.widget';\nimport { StringWidget } from './string/string.widget';\nimport { TagWidget } from './tag/tag.widget';\nimport { TextWidget } from './text/text.widget';\nimport { TextareaWidget } from './textarea/textarea.widget';\nimport { TimeWidget } from './time/time.widget';\nimport { TransferWidget } from './transfer/transfer.widget';\nimport { TreeSelectWidget } from './tree-select/tree-select.widget';\nimport { UploadWidget } from './upload/upload.widget';\nimport { WidgetRegistry } from '../widget.factory';\n\nexport class NzWidgetRegistry extends WidgetRegistry {\n  constructor() {\n    super();\n\n    this.register('object', ObjectWidget);\n    this.register('array', ArrayWidget);\n\n    this.register('text', TextWidget);\n    this.register('string', StringWidget);\n    this.register('number', NumberWidget);\n    this.register('integer', NumberWidget);\n    this.register('date', DateWidget);\n    this.register('time', TimeWidget);\n    this.register('radio', RadioWidget);\n    this.register('checkbox', CheckboxWidget);\n    this.register('boolean', BooleanWidget);\n    this.register('textarea', TextareaWidget);\n    this.register('select', SelectWidget);\n    this.register('tree-select', TreeSelectWidget);\n    this.register('tag', TagWidget);\n    this.register('upload', UploadWidget);\n    this.register('transfer', TransferWidget);\n    this.register('slider', SliderWidget);\n    this.register('rate', RateWidget);\n    this.register('autocomplete', AutoCompleteWidget);\n    this.register('cascader', CascaderWidget);\n    this.register('mention', MentionWidget);\n    this.register('custom', CustomWidget);\n\n    this.setDefault(StringWidget);\n  }\n}\n","/* eslint-disable import/order */\nimport { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule, NgZone } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { NzAutocompleteModule } from 'ng-zorro-antd/auto-complete';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzCardModule } from 'ng-zorro-antd/card';\nimport { NzCascaderModule } from 'ng-zorro-antd/cascader';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzInputNumberModule } from 'ng-zorro-antd/input-number';\nimport { NzMentionModule } from 'ng-zorro-antd/mention';\nimport { NzModalModule } from 'ng-zorro-antd/modal';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { NzRateModule } from 'ng-zorro-antd/rate';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { NzSliderModule } from 'ng-zorro-antd/slider';\nimport { NzSwitchModule } from 'ng-zorro-antd/switch';\nimport { NzTagModule } from 'ng-zorro-antd/tag';\nimport { NzTimePickerModule } from 'ng-zorro-antd/time-picker';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport { NzTransferModule } from 'ng-zorro-antd/transfer';\nimport { NzTreeSelectModule } from 'ng-zorro-antd/tree-select';\nimport { NzUploadModule } from 'ng-zorro-antd/upload';\n\nimport { YelonLocaleModule } from '@yelon/theme';\nimport { YunzaiConfigService } from '@yelon/util/config';\n\nconst ZORROS = [\n  NzAutocompleteModule,\n  NzButtonModule,\n  NzCardModule,\n  NzCascaderModule,\n  NzCheckboxModule,\n  NzDatePickerModule,\n  NzFormModule,\n  NzGridModule,\n  NzIconModule,\n  NzInputModule,\n  NzInputNumberModule,\n  NzMentionModule,\n  NzModalModule,\n  NzRadioModule,\n  NzRateModule,\n  NzSelectModule,\n  NzSliderModule,\n  NzSwitchModule,\n  NzTagModule,\n  NzTimePickerModule,\n  NzToolTipModule,\n  NzTransferModule,\n  NzTreeSelectModule,\n  NzUploadModule\n];\n\nimport { SFFixedDirective } from './sf-fixed.directive';\nimport { SFItemWrapComponent } from './sf-item-wrap.component';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport { AjvSchemaValidatorFactory, SchemaValidatorFactory } from './validator.factory';\nimport { SFTemplateDirective } from './widgets/custom/sf-template.directive';\n\nconst COMPONENTS = [SFComponent, SFItemComponent, SFItemWrapComponent, SFTemplateDirective, SFFixedDirective];\n\n// #region widgets\n\nimport { WidgetRegistry } from './widget.factory';\nimport { ArrayWidget } from './widgets/array/array.widget';\nimport { AutoCompleteWidget } from './widgets/autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './widgets/boolean/boolean.widget';\nimport { CascaderWidget } from './widgets/cascader/cascader.widget';\nimport { CheckboxWidget } from './widgets/checkbox/checkbox.widget';\nimport { CustomWidget } from './widgets/custom/custom.widget';\nimport { DateWidget } from './widgets/date/date.widget';\nimport { MentionWidget } from './widgets/mention/mention.widget';\nimport { NumberWidget } from './widgets/number/number.widget';\nimport { NzWidgetRegistry } from './widgets/nz-widget.registry';\nimport { ObjectWidget } from './widgets/object/object.widget';\nimport { RadioWidget } from './widgets/radio/radio.widget';\nimport { RateWidget } from './widgets/rate/rate.widget';\nimport { SelectWidget } from './widgets/select/select.widget';\nimport { SliderWidget } from './widgets/slider/slider.widget';\nimport { StringWidget } from './widgets/string/string.widget';\nimport { TagWidget } from './widgets/tag/tag.widget';\nimport { TextWidget } from './widgets/text/text.widget';\nimport { TextareaWidget } from './widgets/textarea/textarea.widget';\nimport { TimeWidget } from './widgets/time/time.widget';\nimport { TransferWidget } from './widgets/transfer/transfer.widget';\nimport { TreeSelectWidget } from './widgets/tree-select/tree-select.widget';\nimport { UploadWidget } from './widgets/upload/upload.widget';\n\nconst WIDGETS = [\n  ObjectWidget,\n  ArrayWidget,\n  StringWidget,\n  NumberWidget,\n  DateWidget,\n  TimeWidget,\n  RadioWidget,\n  CheckboxWidget,\n  BooleanWidget,\n  TextareaWidget,\n  SelectWidget,\n  TreeSelectWidget,\n  TagWidget,\n  UploadWidget,\n  TransferWidget,\n  SliderWidget,\n  RateWidget,\n  AutoCompleteWidget,\n  CascaderWidget,\n  MentionWidget,\n  CustomWidget,\n  TextWidget\n];\n\n// #endregion\n\n@NgModule({\n  imports: [CommonModule, FormsModule, YelonLocaleModule, ...ZORROS],\n  declarations: [...COMPONENTS, ...WIDGETS],\n  exports: COMPONENTS\n})\nexport class YelonFormModule {\n  static forRoot(): ModuleWithProviders<YelonFormModule> {\n    return {\n      ngModule: YelonFormModule,\n      providers: [\n        {\n          provide: SchemaValidatorFactory,\n          useClass: AjvSchemaValidatorFactory,\n          deps: [YunzaiConfigService, NgZone]\n        },\n        { provide: WidgetRegistry, useClass: NzWidgetRegistry }\n      ]\n    };\n  }\n}\n","import { Observable } from 'rxjs';\n\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport type { NzFormControlStatusType } from 'ng-zorro-antd/form';\n\nimport type { SFValue } from './interface';\nimport type { FormProperty, PropertyGroup } from './model/form.property';\n\nexport const ERRORSDEFAULT = {\n  'false schema': `布尔模式出错`,\n  $ref: `无法找到引用{ref}`,\n  additionalItems: `不允许超过{ref}`,\n  additionalProperties: `不允许有额外的属性`,\n  anyOf: `数据应为 anyOf 所指定的其中一个`,\n  dependencies: `应当拥有属性{property}的依赖属性{deps}`,\n  enum: `应当是预设定的枚举值之一`,\n  format: `格式不正确`, // `应当匹配格式 \"{format}\"`,\n  type: `类型应当是 {type}`,\n  required: `必填项`,\n  maxLength: `至多 {limit} 个字符`,\n  minLength: `至少 {limit} 个字符以上`,\n  minimum: `必须 {comparison}{limit}`,\n  formatMinimum: `必须 {comparison}{limit}`,\n  maximum: `必须 {comparison}{limit}`,\n  formatMaximum: `必须 {comparison}{limit}`,\n  maxItems: `不应多于 {limit} 个项`,\n  minItems: `不应少于 {limit} 个项`,\n  maxProperties: `不应多于 {limit} 个属性`,\n  minProperties: `不应少于 {limit} 个属性`,\n  multipleOf: `应当是 {multipleOf} 的整数倍`,\n  not: `不应当匹配 \"not\" schema`,\n  oneOf: `只能匹配一个 \"oneOf\" 中的 schema`,\n  pattern: `数据格式不正确`,\n  uniqueItems: `不应当含有重复项 (第 {j} 项与第 {i} 项是重复的)`,\n  custom: `格式不正确`,\n  propertyNames: `属性名 \"{propertyName}\" 无效`,\n  patternRequired: `应当有属性匹配模式 {missingPattern}`,\n  switch: `由于 {caseIndex} 失败，未通过 \"switch\" 校验`,\n  const: `应当等于常量`,\n  contains: `应当包含一个有效项`,\n  formatExclusiveMaximum: `formatExclusiveMaximum 应当是布尔值`,\n  formatExclusiveMinimum: `formatExclusiveMinimum 应当是布尔值`,\n  if: `应当匹配模式 \"{failingKeyword}\"`\n};\n\nexport interface ErrorData {\n  [key: string]: NzSafeAny;\n\n  /**\n   * When specifying `keyword`, you can use `sf` built-in some common types [ERRORSDEFAULT](https://github.com/hbyunzai/yelon/blob/master/packages/form/src/errors.ts#L4) , direct conversion. Or use the `message` parameter to specify an error message.\n   *\n   * 当指定 `keyword` 时，可以利用 `sf` 内置一些常见类型 [ERRORSDEFAULT](https://github.com/hbyunzai/yelon/blob/master/packages/form/src/errors.ts#L4)，直接转化。或者使用 `message` 参数来指定错误消息。\n   */\n  keyword?: string | null;\n  dataPath?: string;\n  data?: unknown;\n  schemaPath?: string;\n  instancePath?: string;\n  /**\n   * Parameters required for template parsing\n   *\n   * 指定模板解析所需要的参数\n   */\n  params?: Record<string, NzSafeAny>;\n  /**\n   * Specify error message\n   *\n   * 指定错误消息\n   */\n  message?: string | ((err: ErrorData) => string);\n}\n\nexport interface ErrorSchema {\n  /**\n   * 是否实时校验，默认：`true`\n   * - `true` 每一次都校验\n   * - `false` 提交时校验\n   */\n  liveValidate?: boolean;\n  /**\n   * 自定义错误信息文本，键名赞同 `ErrorData.keyword` 值\n   */\n  errors?: { [key: string]: string | ((obj: ErrorData) => string) };\n  /**\n   * 是否只展示错误视觉不显示错误文本，默认：`false`\n   */\n  onlyVisual?: boolean;\n  /**\n   * 是否忽略某些数据类型校验 `ERRORSDEFAULT`\n   * - 值始终包含 `YelonSchemaFormConfig.ignoreKeywords`\n   */\n  ignoreKeywords?: string[];\n\n  /**\n   * Whether to force to display `*` on the label to indicate that it is required\n   *\n   * 是否强制在标签上显示 `*` 来表示必填，一般在当使用自定义校验 `validator` 可能需要必填项处理\n   */\n  showRequired?: boolean;\n\n  /**\n   * Custom verification, the final result will be merged with Ajv verification results\n   *\n   * 自定义校验，最后结果会与 Ajv 校验结果进行合并显示\n   */\n  validator?: (\n    value: SFValue,\n    formProperty: FormProperty,\n    form: PropertyGroup\n  ) => ErrorData[] | Observable<ErrorData[]>;\n\n  /**\n   * Form status value, only supports `this.sf.getProperty('/department')?.updateFeedback('validating')` calling method\n   *\n   * 表单状态值，只支持 `this.sf.getProperty('/department')?.updateFeedback('validating')` 调用方式\n   *\n   * > 注：若遇到出现校验时失焦，可尝试取消\n   */\n  feedback?: NzFormControlStatusType;\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1.WidgetFactory","i2.TerminatorService","i3","i8","i9","i10","i11","i12","i13","i15","i16.SFItemComponent","i17.SFFixedDirective","i1","i2","i4","i5","i6","i7","i1.SFComponent","i10.SFItemComponent","i5.SFItemWrapComponent","i3.SFItemWrapComponent","i8.SFItemWrapComponent","i2.SFItemWrapComponent","i4.SFItemWrapComponent","i7.SFItemComponent","i8.SFFixedDirective","i6.SFItemWrapComponent","i7.SFItemWrapComponent"],"mappings":"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"}