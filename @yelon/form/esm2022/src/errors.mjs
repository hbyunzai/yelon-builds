export const ERRORSDEFAULT = {
    'false schema': `布尔模式出错`,
    $ref: `无法找到引用{ref}`,
    additionalItems: `不允许超过{ref}`,
    additionalProperties: `不允许有额外的属性`,
    anyOf: `数据应为 anyOf 所指定的其中一个`,
    dependencies: `应当拥有属性{property}的依赖属性{deps}`,
    enum: `应当是预设定的枚举值之一`,
    format: `格式不正确`,
    type: `类型应当是 {type}`,
    required: `必填项`,
    maxLength: `至多 {limit} 个字符`,
    minLength: `至少 {limit} 个字符以上`,
    minimum: `必须 {comparison}{limit}`,
    formatMinimum: `必须 {comparison}{limit}`,
    maximum: `必须 {comparison}{limit}`,
    formatMaximum: `必须 {comparison}{limit}`,
    maxItems: `不应多于 {limit} 个项`,
    minItems: `不应少于 {limit} 个项`,
    maxProperties: `不应多于 {limit} 个属性`,
    minProperties: `不应少于 {limit} 个属性`,
    multipleOf: `应当是 {multipleOf} 的整数倍`,
    not: `不应当匹配 "not" schema`,
    oneOf: `只能匹配一个 "oneOf" 中的 schema`,
    pattern: `数据格式不正确`,
    uniqueItems: `不应当含有重复项 (第 {j} 项与第 {i} 项是重复的)`,
    custom: `格式不正确`,
    propertyNames: `属性名 "{propertyName}" 无效`,
    patternRequired: `应当有属性匹配模式 {missingPattern}`,
    switch: `由于 {caseIndex} 失败，未通过 "switch" 校验`,
    const: `应当等于常量`,
    contains: `应当包含一个有效项`,
    formatExclusiveMaximum: `formatExclusiveMaximum 应当是布尔值`,
    formatExclusiveMinimum: `formatExclusiveMinimum 应当是布尔值`,
    if: `应当匹配模式 "{failingKeyword}"`
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3JzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvZm9ybS9zcmMvZXJyb3JzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVFBLE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBRztJQUMzQixjQUFjLEVBQUUsUUFBUTtJQUN4QixJQUFJLEVBQUUsYUFBYTtJQUNuQixlQUFlLEVBQUUsWUFBWTtJQUM3QixvQkFBb0IsRUFBRSxXQUFXO0lBQ2pDLEtBQUssRUFBRSxxQkFBcUI7SUFDNUIsWUFBWSxFQUFFLDZCQUE2QjtJQUMzQyxJQUFJLEVBQUUsY0FBYztJQUNwQixNQUFNLEVBQUUsT0FBTztJQUNmLElBQUksRUFBRSxjQUFjO0lBQ3BCLFFBQVEsRUFBRSxLQUFLO0lBQ2YsU0FBUyxFQUFFLGdCQUFnQjtJQUMzQixTQUFTLEVBQUUsa0JBQWtCO0lBQzdCLE9BQU8sRUFBRSx3QkFBd0I7SUFDakMsYUFBYSxFQUFFLHdCQUF3QjtJQUN2QyxPQUFPLEVBQUUsd0JBQXdCO0lBQ2pDLGFBQWEsRUFBRSx3QkFBd0I7SUFDdkMsUUFBUSxFQUFFLGlCQUFpQjtJQUMzQixRQUFRLEVBQUUsaUJBQWlCO0lBQzNCLGFBQWEsRUFBRSxrQkFBa0I7SUFDakMsYUFBYSxFQUFFLGtCQUFrQjtJQUNqQyxVQUFVLEVBQUUsdUJBQXVCO0lBQ25DLEdBQUcsRUFBRSxvQkFBb0I7SUFDekIsS0FBSyxFQUFFLDBCQUEwQjtJQUNqQyxPQUFPLEVBQUUsU0FBUztJQUNsQixXQUFXLEVBQUUsZ0NBQWdDO0lBQzdDLE1BQU0sRUFBRSxPQUFPO0lBQ2YsYUFBYSxFQUFFLHlCQUF5QjtJQUN4QyxlQUFlLEVBQUUsNEJBQTRCO0lBQzdDLE1BQU0sRUFBRSxtQ0FBbUM7SUFDM0MsS0FBSyxFQUFFLFFBQVE7SUFDZixRQUFRLEVBQUUsV0FBVztJQUNyQixzQkFBc0IsRUFBRSwrQkFBK0I7SUFDdkQsc0JBQXNCLEVBQUUsK0JBQStCO0lBQ3ZELEVBQUUsRUFBRSwyQkFBMkI7Q0FDaEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcblxuaW1wb3J0IHR5cGUgeyBOelNhZmVBbnkgfSBmcm9tICduZy16b3Jyby1hbnRkL2NvcmUvdHlwZXMnO1xuaW1wb3J0IHR5cGUgeyBOekZvcm1Db250cm9sU3RhdHVzVHlwZSB9IGZyb20gJ25nLXpvcnJvLWFudGQvZm9ybSc7XG5cbmltcG9ydCB0eXBlIHsgU0ZWYWx1ZSB9IGZyb20gJy4vaW50ZXJmYWNlJztcbmltcG9ydCB0eXBlIHsgRm9ybVByb3BlcnR5LCBQcm9wZXJ0eUdyb3VwIH0gZnJvbSAnLi9tb2RlbC9mb3JtLnByb3BlcnR5JztcblxuZXhwb3J0IGNvbnN0IEVSUk9SU0RFRkFVTFQgPSB7XG4gICdmYWxzZSBzY2hlbWEnOiBg5biD5bCU5qih5byP5Ye66ZSZYCxcbiAgJHJlZjogYOaXoOazleaJvuWIsOW8leeUqHtyZWZ9YCxcbiAgYWRkaXRpb25hbEl0ZW1zOiBg5LiN5YWB6K646LaF6L+He3JlZn1gLFxuICBhZGRpdGlvbmFsUHJvcGVydGllczogYOS4jeWFgeiuuOaciemineWklueahOWxnuaAp2AsXG4gIGFueU9mOiBg5pWw5o2u5bqU5Li6IGFueU9mIOaJgOaMh+WumueahOWFtuS4reS4gOS4qmAsXG4gIGRlcGVuZGVuY2llczogYOW6lOW9k+aLpeacieWxnuaAp3twcm9wZXJ0eX3nmoTkvp3otZblsZ7mgKd7ZGVwc31gLFxuICBlbnVtOiBg5bqU5b2T5piv6aKE6K6+5a6a55qE5p6a5Li+5YC85LmL5LiAYCxcbiAgZm9ybWF0OiBg5qC85byP5LiN5q2j56GuYCwgLy8gYOW6lOW9k+WMuemFjeagvOW8jyBcIntmb3JtYXR9XCJgLFxuICB0eXBlOiBg57G75Z6L5bqU5b2T5pivIHt0eXBlfWAsXG4gIHJlcXVpcmVkOiBg5b+F5aGr6aG5YCxcbiAgbWF4TGVuZ3RoOiBg6Iez5aSaIHtsaW1pdH0g5Liq5a2X56ymYCxcbiAgbWluTGVuZ3RoOiBg6Iez5bCRIHtsaW1pdH0g5Liq5a2X56ym5Lul5LiKYCxcbiAgbWluaW11bTogYOW/hemhuyB7Y29tcGFyaXNvbn17bGltaXR9YCxcbiAgZm9ybWF0TWluaW11bTogYOW/hemhuyB7Y29tcGFyaXNvbn17bGltaXR9YCxcbiAgbWF4aW11bTogYOW/hemhuyB7Y29tcGFyaXNvbn17bGltaXR9YCxcbiAgZm9ybWF0TWF4aW11bTogYOW/hemhuyB7Y29tcGFyaXNvbn17bGltaXR9YCxcbiAgbWF4SXRlbXM6IGDkuI3lupTlpJrkuo4ge2xpbWl0fSDkuKrpoblgLFxuICBtaW5JdGVtczogYOS4jeW6lOWwkeS6jiB7bGltaXR9IOS4qumhuWAsXG4gIG1heFByb3BlcnRpZXM6IGDkuI3lupTlpJrkuo4ge2xpbWl0fSDkuKrlsZ7mgKdgLFxuICBtaW5Qcm9wZXJ0aWVzOiBg5LiN5bqU5bCR5LqOIHtsaW1pdH0g5Liq5bGe5oCnYCxcbiAgbXVsdGlwbGVPZjogYOW6lOW9k+aYryB7bXVsdGlwbGVPZn0g55qE5pW05pWw5YCNYCxcbiAgbm90OiBg5LiN5bqU5b2T5Yy56YWNIFwibm90XCIgc2NoZW1hYCxcbiAgb25lT2Y6IGDlj6rog73ljLnphY3kuIDkuKogXCJvbmVPZlwiIOS4reeahCBzY2hlbWFgLFxuICBwYXR0ZXJuOiBg5pWw5o2u5qC85byP5LiN5q2j56GuYCxcbiAgdW5pcXVlSXRlbXM6IGDkuI3lupTlvZPlkKvmnInph43lpI3pobkgKOesrCB7an0g6aG55LiO56ysIHtpfSDpobnmmK/ph43lpI3nmoQpYCxcbiAgY3VzdG9tOiBg5qC85byP5LiN5q2j56GuYCxcbiAgcHJvcGVydHlOYW1lczogYOWxnuaAp+WQjSBcIntwcm9wZXJ0eU5hbWV9XCIg5peg5pWIYCxcbiAgcGF0dGVyblJlcXVpcmVkOiBg5bqU5b2T5pyJ5bGe5oCn5Yy56YWN5qih5byPIHttaXNzaW5nUGF0dGVybn1gLFxuICBzd2l0Y2g6IGDnlLHkuo4ge2Nhc2VJbmRleH0g5aSx6LSl77yM5pyq6YCa6L+HIFwic3dpdGNoXCIg5qCh6aqMYCxcbiAgY29uc3Q6IGDlupTlvZPnrYnkuo7luLjph49gLFxuICBjb250YWluczogYOW6lOW9k+WMheWQq+S4gOS4quacieaViOmhuWAsXG4gIGZvcm1hdEV4Y2x1c2l2ZU1heGltdW06IGBmb3JtYXRFeGNsdXNpdmVNYXhpbXVtIOW6lOW9k+aYr+W4g+WwlOWAvGAsXG4gIGZvcm1hdEV4Y2x1c2l2ZU1pbmltdW06IGBmb3JtYXRFeGNsdXNpdmVNaW5pbXVtIOW6lOW9k+aYr+W4g+WwlOWAvGAsXG4gIGlmOiBg5bqU5b2T5Yy56YWN5qih5byPIFwie2ZhaWxpbmdLZXl3b3JkfVwiYFxufTtcblxuZXhwb3J0IGludGVyZmFjZSBFcnJvckRhdGEge1xuICBba2V5OiBzdHJpbmddOiBOelNhZmVBbnk7XG5cbiAgLyoqXG4gICAqIFdoZW4gc3BlY2lmeWluZyBga2V5d29yZGAsIHlvdSBjYW4gdXNlIGBzZmAgYnVpbHQtaW4gc29tZSBjb21tb24gdHlwZXMgW0VSUk9SU0RFRkFVTFRdKGh0dHBzOi8vZ2l0aHViLmNvbS9oYnl1bnphaS95ZWxvbi9ibG9iL21hc3Rlci9wYWNrYWdlcy9mb3JtL3NyYy9lcnJvcnMudHMjTDQpICwgZGlyZWN0IGNvbnZlcnNpb24uIE9yIHVzZSB0aGUgYG1lc3NhZ2VgIHBhcmFtZXRlciB0byBzcGVjaWZ5IGFuIGVycm9yIG1lc3NhZ2UuXG4gICAqXG4gICAqIOW9k+aMh+WumiBga2V5d29yZGAg5pe277yM5Y+v5Lul5Yip55SoIGBzZmAg5YaF572u5LiA5Lqb5bi46KeB57G75Z6LIFtFUlJPUlNERUZBVUxUXShodHRwczovL2dpdGh1Yi5jb20vaGJ5dW56YWkveWVsb24vYmxvYi9tYXN0ZXIvcGFja2FnZXMvZm9ybS9zcmMvZXJyb3JzLnRzI0w0Ke+8jOebtOaOpei9rOWMluOAguaIluiAheS9v+eUqCBgbWVzc2FnZWAg5Y+C5pWw5p2l5oyH5a6a6ZSZ6K+v5raI5oGv44CCXG4gICAqL1xuICBrZXl3b3JkPzogc3RyaW5nIHwgbnVsbDtcbiAgZGF0YVBhdGg/OiBzdHJpbmc7XG4gIGRhdGE/OiB1bmtub3duO1xuICBzY2hlbWFQYXRoPzogc3RyaW5nO1xuICBpbnN0YW5jZVBhdGg/OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBQYXJhbWV0ZXJzIHJlcXVpcmVkIGZvciB0ZW1wbGF0ZSBwYXJzaW5nXG4gICAqXG4gICAqIOaMh+Wumuaooeadv+ino+aekOaJgOmcgOimgeeahOWPguaVsFxuICAgKi9cbiAgcGFyYW1zPzogUmVjb3JkPHN0cmluZywgTnpTYWZlQW55PjtcbiAgLyoqXG4gICAqIFNwZWNpZnkgZXJyb3IgbWVzc2FnZVxuICAgKlxuICAgKiDmjIflrprplJnor6/mtojmga9cbiAgICovXG4gIG1lc3NhZ2U/OiBzdHJpbmcgfCAoKGVycjogRXJyb3JEYXRhKSA9PiBzdHJpbmcpO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEVycm9yU2NoZW1hIHtcbiAgLyoqXG4gICAqIOaYr+WQpuWunuaXtuagoemqjO+8jOm7mOiupO+8mmB0cnVlYFxuICAgKiAtIGB0cnVlYCDmr4/kuIDmrKHpg73moKHpqoxcbiAgICogLSBgZmFsc2VgIOaPkOS6pOaXtuagoemqjFxuICAgKi9cbiAgbGl2ZVZhbGlkYXRlPzogYm9vbGVhbjtcbiAgLyoqXG4gICAqIOiHquWumuS5iemUmeivr+S/oeaBr+aWh+acrO+8jOmUruWQjei1nuWQjCBgRXJyb3JEYXRhLmtleXdvcmRgIOWAvFxuICAgKi9cbiAgZXJyb3JzPzogeyBba2V5OiBzdHJpbmddOiBzdHJpbmcgfCAoKG9iajogRXJyb3JEYXRhKSA9PiBzdHJpbmcpIH07XG4gIC8qKlxuICAgKiDmmK/lkKblj6rlsZXnpLrplJnor6/op4bop4nkuI3mmL7npLrplJnor6/mlofmnKzvvIzpu5jorqTvvJpgZmFsc2VgXG4gICAqL1xuICBvbmx5VmlzdWFsPzogYm9vbGVhbjtcbiAgLyoqXG4gICAqIOaYr+WQpuW/veeVpeafkOS6m+aVsOaNruexu+Wei+agoemqjCBgRVJST1JTREVGQVVMVGBcbiAgICogLSDlgLzlp4vnu4jljIXlkKsgYFllbG9uU2NoZW1hRm9ybUNvbmZpZy5pZ25vcmVLZXl3b3Jkc2BcbiAgICovXG4gIGlnbm9yZUtleXdvcmRzPzogc3RyaW5nW107XG5cbiAgLyoqXG4gICAqIFdoZXRoZXIgdG8gZm9yY2UgdG8gZGlzcGxheSBgKmAgb24gdGhlIGxhYmVsIHRvIGluZGljYXRlIHRoYXQgaXQgaXMgcmVxdWlyZWRcbiAgICpcbiAgICog5piv5ZCm5by65Yi25Zyo5qCH562+5LiK5pi+56S6IGAqYCDmnaXooajnpLrlv4XloavvvIzkuIDoiKzlnKjlvZPkvb/nlKjoh6rlrprkuYnmoKHpqowgYHZhbGlkYXRvcmAg5Y+v6IO96ZyA6KaB5b+F5aGr6aG55aSE55CGXG4gICAqL1xuICBzaG93UmVxdWlyZWQ/OiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBDdXN0b20gdmVyaWZpY2F0aW9uLCB0aGUgZmluYWwgcmVzdWx0IHdpbGwgYmUgbWVyZ2VkIHdpdGggQWp2IHZlcmlmaWNhdGlvbiByZXN1bHRzXG4gICAqXG4gICAqIOiHquWumuS5ieagoemqjO+8jOacgOWQjue7k+aenOS8muS4jiBBanYg5qCh6aqM57uT5p6c6L+b6KGM5ZCI5bm25pi+56S6XG4gICAqL1xuICB2YWxpZGF0b3I/OiAoXG4gICAgdmFsdWU6IFNGVmFsdWUsXG4gICAgZm9ybVByb3BlcnR5OiBGb3JtUHJvcGVydHksXG4gICAgZm9ybTogUHJvcGVydHlHcm91cFxuICApID0+IEVycm9yRGF0YVtdIHwgT2JzZXJ2YWJsZTxFcnJvckRhdGFbXT47XG5cbiAgLyoqXG4gICAqIEZvcm0gc3RhdHVzIHZhbHVlLCBvbmx5IHN1cHBvcnRzIGB0aGlzLnNmLmdldFByb3BlcnR5KCcvZGVwYXJ0bWVudCcpPy51cGRhdGVGZWVkYmFjaygndmFsaWRhdGluZycpYCBjYWxsaW5nIG1ldGhvZFxuICAgKlxuICAgKiDooajljZXnirbmgIHlgLzvvIzlj6rmlK/mjIEgYHRoaXMuc2YuZ2V0UHJvcGVydHkoJy9kZXBhcnRtZW50Jyk/LnVwZGF0ZUZlZWRiYWNrKCd2YWxpZGF0aW5nJylgIOiwg+eUqOaWueW8j1xuICAgKlxuICAgKiA+IOazqO+8muiLpemBh+WIsOWHuueOsOagoemqjOaXtuWkseeEpu+8jOWPr+WwneivleWPlua2iFxuICAgKi9cbiAgZmVlZGJhY2s/OiBOekZvcm1Db250cm9sU3RhdHVzVHlwZTtcbn1cbiJdfQ==