{"version":3,"file":"acl.mjs","sources":["../../../../packages/acl/src/acl.config.ts","../../../../packages/acl/src/acl.service.ts","../../../../packages/acl/src/acl-if.directive.ts","../../../../packages/acl/src/acl.directive.ts","../../../../packages/acl/src/acl.type.ts","../../../../packages/acl/src/acl-guard.ts","../../../../packages/acl/src/acl.module.ts","../../../../packages/acl/acl.ts"],"sourcesContent":["import type { YunzaiACLConfig } from '@yelon/util/config';\n\nexport const ACL_DEFAULT_CONFIG: YunzaiACLConfig = {\n  guard_url: `/403`\n};\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { YunzaiACLConfig, YunzaiConfigService } from '@yelon/util/config';\n\nimport { ACL_DEFAULT_CONFIG } from './acl.config';\nimport { ACLCanType, ACLType } from './acl.type';\n\n/**\n * ACL 控制服务，[在线文档](https://ng.yunzainfo.com/acl)\n *\n * 务必在根目录注册 `YelonACLModule.forRoot()` 才能使用服务\n */\n@Injectable()\nexport class ACLService {\n  private options: YunzaiACLConfig;\n  private roles: string[] = [];\n  private abilities: Array<number | string> = [];\n  private full = false;\n  private aclChange = new BehaviorSubject<ACLType | boolean | null>(null);\n\n  /** ACL变更通知 */\n  get change(): Observable<ACLType | boolean | null> {\n    return this.aclChange.asObservable();\n  }\n\n  /** 获取所有数据 */\n  get data(): { full: boolean; roles: string[]; abilities: Array<string | number> } {\n    return {\n      full: this.full,\n      roles: this.roles,\n      abilities: this.abilities\n    };\n  }\n\n  get guard_url(): string {\n    return this.options.guard_url!;\n  }\n\n  constructor(configSrv: YunzaiConfigService) {\n    this.options = configSrv.merge('acl', ACL_DEFAULT_CONFIG)!;\n  }\n\n  private parseACLType(val: string | string[] | number | number[] | ACLType | null): ACLType {\n    let t: ACLType;\n    if (typeof val === 'number') {\n      t = { ability: [val] };\n    } else if (Array.isArray(val) && val.length > 0 && typeof val[0] === 'number') {\n      t = { ability: val };\n    } else if (typeof val === 'object' && !Array.isArray(val)) {\n      t = { ...val };\n    } else if (Array.isArray(val)) {\n      t = { role: val as string[] };\n    } else {\n      t = { role: val == null ? [] : [val] };\n    }\n\n    return { except: false, ...t };\n  }\n\n  /**\n   * 设置当前用户角色或权限能力（会先清除所有）\n   */\n  set(value: ACLType): void {\n    this.full = false;\n    this.abilities = [];\n    this.roles = [];\n    this.add(value);\n    this.aclChange.next(value);\n  }\n\n  /**\n   * 标识当前用户为全量，即不受限\n   */\n  setFull(val: boolean): void {\n    this.full = val;\n    this.aclChange.next(val);\n  }\n\n  /**\n   * 设置当前用户权限能力（会先清除所有）\n   */\n  setAbility(abilities: Array<number | string>): void {\n    this.set({ ability: abilities } as ACLType);\n  }\n\n  /**\n   * 设置当前用户角色（会先清除所有）\n   */\n  setRole(roles: string[]): void {\n    this.set({ role: roles } as ACLType);\n  }\n\n  /**\n   * 为当前用户增加角色或权限能力\n   */\n  add(value: ACLType): void {\n    if (value.role && value.role.length > 0) {\n      this.roles.push(...value.role);\n    }\n    if (value.ability && value.ability.length > 0) {\n      this.abilities.push(...value.ability);\n    }\n  }\n\n  /**\n   * 为当前用户附加角色\n   */\n  attachRole(roles: string[]): void {\n    for (const val of roles) {\n      if (!this.roles.includes(val)) {\n        this.roles.push(val);\n      }\n    }\n    this.aclChange.next(this.data);\n  }\n\n  /**\n   * 为当前用户附加权限\n   */\n  attachAbility(abilities: Array<number | string>): void {\n    for (const val of abilities) {\n      if (!this.abilities.includes(val)) {\n        this.abilities.push(val);\n      }\n    }\n    this.aclChange.next(this.data);\n  }\n\n  /**\n   * 为当前用户移除角色\n   */\n  removeRole(roles: string[]): void {\n    for (const val of roles) {\n      const idx = this.roles.indexOf(val);\n      if (idx !== -1) {\n        this.roles.splice(idx, 1);\n      }\n    }\n    this.aclChange.next(this.data);\n  }\n\n  /**\n   * 为当前用户移除权限\n   */\n  removeAbility(abilities: Array<number | string>): void {\n    for (const val of abilities) {\n      const idx = this.abilities.indexOf(val);\n      if (idx !== -1) {\n        this.abilities.splice(idx, 1);\n      }\n    }\n    this.aclChange.next(this.data);\n  }\n\n  /**\n   * 当前用户是否有对应角色，其实 `number` 表示Ability\n   *\n   * - 当 `full: true` 或参数 `null` 时返回 `true`\n   * - 若使用 `ACLType` 参数，可以指定 `mode` 校验模式\n   */\n  can(roleOrAbility: ACLCanType | null): boolean {\n    const { preCan } = this.options;\n    if (preCan) {\n      roleOrAbility = preCan(roleOrAbility!);\n    }\n\n    const t = this.parseACLType(roleOrAbility);\n    let result = false;\n    if (this.full === true || !roleOrAbility) {\n      result = true;\n    } else {\n      if (t.role && t.role.length > 0) {\n        if (t.mode === 'allOf') {\n          result = t.role.every(v => this.roles.includes(v));\n        } else {\n          result = t.role.some(v => this.roles.includes(v));\n        }\n      }\n      if (t.ability && t.ability.length > 0) {\n        if (t.mode === 'allOf') {\n          result = (t.ability as Array<number | string>).every(v => this.abilities.includes(v));\n        } else {\n          result = (t.ability as Array<number | string>).some(v => this.abilities.includes(v));\n        }\n      }\n    }\n\n    return t.except === true ? !result : result;\n  }\n\n  /** @inner */\n  parseAbility(value: ACLCanType): ACLCanType {\n    if (typeof value === 'number' || typeof value === 'string' || Array.isArray(value)) {\n      value = { ability: Array.isArray(value) ? value : [value] } as ACLType;\n    }\n    delete value.role;\n    return value;\n  }\n\n  /**\n   * 当前用户是否有对应权限点\n   */\n  canAbility(value: ACLCanType): boolean {\n    return this.can(this.parseAbility(value));\n  }\n}\n","import { Directive, EmbeddedViewRef, Input, OnDestroy, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Subscription, filter } from 'rxjs';\n\nimport { ACLService } from './acl.service';\nimport { ACLCanType } from './acl.type';\n\n@Directive({\n  selector: '[aclIf]',\n  exportAs: 'aclIf'\n})\nexport class ACLIfDirective implements OnDestroy {\n  static ngAcceptInputType_except: boolean | string | undefined | null;\n\n  private _value!: ACLCanType;\n  private _change$: Subscription;\n  private _thenTemplateRef: TemplateRef<void> | null = null;\n  private _elseTemplateRef: TemplateRef<void> | null = null;\n  private _thenViewRef: EmbeddedViewRef<void> | null = null;\n  private _elseViewRef: EmbeddedViewRef<void> | null = null;\n  private _except = false;\n\n  constructor(\n    templateRef: TemplateRef<void>,\n    private srv: ACLService,\n    private _viewContainer: ViewContainerRef\n  ) {\n    this._change$ = this.srv.change.pipe(filter(r => r != null)).subscribe(() => this._updateView());\n    this._thenTemplateRef = templateRef;\n  }\n\n  @Input()\n  set aclIf(value: ACLCanType) {\n    this._value = value;\n    this._updateView();\n  }\n\n  @Input()\n  set aclIfThen(templateRef: TemplateRef<void> | null) {\n    this._thenTemplateRef = templateRef;\n    this._thenViewRef = null;\n    this._updateView();\n  }\n\n  @Input()\n  set aclIfElse(templateRef: TemplateRef<void> | null) {\n    this._elseTemplateRef = templateRef;\n    this._elseViewRef = null;\n    this._updateView();\n  }\n\n  @Input()\n  set except(value: boolean) {\n    this._except = value != null && `${value}` !== 'false';\n  }\n  get except(): boolean {\n    return this._except;\n  }\n\n  protected _updateView(): void {\n    const res = this.srv.can(this._value);\n    if ((res && !this.except) || (!res && this.except)) {\n      if (!this._thenViewRef) {\n        this._viewContainer.clear();\n        this._elseViewRef = null;\n        if (this._thenTemplateRef) {\n          this._thenViewRef = this._viewContainer.createEmbeddedView(this._thenTemplateRef);\n        }\n      }\n    } else {\n      if (!this._elseViewRef) {\n        this._viewContainer.clear();\n        this._thenViewRef = null;\n        if (this._elseTemplateRef) {\n          this._elseViewRef = this._viewContainer.createEmbeddedView(this._elseTemplateRef);\n        }\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._change$.unsubscribe();\n  }\n}\n","import { Directive, ElementRef, Input, OnDestroy, Renderer2 } from '@angular/core';\nimport { Subscription, filter } from 'rxjs';\n\nimport { ACLService } from './acl.service';\nimport { ACLCanType } from './acl.type';\n\n@Directive({\n  selector: '[acl]',\n  exportAs: 'acl'\n})\nexport class ACLDirective implements OnDestroy {\n  private _value!: ACLCanType;\n  private change$: Subscription;\n\n  @Input('acl')\n  set acl(value: ACLCanType) {\n    this.set(value);\n  }\n\n  @Input('acl-ability')\n  set ability(value: ACLCanType) {\n    this.set(this.srv.parseAbility(value));\n  }\n\n  private set(value: ACLCanType): void {\n    this._value = value;\n    const CLS = 'acl__hide';\n    const el = this.el.nativeElement;\n    if (this.srv.can(this._value)) {\n      this.renderer.removeClass(el, CLS);\n    } else {\n      this.renderer.addClass(el, CLS);\n    }\n  }\n\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2,\n    protected srv: ACLService\n  ) {\n    this.change$ = this.srv.change.pipe(filter(r => r != null)).subscribe(() => this.set(this._value));\n  }\n\n  ngOnDestroy(): void {\n    this.change$.unsubscribe();\n  }\n}\n","/**\n * NOTE：`ACLType` 类型可能会被其他类库所引用，为了减少类库间彼此的依赖性，其他类库会以复制的形式存在\n * 当这里有变化时，请务必同步更新，涉及：`MenuService.acl`、`util.YunzaiACLType`\n * TODO: 尝试增加 `@yelon/core` 类库用于处理这种通用型\n */\n\nimport { Injector } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport type { ACLService } from './acl.service';\n\nexport interface ACLType {\n  /**\n   * 角色\n   */\n  role?: string[];\n  /**\n   * 权限点\n   */\n  ability?: number[] | string[];\n\n  /**\n   * Validated against, default: `oneOf`\n   * - `allOf` the value validates against all the roles or abilities\n   * - `oneOf` the value validates against exactly one of the roles or abilities\n   */\n  mode?: 'allOf' | 'oneOf';\n\n  /**\n   * 是否取反，即结果为 `true` 时表示未授权\n   */\n  except?: boolean;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any;\n}\n\nexport type ACLCanType = number | number[] | string | string[] | ACLType;\n\nexport type ACLGuardFunctionType = (srv: ACLService, injector: Injector) => Observable<ACLCanType>;\nexport type ACLGuardType = ACLCanType | Observable<ACLCanType> | ACLGuardFunctionType;\n\nexport interface ACLGuardData {\n  guard?: ACLGuardType | null;\n  guard_url?: string | null;\n}\n","import { Injectable, Injector, inject } from '@angular/core';\nimport { CanActivateChildFn, CanActivateFn, CanMatchFn, Router } from '@angular/router';\nimport { Observable, of, map, tap } from 'rxjs';\n\nimport { ACLService } from './acl.service';\nimport type { ACLCanType, ACLGuardData } from './acl.type';\n\n@Injectable()\nexport class ACLGuardService {\n  constructor(\n    private srv: ACLService,\n    private router: Router,\n    private injector: Injector\n  ) {}\n\n  process(data?: ACLGuardData): Observable<boolean> {\n    data = {\n      guard: null,\n      guard_url: this.srv.guard_url,\n      ...data\n    };\n    let guard = data.guard;\n    if (typeof guard === 'function') guard = guard(this.srv, this.injector);\n    return (guard && guard instanceof Observable ? guard : of(guard != null ? (guard as ACLCanType) : null)).pipe(\n      map(v => this.srv.can(v)),\n      tap(v => {\n        if (v) return;\n        this.router.navigateByUrl(data!!.guard_url!!);\n      })\n    );\n  }\n}\n\n/**\n * Routing guard prevent unauthorized users visit the page, [ACL Document](https://ng.yunzainfo.com/acl).\n *\n * ```ts\n * data: {\n *  path: 'home',\n *  canActivate: [ aclCanActivate ],\n *  data: { guard: 'user1' }\n * }\n * ```\n */\nexport const aclCanActivate: CanActivateFn = route => inject(ACLGuardService).process(route.data);\n\n/**\n * Routing guard prevent unauthorized users visit the page, [ACL Document](https://ng.yunzainfo.com/acl).\n *\n * ```ts\n * data: {\n *  path: 'home',\n *  canActivateChild: [ aclCanActivateChild ],\n *  data: { guard: 'user1' }\n * }\n * ```\n */\nexport const aclCanActivateChild: CanActivateChildFn = route => inject(ACLGuardService).process(route.data);\n\n/**\n * Routing guard prevent unauthorized users visit the page, [ACL Document](https://ng.yunzainfo.com/acl).\n *\n * ```ts\n * data: {\n *  path: 'home',\n *  canMatch: [ aclCanMatch ],\n *  data: { guard: 'user1' }\n * }\n * ```\n */\nexport const aclCanMatch: CanMatchFn = route => inject(ACLGuardService).process(route.data);\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { ACLGuardService } from './acl-guard';\nimport { ACLIfDirective } from './acl-if.directive';\nimport { ACLDirective } from './acl.directive';\nimport { ACLService } from './acl.service';\n\nconst COMPONENTS = [ACLDirective, ACLIfDirective];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: COMPONENTS,\n  exports: COMPONENTS\n})\nexport class YelonACLModule {\n  static forRoot(): ModuleWithProviders<YelonACLModule> {\n    return {\n      ngModule: YelonACLModule,\n      providers: [ACLService, ACLGuardService]\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1.ACLService"],"mappings":"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"}