{"version":3,"file":"auth.mjs","sources":["../../../../packages/auth/src/auth.config.ts","../../../../packages/auth/src/store/local-storage.service.ts","../../../../packages/auth/src/store/interface.ts","../../../../packages/auth/src/token/token.service.ts","../../../../packages/auth/src/token/interface.ts","../../../../packages/auth/src/social/social.service.ts","../../../../packages/auth/src/store/memory.service.ts","../../../../packages/auth/src/store/session-storage.service.ts","../../../../packages/auth/src/store/cookie-storage.service.ts","../../../../packages/auth/src/token/helper.ts","../../../../packages/auth/src/token.ts","../../../../packages/auth/src/token/base.interceptor.ts","../../../../packages/auth/src/token/jwt/jwt.helper.ts","../../../../packages/auth/src/token/jwt/jwt.model.ts","../../../../packages/auth/src/token/jwt/jwt.interceptor.ts","../../../../packages/auth/src/token/jwt/jwt.guard.ts","../../../../packages/auth/src/token/simple/simple.model.ts","../../../../packages/auth/src/token/simple/simple.interceptor.ts","../../../../packages/auth/src/token/simple/simple.guard.ts","../../../../packages/auth/src/auth.module.ts","../../../../packages/auth/auth.ts"],"sourcesContent":["import type { YunzaiAuthConfig, YunzaiConfigService } from '@yelon/util/config';\n\nexport const AUTH_DEFAULT_CONFIG: YunzaiAuthConfig = {\n  store_key: `_yz_token`,\n  token_invalid_redirect: true,\n  token_exp_offset: 10,\n  token_send_key: `Authorization`,\n  token_send_template: 'Bearer ${access_token}',\n  token_send_place: 'header',\n  login_url: '/login',\n  ignores: [/\\/login/, /assets\\//, /passport\\//, /\\/auth\\/oauth\\/getOrCreateToken\\/webapp/, /\\/auth\\/oauth\\/token/],\n  allow_anonymous_key: `_allow_anonymous`,\n  executeOtherInterceptors: true,\n  refreshTime: 3000,\n  refreshOffset: 6000\n};\n\nexport function mergeConfig(srv: YunzaiConfigService): YunzaiAuthConfig {\n  return srv.merge('auth', AUTH_DEFAULT_CONFIG)!;\n}\n","import { IStore } from './interface';\nimport { ITokenModel } from '../token/interface';\n\nexport function YA_STORE_TOKEN_LOCAL_FACTORY(): IStore {\n  return new LocalStorageStore();\n}\n\n/**\n * `localStorage` storage, **not lost after closing the browser**.\n *\n * ```ts\n * // global-config.module.ts\n * { provide: YA_STORE_TOKEN, useClass: LocalStorageStore }\n * ```\n */\nexport class LocalStorageStore implements IStore {\n  get(key: string): ITokenModel {\n    return JSON.parse(localStorage.getItem(key) || '{}') || {};\n  }\n\n  set(key: string, value: ITokenModel | null): boolean {\n    localStorage.setItem(key, JSON.stringify(value));\n    return true;\n  }\n\n  remove(key: string): void {\n    localStorage.removeItem(key);\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { YA_STORE_TOKEN_LOCAL_FACTORY } from './local-storage.service';\nimport { ITokenModel } from '../token/interface';\n\nexport const YA_STORE_TOKEN = new InjectionToken<IStore>('AUTH_STORE_TOKEN', {\n  providedIn: 'root',\n  factory: YA_STORE_TOKEN_LOCAL_FACTORY\n});\n\nexport interface IStore {\n  get(key: string): ITokenModel;\n\n  set(key: string, value: ITokenModel): boolean;\n\n  remove(key: string): void;\n}\n","import { inject, Inject, Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, interval, Observable, Subject, Subscription, filter, map, share } from 'rxjs';\n\nimport { YunzaiAuthConfig, YunzaiConfigService } from '@yelon/util/config';\n\nimport { AuthReferrer, ITokenModel, ITokenService } from './interface';\nimport { mergeConfig } from '../auth.config';\nimport { YA_STORE_TOKEN, IStore } from '../store/interface';\n\nexport function YA_SERVICE_TOKEN_FACTORY(): ITokenService {\n  return new TokenService(inject(YunzaiConfigService), inject(YA_STORE_TOKEN));\n}\n\n/**\n * 维护Token信息服务，[在线文档](https://ng.yunzainfo.com/auth)\n */\n@Injectable()\nexport class TokenService implements ITokenService, OnDestroy {\n  private refresh$ = new Subject<ITokenModel>();\n  private change$ = new BehaviorSubject<ITokenModel | null>(null);\n  private interval$?: Subscription;\n  private _referrer: AuthReferrer = {};\n  private _options: YunzaiAuthConfig;\n\n  constructor(\n    configSrv: YunzaiConfigService,\n    @Inject(YA_STORE_TOKEN) private store: IStore\n  ) {\n    this._options = mergeConfig(configSrv);\n  }\n\n  get refresh(): Observable<ITokenModel> {\n    this.builderRefresh();\n    return this.refresh$.pipe(share());\n  }\n\n  get login_url(): string | undefined {\n    return this._options.login_url;\n  }\n\n  get referrer(): AuthReferrer {\n    return this._referrer;\n  }\n\n  get options(): YunzaiAuthConfig {\n    return this._options;\n  }\n\n  set(data: ITokenModel): boolean {\n    if (data.expires_in) {\n      data.expires_in = data.expires_in * 60;\n    }\n    const res = this.store.set(this._options.store_key!, data);\n    this.change$.next(data);\n    return res;\n  }\n\n  get(type?: any): any;\n  get<T extends ITokenModel>(type?: new () => T): T;\n  get<T extends ITokenModel>(type?: new () => T): T {\n    const data = this.store.get(this._options.store_key!);\n    return type ? (Object.assign(new type(), data) as T) : (data as T);\n  }\n\n  clear(options: { onlyToken: boolean } = { onlyToken: false }): void {\n    let data: ITokenModel | null = null;\n    if (options.onlyToken === true) {\n      data = this.get() as ITokenModel;\n      data.token = ``;\n      this.set(data);\n    } else {\n      this.store.remove(this._options.store_key!);\n    }\n    this.change$.next(data);\n  }\n\n  change(): Observable<ITokenModel | null> {\n    return this.change$.pipe(share());\n  }\n\n  private builderRefresh(): void {\n    const { refreshTime, refreshOffset } = this._options;\n    this.cleanRefresh();\n    this.interval$ = interval(refreshTime)\n      .pipe(\n        map(() => {\n          const item = this.get() as ITokenModel;\n          const expired = item.expired || item.exp || 0;\n          if (expired <= 0) {\n            return null;\n          }\n\n          const curTime = new Date().valueOf() + refreshOffset!;\n          return expired <= curTime ? item : null;\n        }),\n        filter(v => v != null)\n      )\n      .subscribe(res => this.refresh$.next(res!));\n  }\n\n  private cleanRefresh(): void {\n    if (this.interval$ && !this.interval$.closed) {\n      this.interval$.unsubscribe();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.cleanRefresh();\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { YunzaiAuthConfig } from '@yelon/util/config';\n\nimport { YA_SERVICE_TOKEN_FACTORY } from './token.service';\n\nexport const YA_SERVICE_TOKEN = new InjectionToken<ITokenService>('YA_SERVICE_TOKEN', {\n  providedIn: 'root',\n  factory: YA_SERVICE_TOKEN_FACTORY\n});\n\nexport interface ITokenModel {\n  [key: string]: any;\n\n  access_token: string | null | undefined;\n  // 秒\n  expires_in?: number;\n  refresh_token?: string;\n  scope?: string;\n  token_type?: string;\n}\n\nexport interface AuthReferrer {\n  url?: string | null | undefined;\n}\n\nexport interface ITokenService {\n  /**\n   * 授权失败后跳转路由路径（支持外部链接地址），通过设置[全局配置](https://ng.yunzainfo.com/docs/global-config)来改变\n   */\n  readonly login_url: string | undefined;\n\n  /**\n   * 当前请求页面的来源页面的地址\n   */\n  readonly referrer?: AuthReferrer;\n\n  readonly options: YunzaiAuthConfig;\n\n  /**\n   * 订阅刷新，订阅时会自动产生一个定时器，每隔一段时间进行一些校验\n   * - **注意** 会多次触发，请务必做好业务判断\n   */\n  readonly refresh: Observable<ITokenModel>;\n\n  /**\n   * 设置 Token 信息，当用户 Token 发生变动时都需要调用此方法重新刷新\n   * - 如果需要监听过期，需要传递 `expired` 值\n   */\n  set(data: ITokenModel | null): boolean;\n\n  /**\n   * 获取Token，形式包括：\n   * - `get()` 获取 Simple Token\n   * - `get<JWTTokenModel>(JWTTokenModel)` 获取 JWT Token\n   */\n  get(type?: any): ITokenModel | null;\n\n  /**\n   * 获取Token，形式包括：\n   * - `get()` 获取 Simple Token\n   * - `get<JWTTokenModel>(JWTTokenModel)` 获取 JWT Token\n   */\n  get<T extends ITokenModel>(type?: any): T;\n\n  /**\n   * 清除 Token 信息，当用户退出登录时调用。\n   * ```\n   * // 清除所有 Token 信息\n   * tokenService.clear();\n   * // 只清除 token 字段\n   * tokenService.clear({ onlyToken: true });\n   * ```\n   */\n  clear(options?: { onlyToken: boolean }): void;\n\n  /**\n   * 订阅 Token 对象变更通知\n   */\n  change(): Observable<ITokenModel | null>;\n}\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, Observer } from 'rxjs';\n\nimport { YA_SERVICE_TOKEN, ITokenModel, ITokenService } from '../token/interface';\n\nconst OPENTYPE = '_yelonAuthSocialType';\nconst HREFCALLBACK = '_yelonAuthSocialCallbackByHref';\n\nexport type SocialOpenType = 'href' | 'window';\n\n@Injectable()\nexport class SocialService implements OnDestroy {\n  private _win: Window | null = null;\n  private _winTime: any;\n  private observer!: Observer<ITokenModel | null>;\n\n  constructor(\n    @Inject(YA_SERVICE_TOKEN) private tokenService: ITokenService,\n    @Inject(DOCUMENT) private doc: any,\n    private router: Router\n  ) {}\n\n  /**\n   * 使用窗体打开授权页，返回值是 `Observable<ITokenModel>` 用于订阅授权后返回的结果\n   *\n   * @param url 获取授权地址\n   * @param callback 回调路由地址\n   * @param options.windowFeatures 等同 `window.open` 的 `features` 参数值\n   */\n  login(\n    url: string,\n    callback?: string,\n    options?: {\n      type?: 'window';\n      windowFeatures?: string;\n    }\n  ): Observable<ITokenModel>;\n\n  /**\n   * 跳转至授权页\n   *\n   * @param url 获取授权地址\n   * @param callback 回调路由地址\n   */\n  login(\n    url: string,\n    callback?: string,\n    options?: {\n      type?: 'href';\n    }\n  ): void;\n\n  /**\n   * 跳转至登录页，若为 `type=window` 时，返回值是 `Observable<ITokenModel>`\n   *\n   * @param url 获取授权地址\n   * @param callback 当 `type=href` 成功时的回调路由地址\n   * @param options.type 打开方式，默认 `window`\n   * @param options.windowFeatures 等同 `window.open` 的 `features` 参数值\n   */\n  login(\n    url: string,\n    callback: string = '/',\n    options: {\n      type?: SocialOpenType;\n      windowFeatures?: string;\n    } = {}\n  ): Observable<ITokenModel | null> | void {\n    options = {\n      type: 'window',\n      windowFeatures: 'location=yes,height=570,width=520,scrollbars=yes,status=yes',\n      ...options\n    };\n    localStorage.setItem(OPENTYPE, options.type!);\n    localStorage.setItem(HREFCALLBACK, callback);\n    if (options.type === 'href') {\n      this.doc.location.href = url;\n      return;\n    }\n\n    this._win = window.open(url, '_blank', options.windowFeatures);\n    this._winTime = setInterval(() => {\n      if (this._win && this._win.closed) {\n        this.ngOnDestroy();\n\n        let model = this.tokenService.get();\n        if (model && !model.token) model = null;\n\n        // 触发变更通知\n        if (model) {\n          this.tokenService.set(model);\n        }\n\n        this.observer.next(model);\n        this.observer.complete();\n      }\n    }, 100);\n    return new Observable((observer: Observer<ITokenModel | null>) => {\n      this.observer = observer;\n    });\n  }\n\n  /**\n   * 授权成功后的回调处理\n   *\n   * @param rawData 指定回调认证信息，为空时从根据当前URL解析\n   */\n  callback(rawData?: ITokenModel | string | null): ITokenModel {\n    // from uri\n    if (!rawData && this.router.url.indexOf('?') === -1) {\n      throw new Error(`url muse contain a ?`);\n    }\n    // parse\n    let data: ITokenModel = { access_token: `` };\n    if (typeof rawData === 'string') {\n      const rightUrl = rawData.split('?')[1].split('#')[0];\n      data = this.router.parseUrl(`./?${rightUrl}`).queryParams as ITokenModel;\n    } else {\n      data = rawData as ITokenModel;\n    }\n\n    if (!data || !data.token) throw new Error(`invalide token data`);\n    this.tokenService.set(data);\n\n    const url = localStorage.getItem(HREFCALLBACK) || '/';\n    localStorage.removeItem(HREFCALLBACK);\n    const type = localStorage.getItem(OPENTYPE);\n    localStorage.removeItem(OPENTYPE);\n    if (type === 'window') {\n      window.close();\n    } else {\n      this.router.navigateByUrl(url);\n    }\n\n    return data;\n  }\n\n  ngOnDestroy(): void {\n    clearInterval(this._winTime);\n    this._winTime = null;\n  }\n}\n","import { IStore } from './interface';\nimport { ITokenModel } from '../token/interface';\n\n/**\n * 内存存储，关掉浏览器标签后**丢失**。\n *\n * ```ts\n * // global-config.module.ts\n * { provide: YA_STORE_TOKEN, useClass: MemoryStore }\n * ```\n */\nexport class MemoryStore implements IStore {\n  private cache: { [key: string]: ITokenModel | null } = {};\n\n  get(key: string): ITokenModel {\n    return this.cache[key] || ({} as ITokenModel);\n  }\n\n  set(key: string, value: ITokenModel): boolean {\n    this.cache[key] = value;\n    return true;\n  }\n\n  remove(key: string): void {\n    this.cache[key] = null;\n  }\n}\n","import { IStore } from './interface';\nimport { ITokenModel } from '../token/interface';\n\n/**\n * `sessionStorage` storage, **lost after closing the browser**.\n *\n * ```ts\n * // global-config.module.ts\n * { provide: YA_STORE_TOKEN, useClass: SessionStorageStore }\n * ```\n */\nexport class SessionStorageStore implements IStore {\n  get(key: string): ITokenModel {\n    return JSON.parse(sessionStorage.getItem(key) || '{}') || {};\n  }\n\n  set(key: string, value: ITokenModel | null): boolean {\n    sessionStorage.setItem(key, JSON.stringify(value));\n    return true;\n  }\n\n  remove(key: string): void {\n    sessionStorage.removeItem(key);\n  }\n}\n","import { CookieService } from '@yelon/util/browser';\n\nimport { IStore } from './interface';\nimport { ITokenModel } from '../token/interface';\n\n/**\n * `cookie` storage\n *\n * ```ts\n * // global-config.module.ts\n * { provide: YA_STORE_TOKEN, useClass: CookieStorageStore, deps: [CookieService] }\n * ```\n */\nexport class CookieStorageStore implements IStore {\n  constructor(private srv: CookieService) {}\n\n  get(key: string): ITokenModel {\n    try {\n      return JSON.parse(this.srv.get(key) || '{}');\n    } catch (ex) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        console.error(`CookieStorageStore: Invalid key-value format ${key}`, ex);\n      }\n      return {} as ITokenModel;\n    }\n  }\n\n  set(key: string, value: ITokenModel | null | undefined): boolean {\n    const expires = (value?.expired ?? 0) / 1e3;\n    this.srv.put(key, JSON.stringify(value ?? {}), { expires });\n    return true;\n  }\n\n  remove(key: string): void {\n    this.srv.remove(key);\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport { Injector } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { YunzaiAuthConfig } from '@yelon/util/config';\n\nimport { YA_SERVICE_TOKEN, ITokenService } from './interface';\nimport { JWTTokenModel } from './jwt/jwt.model';\nimport { SimpleTokenModel } from './simple/simple.model';\n\nexport function CheckSimple(model: SimpleTokenModel | null): boolean {\n  return model != null && typeof model.access_token === 'string' && model.access_token.length > 0;\n}\n\nexport function CheckJwt(model: JWTTokenModel, offset: number): boolean {\n  try {\n    return model != null && !!model.access_token && !model.isExpired(offset);\n  } catch (err: unknown) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      console.warn(`${(err as { message: string }).message}, jump to login_url`);\n    }\n    return false;\n  }\n}\n\nexport function ToLogin(options: YunzaiAuthConfig, injector: Injector, url?: string): void {\n  const router = injector.get<Router>(Router);\n  (injector.get(YA_SERVICE_TOKEN) as ITokenService).referrer!.url = url || router.url;\n  if (options.token_invalid_redirect === true) {\n    setTimeout(() => {\n      if (/^https?:\\/\\//g.test(options.login_url!)) {\n        injector.get(DOCUMENT).location.href = options.login_url as string;\n      } else {\n        router.navigate([options.login_url]);\n      }\n    });\n  }\n}\n","import { HttpContextToken } from '@angular/common/http';\n\n/**\n * Whether to allow anonymous login\n *\n * 是否允许匿名登录\n *\n * @example\n * this.http.post(`login`, {\n *  name: 'devcui', pwd: '123456'\n * }, {\n *  context: new HttpContext().set(ALLOW_ANONYMOUS, true)\n * })\n */\nexport const ALLOW_ANONYMOUS = new HttpContextToken(() => false);\n","import {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HTTP_INTERCEPTORS,\n  HttpParams\n} from '@angular/common/http';\nimport { Injectable, Injector, Optional } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport { YunzaiAuthConfig, YunzaiConfigService } from '@yelon/util/config';\n\nimport { ToLogin } from './helper';\nimport { ITokenModel } from './interface';\nimport { mergeConfig } from '../auth.config';\nimport { ALLOW_ANONYMOUS } from '../token';\n\nclass HttpAuthInterceptorHandler implements HttpHandler {\n  constructor(\n    private next: HttpHandler,\n    private interceptor: HttpInterceptor\n  ) {}\n\n  handle(req: HttpRequest<any>): Observable<HttpEvent<any>> {\n    return this.interceptor.intercept(req, this.next);\n  }\n}\n\n@Injectable()\nexport abstract class BaseInterceptor implements HttpInterceptor {\n  constructor(@Optional() protected injector: Injector) {}\n\n  protected model!: ITokenModel;\n\n  abstract isAuth(options: YunzaiAuthConfig): boolean;\n\n  abstract setReq(req: HttpRequest<any>, options: YunzaiAuthConfig): HttpRequest<any>;\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (req.context.get(ALLOW_ANONYMOUS)) return next.handle(req);\n\n    const options = mergeConfig(this.injector.get(YunzaiConfigService));\n    if (Array.isArray(options.ignores)) {\n      for (const item of options.ignores) {\n        if (item.test(req.url)) return next.handle(req);\n      }\n    }\n\n    const ignoreKey = options.allow_anonymous_key!;\n    let ignored = false;\n    let params = req.params;\n    let url = req.url;\n    if (req.params.has(ignoreKey)) {\n      params = req.params.delete(ignoreKey);\n      ignored = true;\n    }\n    const urlArr = req.url.split('?');\n    if (urlArr.length > 1) {\n      const queryStringParams = new HttpParams({ fromString: urlArr[1] });\n      if (queryStringParams.has(ignoreKey)) {\n        const queryString = queryStringParams.delete(ignoreKey).toString();\n        url = queryString.length > 0 ? `${urlArr[0]}?${queryString}` : urlArr[0];\n        ignored = true;\n      }\n    }\n    if (ignored) {\n      return next.handle(req.clone({ params, url }));\n    }\n\n    if (this.isAuth(options)) {\n      req = this.setReq(req, options);\n    } else {\n      ToLogin(options, this.injector);\n      // Interrupt Http request, so need to generate a new Observable\n      const err$ = new Observable((observer: Observer<HttpEvent<any>>) => {\n        let statusText = '';\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          statusText = `来自 @yelon/auth 的拦截，所请求URL未授权，若是登录API可加入 [url?_allow_anonymous=true] 来表示忽略校验，更多方法请参考： https://ng.yunzainfo.com/auth/getting-started#YunzaiAuthConfig\\nThe interception from @yelon/auth, the requested URL is not authorized. If the login API can add [url?_allow_anonymous=true] to ignore the check, please refer to: https://ng.yunzainfo.com/auth/getting-started#YunzaiAuthConfig`;\n        }\n        const res = new HttpErrorResponse({\n          url: req.url,\n          headers: req.headers,\n          status: 401,\n          statusText\n        });\n        observer.error(res);\n      });\n      if (options.executeOtherInterceptors) {\n        const interceptors = this.injector.get(HTTP_INTERCEPTORS, []);\n        const lastInterceptors = interceptors.slice(interceptors.indexOf(this) + 1);\n        if (lastInterceptors.length > 0) {\n          const chain = lastInterceptors.reduceRight(\n            (_next, _interceptor) => new HttpAuthInterceptorHandler(_next, _interceptor),\n            {\n              handle: (_: HttpRequest<any>) => err$\n            }\n          );\n          return chain.handle(req);\n        }\n      }\n      return err$;\n    }\n    return next.handle(req);\n  }\n}\n","export function urlBase64Decode(str: string): string {\n  let output = str.replace(/-/g, '+').replace(/_/g, '/');\n  switch (output.length % 4) {\n    case 0: {\n      break;\n    }\n    case 2: {\n      output += '==';\n      break;\n    }\n    case 3: {\n      output += '=';\n      break;\n    }\n    default: {\n      throw new Error(`'atob' failed: The string to be decoded is not correctly encoded.`);\n    }\n  }\n  return b64DecodeUnicode(output);\n}\n\nfunction b64decode(str: string): string {\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  let output = '';\n\n  str = String(str).replace(/=+$/, '');\n\n  for (\n    // initialize result and counters\n\n    let bc = 0, bs: any, buffer: any, idx = 0;\n    // get next character\n    (buffer = str.charAt(idx++));\n    // character found in table? initialize bit storage and add its ascii value;\n    ~buffer &&\n    ((bs = bc % 4 ? bs * 64 + buffer : buffer),\n    // and if not first of each 4 characters,\n    // convert the first 8 bits to one ascii character\n    bc++ % 4)\n      ? (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6))))\n      : 0\n  ) {\n    // try to find character in table (0-63, not found => -1)\n    buffer = chars.indexOf(buffer);\n  }\n  return output;\n}\n\n// https://developer.mozilla.org/en/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_Unicode_Problem\nfunction b64DecodeUnicode(str: string): string {\n  return decodeURIComponent(\n    Array.prototype.map\n      .call(b64decode(str), (c: string) => {\n        return `%${`00${c.charCodeAt(0).toString(16)}`.slice(-2)}`;\n      })\n      .join('')\n  );\n}\n","import { urlBase64Decode } from './jwt.helper';\nimport { ITokenModel } from '../interface';\n\nexport interface JWT {\n  /**\n   * Issuerd\n   */\n  iss: string;\n  /**\n   * Issued At\n   */\n  iat: string;\n  /**\n   * Subject\n   */\n  sub: string;\n  /**\n   * Expiration Time\n   */\n  exp: number;\n  /**\n   * Audience\n   */\n  aud: string;\n  /**\n   * Not Before\n   */\n  nbf: string;\n  /**\n   * JWT ID\n   */\n  jti: string;\n\n  [key: string]: any;\n  [key: number]: any;\n}\n\nexport class JWTTokenModel implements ITokenModel {\n  [key: string]: any;\n\n  access_token: string | null | undefined;\n\n  expires_in?: number;\n\n  /**\n   * 获取载荷信息\n   */\n  get payload(): JWT {\n    const parts = (this.access_token || '').split('.');\n    if (parts.length !== 3) throw new Error('JWT must have 3 parts');\n\n    const decoded = urlBase64Decode(parts[1]);\n    return JSON.parse(decoded);\n  }\n\n  /**\n   * 获取过期时间戳（单位：ms）\n   */\n  get exp(): number | null {\n    const decoded = this.payload;\n    if (!decoded.hasOwnProperty('exp')) return null;\n    const date = new Date(0);\n    date.setUTCSeconds(decoded.exp);\n    return date.valueOf();\n  }\n\n  /**\n   * 检查Token是否过期，当`payload` 包含 `exp` 字段时有效，若无 `exp` 字段直接返回 `null`\n   *\n   * @param offsetSeconds 偏移量\n   */\n  isExpired(offsetSeconds: number = 0): boolean | null {\n    const exp = this.exp;\n    if (exp == null) return null;\n\n    return !(exp > new Date().valueOf() + offsetSeconds * 1000);\n  }\n}\n","import { HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { YunzaiAuthConfig } from '@yelon/util/config';\n\nimport { JWTTokenModel } from './jwt.model';\nimport { BaseInterceptor } from '../base.interceptor';\nimport { CheckJwt } from '../helper';\nimport { YA_SERVICE_TOKEN } from '../interface';\n\n/**\n * JWT 拦截器\n *\n * ```\n * // app.module.ts\n * { provide: HTTP_INTERCEPTORS, useClass: JWTInterceptor, multi: true}\n * ```\n */\n@Injectable()\nexport class JWTInterceptor extends BaseInterceptor {\n  isAuth(options: YunzaiAuthConfig): boolean {\n    this.model = this.injector.get(YA_SERVICE_TOKEN).get<JWTTokenModel>(JWTTokenModel);\n    return CheckJwt(this.model as JWTTokenModel, options.token_exp_offset!);\n  }\n\n  setReq(req: HttpRequest<any>, _options: YunzaiAuthConfig): HttpRequest<any> {\n    return req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${this.model.access_token}`\n      }\n    });\n  }\n}\n","import { Inject, Injectable, Injector, inject } from '@angular/core';\nimport { CanActivateChildFn, CanActivateFn, CanMatchFn } from '@angular/router';\n\nimport { JWTTokenModel } from './jwt.model';\nimport { CheckJwt, ToLogin } from '../helper';\nimport { YA_SERVICE_TOKEN, ITokenService } from '../interface';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthJWTGuardService {\n  constructor(\n    @Inject(YA_SERVICE_TOKEN) private srv: ITokenService,\n    private injector: Injector\n  ) {}\n\n  process(url?: string): boolean {\n    const cog = this.srv.options;\n    const res = CheckJwt(this.srv.get<JWTTokenModel>(JWTTokenModel), cog.token_exp_offset!);\n    if (!res) {\n      ToLogin(cog, this.injector, url);\n    }\n    return res;\n  }\n}\n\n/**\n * JWT 路由守卫, [ACL Document](https://ng.yunzainfo.com/auth/guard).\n *\n * ```ts\n * data: {\n *  path: 'home',\n *  canActivate: [ authJWTCanActivate ],\n *  data: { guard: 'user1' }\n * }\n * ```\n */\nexport const authJWTCanActivate: CanActivateFn = (_, state) => inject(AuthJWTGuardService).process(state.url);\n\n/**\n * JWT 路由守卫, [ACL Document](https://ng.yunzainfo.com/auth/guard).\n *\n * ```ts\n * data: {\n *  path: 'home',\n *  canActivateChild: [ authJWTCanActivateChild ],\n *  data: { guard: 'user1' }\n * }\n * ```\n */\nexport const authJWTCanActivateChild: CanActivateChildFn = (_, state) => inject(AuthJWTGuardService).process(state.url);\n\n/**\n * JWT 路由守卫, [ACL Document](https://ng.yunzainfo.com/auth/guard).\n *\n * ```ts\n * data: {\n *  path: 'home',\n *  canMatch: [ authJWTCanMatch ],\n *  data: { guard: 'user1' }\n * }\n * ```\n */\nexport const authJWTCanMatch: CanMatchFn = route => inject(AuthJWTGuardService).process(route.path);\n","import { ITokenModel } from '../interface';\n\nexport class SimpleTokenModel implements ITokenModel {\n  [key: string]: any;\n\n  access_token: string | null | undefined;\n\n  expires_in?: number;\n}\n","import { HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { YunzaiAuthConfig } from '@yelon/util/config';\nimport { log } from '@yelon/util/other';\n\nimport { SimpleTokenModel } from './simple.model';\nimport { BaseInterceptor } from '../base.interceptor';\nimport { CheckSimple } from '../helper';\nimport { YA_SERVICE_TOKEN } from '../interface';\n\n/**\n * Simple 拦截器\n *\n * ```\n * // app.module.ts\n * { provide: HTTP_INTERCEPTORS, useClass: SimpleInterceptor, multi: true}\n * ```\n */\n@Injectable()\nexport class SimpleInterceptor extends BaseInterceptor {\n  isAuth(_options: YunzaiAuthConfig): boolean {\n    this.model = this.injector.get(YA_SERVICE_TOKEN).get() as SimpleTokenModel;\n    return CheckSimple(this.model as SimpleTokenModel);\n  }\n\n  setReq(req: HttpRequest<any>, options: YunzaiAuthConfig): HttpRequest<any> {\n    const { token_send_template, token_send_key } = options;\n    const access_token = token_send_template!.replace(/\\$\\{([\\w]+)\\}/g, (_: string, g) => this.model[g]);\n    log('simple.interceptor.ts: release', token_send_template, token_send_key, access_token);\n    switch (options.token_send_place) {\n      case 'header':\n        const obj: any = {};\n        obj[token_send_key!] = access_token;\n        req = req.clone({\n          setHeaders: obj\n        });\n        break;\n      case 'body':\n        const body = req.body || {};\n        body[token_send_key!] = access_token;\n        req = req.clone({\n          body\n        });\n        break;\n      case 'url':\n        req = req.clone({\n          params: req.params.append(token_send_key!, access_token)\n        });\n        break;\n    }\n    return req;\n  }\n}\n","import { Inject, Injectable, Injector, inject } from '@angular/core';\nimport { CanActivateChildFn, CanActivateFn, CanMatchFn } from '@angular/router';\n\nimport { SimpleTokenModel } from './simple.model';\nimport { CheckSimple, ToLogin } from '../helper';\nimport { YA_SERVICE_TOKEN, ITokenService } from '../interface';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthSimpleGuardService {\n  constructor(\n    @Inject(YA_SERVICE_TOKEN) private srv: ITokenService,\n    private injector: Injector\n  ) {}\n\n  process(url?: string): boolean {\n    const res = CheckSimple(this.srv.get() as SimpleTokenModel);\n    if (!res) {\n      ToLogin(this.srv.options, this.injector, url);\n    }\n    return res;\n  }\n}\n\n/**\n * Simple 路由守卫, [ACL Document](https://ng.yunzainfo.com/auth/guard).\n *\n * ```ts\n * data: {\n *  path: 'home',\n *  canActivate: [ authSimpleCanActivate ],\n *  data: { guard: 'user1' }\n * }\n * ```\n */\nexport const authSimpleCanActivate: CanActivateFn = (_, state) => inject(AuthSimpleGuardService).process(state.url);\n\n/**\n * Simple 路由守卫, [ACL Document](https://ng.yunzainfo.com/auth/guard).\n *\n * ```ts\n * data: {\n *  path: 'home',\n *  canActivateChild: [ authSimpleCanActivateChild ],\n *  data: { guard: 'user1' }\n * }\n * ```\n */\nexport const authSimpleCanActivateChild: CanActivateChildFn = (_, state) =>\n  inject(AuthSimpleGuardService).process(state.url);\n\n/**\n * Simple 路由守卫, [ACL Document](https://ng.yunzainfo.com/auth/guard).\n *\n * ```ts\n * data: {\n *  path: 'home',\n *  canMatch: [ authSimpleCanMatch ],\n *  data: { guard: 'user1' }\n * }\n * ```\n */\nexport const authSimpleCanMatch: CanMatchFn = route => inject(AuthSimpleGuardService).process(route.path);\n","import { NgModule } from '@angular/core';\n\n@NgModule({})\nexport class YelonAuthModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1"],"mappings":"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"}