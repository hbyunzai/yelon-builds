import { OnDestroy } from '@angular/core';
import type { SafeValue } from '@angular/platform-browser';
import type { CellOptions, CellTextResult, CellValue } from './cell.types';
import * as i0 from "@angular/core";
export declare class CellComponent implements OnDestroy {
    private readonly srv;
    private readonly router;
    private readonly renderer;
    private readonly imgSrv;
    private readonly win;
    private readonly el;
    private destroy$?;
    _text: import("@angular/core").WritableSignal<string | number | SafeValue | string[]>;
    _unit: import("@angular/core").WritableSignal<string | undefined>;
    _res: import("@angular/core").WritableSignal<CellTextResult | undefined>;
    showDefault: import("@angular/core").Signal<boolean>;
    value: import("@angular/core").ModelSignal<CellValue>;
    options: import("@angular/core").InputSignal<CellOptions | undefined>;
    loading: import("@angular/core").InputSignalWithTransform<boolean, unknown>;
    disabled: import("@angular/core").InputSignalWithTransform<boolean, unknown>;
    get safeOpt(): CellOptions;
    isText: import("@angular/core").Signal<boolean>;
    constructor();
    private setClass;
    _link(e: Event): void;
    _showImg(img: string): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<CellComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<CellComponent, "cell, [cell]", ["cell"], { "value": { "alias": "value"; "required": false; "isSignal": true; }; "options": { "alias": "options"; "required": false; "isSignal": true; }; "loading": { "alias": "loading"; "required": false; "isSignal": true; }; "disabled": { "alias": "disabled"; "required": false; "isSignal": true; }; }, { "value": "valueChange"; }, never, never, true, never>;
}
