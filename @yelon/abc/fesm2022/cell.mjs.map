{"version":3,"file":"cell.mjs","sources":["../../../../packages/abc/cell/cell.service.ts","../../../../packages/abc/cell/cell-host.directive.ts","../../../../packages/abc/cell/cell.component.ts","../../../../packages/abc/cell/cell.module.ts","../../../../packages/abc/cell/provide.ts","../../../../packages/abc/cell/cell.ts"],"sourcesContent":["import { Injectable, Type, inject } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { map, Observable, of } from 'rxjs';\n\nimport { yn } from '@yelon/theme';\nimport { YunzaiConfigService } from '@yelon/util/config';\nimport { formatDate } from '@yelon/util/date-time';\nimport { CurrencyService, formatMask } from '@yelon/util/format';\nimport { deepMerge } from '@yelon/util/other';\n\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\n\nimport type {\n  CellFuValue,\n  CellOptions,\n  CellTextResult,\n  CellTextUnit,\n  CellType,\n  CellWidget,\n  CellWidgetFn\n} from './cell.types';\n\n@Injectable({ providedIn: 'root' })\nexport class CellService {\n  private readonly nzI18n = inject(NzI18nService);\n  private readonly currency = inject(CurrencyService);\n  private readonly dom = inject(DomSanitizer);\n  private readonly configSrv = inject(YunzaiConfigService);\n  private globalOptions = this.configSrv.merge('cell', {\n    date: { format: 'yyyy-MM-dd HH:mm:ss' },\n    img: { size: 32 },\n    default: { text: '-' }\n  })!;\n  private widgets: Record<string, CellWidget> = {\n    date: {\n      type: 'fn',\n      ref: (value, opt) => {\n        return {\n          text: formatDate(value as string, opt.date!.format!, {\n            locale: this.nzI18n.getDateLocale(),\n            customFormat: this.configSrv.get('themePipe')?.dateFormatCustom\n          })\n        };\n      }\n    },\n    mega: {\n      type: 'fn',\n      ref: (value, opt) => {\n        const res = this.currency.mega(value as number, opt.mega);\n        return { text: res.value, unit: res.unitI18n };\n      }\n    },\n    currency: {\n      type: 'fn',\n      ref: (value, opt) => {\n        return { text: this.currency.format(value as number, opt.currency) };\n      }\n    },\n    cny: {\n      type: 'fn',\n      ref: (value, opt) => {\n        return { text: this.currency.cny(value as number, opt.cny) };\n      }\n    },\n    boolean: {\n      type: 'fn',\n      ref: (value, opt) => {\n        return { text: this.dom.bypassSecurityTrustHtml(yn(value as boolean, opt.boolean)) };\n      }\n    },\n    img: {\n      type: 'fn',\n      ref: value => {\n        return { text: Array.isArray(value) ? value : [value] };\n      }\n    }\n  };\n\n  registerWidget(key: string, widget: Type<unknown>): void {\n    this.widgets[key] = { type: 'widget', ref: widget };\n  }\n\n  getWidget(key: string): CellWidget | undefined {\n    return this.widgets[key];\n  }\n\n  private genType(value: unknown, options: CellOptions): CellType {\n    if (options.type != null) return options.type;\n\n    const typeOf = typeof value;\n    // When is timestamp\n    if (typeOf === 'number' && /^[0-9]{13}$/g.test(value as string)) return 'date';\n    if (value instanceof Date || options.date != null) return 'date';\n\n    // Auto detection\n    if (options.widget != null) return 'widget';\n    else if (options.mega != null) return 'mega';\n    else if (options.currency != null) return 'currency';\n    else if (options.cny != null) return 'cny';\n    else if (options.img != null) return 'img';\n    else if (options.link != null) return 'link';\n    else if (options.html != null) return 'html';\n    else if (options.badge != null) return 'badge';\n    else if (options.tag != null) return 'tag';\n    else if (options.checkbox != null) return 'checkbox';\n    else if (options.radio != null) return 'radio';\n    else if (options.enum != null) return 'enum';\n    else if (typeOf === 'number') return 'number';\n    else if (typeOf === 'boolean' || options.boolean != null) return 'boolean';\n    else return 'string';\n  }\n\n  fixOptions(options?: CellOptions): CellOptions {\n    return deepMerge({}, this.globalOptions, options);\n  }\n\n  get(value: unknown, options?: CellOptions): Observable<CellTextResult> {\n    const type = this.genType(value, { ...options });\n    const opt = this.fixOptions(options);\n    opt.type = type;\n    const isSafeHtml =\n      typeof value === 'object' &&\n      typeof (value as any)?.getTypeName === 'function' &&\n      (value as any)?.getTypeName() != null;\n\n    let res: CellTextResult = {\n      result:\n        typeof value === 'object' && !isSafeHtml\n          ? (value as CellTextUnit)\n          : { text: value == null ? '' : isSafeHtml ? value : `${value}` },\n      options: opt\n    };\n\n    const widget = this.widgets[type];\n    if (widget?.type === 'fn') {\n      res.result = (widget.ref as CellWidgetFn)(value, opt);\n    }\n\n    return (typeof value === 'function' ? (value as CellFuValue)(value, opt) : of(res.result)).pipe(\n      map(text => {\n        res.result = text;\n        let dictData: { tooltip?: string } | undefined;\n        switch (type) {\n          case 'badge':\n            dictData = (opt.badge?.data ?? {})[value as string];\n            res.result = { color: 'default', ...dictData };\n            break;\n          case 'tag':\n            dictData = (opt.tag?.data ?? {})[value as string];\n            res.result = dictData as CellTextUnit;\n            break;\n          case 'enum':\n            res.result = { text: (opt.enum ?? {})[value as string] };\n            break;\n          case 'html':\n            res.safeHtml = opt.html?.safe;\n            break;\n          case 'string':\n            if (isSafeHtml) res.safeHtml = 'safeHtml';\n            break;\n        }\n        if ((type === 'badge' || type === 'tag') && dictData?.tooltip != null) {\n          res.options.tooltip = dictData.tooltip;\n        }\n        if (opt.mask != null) {\n          res.result.text = formatMask(res.result.text as string, opt.mask);\n        }\n        return res;\n      })\n    );\n  }\n}\n","import { Directive, Type, ViewContainerRef, effect, inject, input } from '@angular/core';\n\nimport { warn } from '@yelon/util/other';\n\nimport { CellService } from './cell.service';\nimport { CellTextResult } from './cell.types';\n\n@Directive({\n  selector: '[cell-widget-host]'\n})\nexport class CellHostDirective {\n  private readonly srv = inject(CellService);\n  private readonly vcr = inject(ViewContainerRef);\n\n  data = input.required<CellTextResult>();\n\n  constructor() {\n    effect(() => {\n      const data = this.data();\n      const widget = data.options.widget!;\n      const componentType = this.srv.getWidget(widget.key!)?.ref as Type<unknown>;\n      if (componentType == null) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          warn(`cell: No widget for type \"${widget.key}\"`);\n        }\n        return;\n      }\n\n      this.vcr.clear();\n      const componentRef = this.vcr.createComponent(componentType);\n      (componentRef.instance as { data: CellTextResult }).data = data;\n    });\n  }\n}\n","import { NgTemplateOutlet } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  OnDestroy,\n  Renderer2,\n  ViewEncapsulation,\n  booleanAttribute,\n  computed,\n  effect,\n  inject,\n  input,\n  model,\n  signal\n} from '@angular/core';\nimport { takeUntilDestroyed, toObservable } from '@angular/core/rxjs-interop';\nimport { FormsModule } from '@angular/forms';\nimport type { SafeValue } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { combineLatest, Subscription, take } from 'rxjs';\n\nimport { updateHostClass } from '@yelon/util/browser';\nimport { WINDOW } from '@yelon/util/token';\n\nimport { NzBadgeComponent } from 'ng-zorro-antd/badge';\nimport { NzCheckboxComponent } from 'ng-zorro-antd/checkbox';\nimport { NzIconDirective } from 'ng-zorro-antd/icon';\nimport { NzImage, NzImageModule, NzImageService } from 'ng-zorro-antd/image';\nimport { NzRadioComponent } from 'ng-zorro-antd/radio';\nimport { NzTagComponent } from 'ng-zorro-antd/tag';\nimport { NzTooltipDirective } from 'ng-zorro-antd/tooltip';\n\nimport { CellHostDirective } from './cell-host.directive';\nimport { CellService } from './cell.service';\nimport type { CellDefaultText, CellOptions, CellTextResult, CellValue } from './cell.types';\n\n@Component({\n  selector: 'cell, [cell]',\n  template: `\n    <ng-template #text>\n      @let res = _res();\n      @let text = _text();\n      @switch (safeOpt.type) {\n        @case ('checkbox') {\n          <label nz-checkbox [nzDisabled]=\"disabled()\" [ngModel]=\"value()\" (ngModelChange)=\"value.set($event)\">\n            {{ safeOpt.checkbox?.label }}\n          </label>\n        }\n        @case ('radio') {\n          <label nz-radio [nzDisabled]=\"disabled()\" [ngModel]=\"value()\" (ngModelChange)=\"value.set($event)\">\n            {{ safeOpt.radio?.label }}\n          </label>\n        }\n        @case ('link') {\n          <a (click)=\"_link($event)\" [attr.target]=\"safeOpt.link?.target\" [attr.title]=\"value()\" [innerHTML]=\"text\"></a>\n        }\n        @case ('tag') {\n          <nz-tag [nzColor]=\"res?.result?.color\">\n            <span [innerHTML]=\"text\"></span>\n          </nz-tag>\n        }\n        @case ('badge') {\n          <nz-badge [nzStatus]=\"res?.result?.color\" nzText=\"{{ text }}\" />\n        }\n        @case ('widget') {\n          @if (res) {\n            <ng-template cell-widget-host [data]=\"res\" />\n          }\n        }\n        @case ('img') {\n          @for (i of $any(text); track $index) {\n            @let img = safeOpt.img;\n            <img\n              [attr.src]=\"i\"\n              [attr.height]=\"img?.size\"\n              [attr.width]=\"img?.size\"\n              (click)=\"_showImg(i)\"\n              class=\"img\"\n              [class.point]=\"img?.big\"\n            />\n          }\n        }\n        @default {\n          @if (isText()) {\n            <span [innerText]=\"text\" [attr.title]=\"value()\"></span>\n          } @else {\n            <span [innerHTML]=\"text\" [attr.title]=\"value()\"></span>\n          }\n          @if (_unit()) {\n            <span class=\"unit\">{{ _unit() }}</span>\n          }\n        }\n      }\n    </ng-template>\n    <ng-template #textWrap>\n      @if (showDefault()) {\n        {{ safeOpt.default?.text }}\n      } @else {\n        @if (safeOpt.tooltip) {\n          <span [nz-tooltip]=\"safeOpt.tooltip\">\n            <ng-template [ngTemplateOutlet]=\"text\" />\n          </span>\n        } @else {\n          <ng-template [ngTemplateOutlet]=\"text\" />\n        }\n      }\n    </ng-template>\n    @if (loading()) {\n      <nz-icon nzType=\"loading\" />\n    } @else {\n      <ng-template [ngTemplateOutlet]=\"textWrap\" />\n    }\n  `,\n  exportAs: 'cell',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  imports: [\n    FormsModule,\n    NgTemplateOutlet,\n    NzCheckboxComponent,\n    NzRadioComponent,\n    NzIconDirective,\n    NzTagComponent,\n    NzBadgeComponent,\n    NzTooltipDirective,\n    NzImageModule,\n    CellHostDirective\n  ]\n})\nexport class CellComponent implements OnDestroy {\n  private readonly srv = inject(CellService);\n  private readonly router = inject(Router);\n  private readonly renderer = inject(Renderer2);\n  private readonly imgSrv = inject(NzImageService);\n  private readonly win = inject(WINDOW);\n  private readonly el: HTMLElement = inject(ElementRef).nativeElement;\n\n  private destroy$?: Subscription;\n\n  _text = signal<string | SafeValue | string[] | number>('');\n  _unit = signal<string | undefined>(undefined);\n  _res = signal<CellTextResult | undefined>(undefined);\n  showDefault = computed(() => this.value() == (this.safeOpt.default as CellDefaultText)?.condition);\n\n  value = model<CellValue>();\n  options = input<CellOptions>();\n  loading = input(false, { transform: booleanAttribute });\n  disabled = input(false, { transform: booleanAttribute });\n\n  get safeOpt(): CellOptions {\n    return this._res()?.options ?? {};\n  }\n\n  isText = computed(() => this._res()?.safeHtml === 'text');\n\n  constructor() {\n    combineLatest([toObservable(this.loading), toObservable(this.disabled)])\n      .pipe(takeUntilDestroyed())\n      .subscribe(() => this.setClass());\n\n    effect(() => {\n      const v = this.value();\n      const o = this.options();\n      this.destroy$?.unsubscribe();\n      this.destroy$ = this.srv\n        .get(v, o)\n        .pipe(take(1))\n        .subscribe(res => {\n          this._res.set(res);\n          this._text.set(res.result?.text ?? '');\n          this._unit.set(res.result?.unit ?? this.safeOpt?.unit);\n          this.setClass();\n        });\n    });\n  }\n\n  private setClass(): void {\n    const { el, renderer } = this;\n    const { renderType, size, type } = this.safeOpt;\n    updateHostClass(el, renderer, {\n      [`cell`]: true,\n      [`cell__${renderType}`]: renderType != null,\n      [`cell__${size}`]: size != null,\n      [`cell__has-unit`]: this._unit(),\n      [`cell__has-default`]: this.showDefault(),\n      [`cell__disabled`]: this.disabled()\n    });\n    el.setAttribute('data-type', `${type}`);\n  }\n\n  _link(e: Event): void {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (this.disabled()) return;\n\n    const link = this.safeOpt.link;\n    const url = link?.url;\n    if (url == null) return;\n\n    if (/https?:\\/\\//g.test(url)) {\n      this.win.open(url, link?.target);\n    } else {\n      this.router.navigateByUrl(url);\n    }\n  }\n\n  _showImg(img: string): void {\n    const config = this.safeOpt.img;\n    if (config == null || config.big == null) return;\n\n    let idx = -1;\n    const list = (this._text() as string[]).map((p, index) => {\n      if (idx === -1 && p === img) idx = index;\n      return typeof config.big === 'function' ? config.big(p) : p;\n    });\n    this.imgSrv\n      .preview(\n        list.map(p => ({ src: p }) as NzImage),\n        config.previewOptions\n      )\n      .switchTo(idx);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$?.unsubscribe();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { NzBadgeModule } from 'ng-zorro-antd/badge';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { NzImageModule } from 'ng-zorro-antd/experimental/image';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { NzTagModule } from 'ng-zorro-antd/tag';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\n\nimport { CellHostDirective } from './cell-host.directive';\nimport { CellComponent } from './cell.component';\n\nconst COMPS = [CellComponent];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    NzCheckboxModule,\n    NzRadioModule,\n    NzBadgeModule,\n    NzTagModule,\n    NzToolTipModule,\n    NzIconModule,\n    NzImageModule,\n    ...COMPS,\n    CellHostDirective\n  ],\n  exports: COMPS\n})\nexport class CellModule {}\n","import { EnvironmentProviders, inject, makeEnvironmentProviders, provideEnvironmentInitializer } from '@angular/core';\n\nimport { CellService } from './cell.service';\n\nexport interface CellWidgetProvideConfig {\n  KEY: string;\n  type: any;\n}\n\n/**\n * Just only using Standalone widgets\n */\nexport function provideCellWidgets(...widgets: CellWidgetProvideConfig[]): EnvironmentProviders {\n  return makeEnvironmentProviders([\n    provideEnvironmentInitializer(() => {\n      const srv = inject(CellService);\n      widgets.forEach(widget => srv.registerWidget(widget.KEY, widget.type));\n    })\n  ]);\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["NzImageModule"],"mappings":"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"}