{"version":3,"file":"pie.mjs","sources":["../../../../packages/chart/pie/pie.component.ts","../../../../packages/chart/pie/pie.component.html","../../../../packages/chart/pie/pie.module.ts","../../../../packages/chart/pie/pie.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport type { Chart, Event } from '@antv/g2';\n\nimport { G2BaseComponent, G2InteractionType } from '@yelon/chart/core';\nimport { BooleanInput, InputBoolean, InputNumber, NumberInput } from '@yelon/util/decorator';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nexport interface G2PieData {\n  x: NzSafeAny;\n  y: number;\n  [key: string]: NzSafeAny;\n}\n\nexport interface G2PieClickItem {\n  item: G2PieData;\n  ev: Event;\n}\n\nexport interface G2PieRatio {\n  /** 占比文本，默认：`占比` */\n  text: string;\n  /** 反比文本，默认：`反比` */\n  inverse: string;\n  /** 正比颜色，默认使用 `color` 值 */\n  color: string;\n  /** 反比颜色，默认：`#F0F2F5` */\n  inverseColor: string;\n}\n\n@Component({\n  selector: 'g2-pie',\n  exportAs: 'g2Pie',\n  templateUrl: './pie.component.html',\n  host: {\n    '[class.g2-pie]': 'true',\n    '[class.g2-pie__legend-has]': 'hasLegend',\n    '[class.g2-pie__legend-block]': 'block',\n    '[class.g2-pie__mini]': 'isPercent'\n  },\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class G2PieComponent extends G2BaseComponent {\n  static ngAcceptInputType_height: NumberInput;\n  static ngAcceptInputType_animate: BooleanInput;\n  static ngAcceptInputType_hasLegend: BooleanInput;\n  static ngAcceptInputType_percent: NumberInput;\n  static ngAcceptInputType_tooltip: BooleanInput;\n  static ngAcceptInputType_lineWidth: NumberInput;\n  static ngAcceptInputType_blockMaxWidth: NumberInput;\n  static ngAcceptInputType_select: BooleanInput;\n\n  private percentColor!: (value: string) => string;\n  legendData: NzSafeAny[] = [];\n  isPercent = false;\n\n  // #region fields\n\n  @Input() @InputBoolean() animate = true;\n  @Input() color = 'rgba(24, 144, 255, 0.85)';\n  @Input() subTitle?: string | TemplateRef<void> | null;\n  @Input() total?: string | number | TemplateRef<void> | null;\n  @Input() @InputNumber() height = 0;\n  @Input() @InputBoolean() hasLegend = false;\n  @Input() inner = 0.75;\n  @Input() padding: number | number[] | 'auto' = [12, 0, 12, 0];\n  @Input() @InputNumber() percent?: number;\n  @Input() @InputBoolean() tooltip = true;\n  @Input() @InputNumber() lineWidth = 0;\n  @Input() @InputNumber() blockMaxWidth = 380;\n  @Input() @InputBoolean() select = true;\n  @Input() valueFormat?: (y: number) => string;\n  @Input() data: G2PieData[] = [];\n  @Input() colors?: string[];\n  @Input() interaction: G2InteractionType = 'none';\n  @Input() ratio: G2PieRatio = {\n    text: '占比',\n    inverse: '反比',\n    color: '',\n    inverseColor: '#F0F2F5'\n  };\n  @Output() readonly clickItem = new EventEmitter<G2PieClickItem>();\n\n  // #endregion\n\n  block: boolean = false;\n\n  private fixData(): void {\n    const { percent, color } = this;\n    this.isPercent = percent != null;\n    if (!this.isPercent) {\n      return;\n    }\n\n    this.select = false;\n    this.tooltip = false;\n    const { text, inverse, color: textColor, inverseColor } = this.ratio;\n    this.percentColor = (value: string) => (value === text ? textColor || color : inverseColor);\n    this.data = [\n      {\n        x: text,\n        y: percent!\n      },\n      {\n        x: inverse,\n        y: 100 - percent!\n      }\n    ];\n  }\n\n  private updateBlock(): void {\n    this.block = this._chart && this.hasLegend && this.el.nativeElement.clientWidth <= this.blockMaxWidth;\n    this.cdr.detectChanges();\n  }\n\n  install(): void {\n    const {\n      node,\n      height,\n      padding,\n      tooltip,\n      inner,\n      hasLegend,\n      interaction,\n      theme,\n      animate,\n      lineWidth,\n      isPercent,\n      percentColor,\n      colors\n    } = this;\n    const chart: Chart = (this._chart = new this.winG2.Chart({\n      container: node.nativeElement,\n      autoFit: true,\n      height,\n      padding,\n      theme\n    }));\n    chart.animate(animate);\n\n    if (!tooltip) {\n      chart.tooltip(false);\n    } else {\n      chart.tooltip({\n        showTitle: false,\n        showMarkers: false\n      });\n    }\n    if (interaction !== 'none') {\n      chart.interaction(interaction);\n    }\n    chart.axis(false).legend(false).coordinate('theta', { innerRadius: inner });\n    chart.filter('x', (_val: NzSafeAny, item: NzSafeAny) => item.checked !== false);\n    chart\n      .interval()\n      .adjust('stack')\n      .position('y')\n      .style({ lineWidth, stroke: '#fff' })\n      .color('x', isPercent ? percentColor : colors)\n      .tooltip('x*percent', (name: string, p: number) => ({\n        name,\n        value: `${hasLegend ? p : (p * 100).toFixed(2)} %`\n      }))\n      .state({});\n    chart.scale({\n      x: {\n        type: 'cat',\n        range: [0, 1]\n      }\n    });\n\n    chart\n      .on(`interval:click`, (ev: Event) => {\n        this.ngZone.run(() => this.clickItem.emit({ item: ev.data?.data, ev }));\n      })\n      .on('afterrender', () => {\n        this.ngZone.run(() => this.updateBlock());\n      });\n\n    this.ready.next(chart);\n\n    this.changeData();\n\n    chart.render();\n  }\n\n  changeData(): void {\n    const { _chart, data } = this;\n    if (!_chart || !Array.isArray(data) || data.length <= 0) return;\n\n    // 转化 percent\n    const totalSum = data.reduce((cur, item) => cur + item.y, 0);\n    for (const item of data) {\n      item.percent = totalSum === 0 ? 0 : item.y / totalSum;\n    }\n    _chart.changeData(data);\n\n    this.ngZone.run(() => this.genLegend());\n  }\n\n  private genLegend(): void {\n    const { hasLegend, isPercent, cdr, _chart } = this;\n    if (!hasLegend || isPercent) return;\n\n    this.legendData = _chart.geometries[0].dataArray.map((item: NzSafeAny) => {\n      const origin = item[0]._origin;\n      origin.color = item[0].color;\n      origin.checked = true;\n      origin.percent = (origin.percent * 100).toFixed(2);\n      return origin;\n    });\n\n    cdr.detectChanges();\n  }\n\n  _click(i: number): void {\n    const { legendData, _chart } = this;\n    legendData[i].checked = !legendData[i].checked;\n    _chart.render(true);\n  }\n\n  onChanges(): void {\n    this.fixData();\n  }\n}\n","<nz-skeleton *ngIf=\"!loaded\" />\n<div class=\"g2-pie__chart\">\n  <div #container></div>\n  <div *ngIf=\"subTitle || total\" class=\"g2-pie__total\">\n    <h4 *ngIf=\"subTitle\" class=\"g2-pie__total-title\">\n      <ng-container *nzStringTemplateOutlet=\"subTitle\">\n        <div [innerHTML]=\"subTitle\"></div>\n      </ng-container>\n    </h4>\n    <div *ngIf=\"total\" class=\"g2-pie__total-stat\">\n      <ng-container *nzStringTemplateOutlet=\"total\">\n        <div [innerHTML]=\"total\"></div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n<ul *ngIf=\"hasLegend && legendData?.length\" class=\"g2-pie__legend\">\n  <li *ngFor=\"let item of legendData; let index = index\" (click)=\"_click(index)\" class=\"g2-pie__legend-item\">\n    <span class=\"g2-pie__legend-dot\" [ngStyle]=\"{ 'background-color': !item.checked ? '#aaa' : item.color }\"></span>\n    <span class=\"g2-pie__legend-title\">{{ item.x }}</span>\n    <nz-divider nzType=\"vertical\" />\n    <span class=\"g2-pie__legend-percent\">{{ item.percent }}%</span>\n    <span class=\"g2-pie__legend-value\" [innerHTML]=\"valueFormat ? valueFormat(item.y) : item.y\"></span>\n  </li>\n</ul>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzDividerModule } from 'ng-zorro-antd/divider';\nimport { NzSkeletonModule } from 'ng-zorro-antd/skeleton';\n\nimport { G2PieComponent } from './pie.component';\n\nconst COMPONENTS = [G2PieComponent];\n\n@NgModule({\n  imports: [CommonModule, NzDividerModule, NzOutletModule, NzSkeletonModule],\n  declarations: COMPONENTS,\n  exports: COMPONENTS\n})\nexport class G2PieModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}